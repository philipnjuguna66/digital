"ID","post_author","post_date","post_date_gmt","post_content","post_title","post_excerpt","post_status","comment_status","ping_status","post_password","post_name","to_ping","pinged","post_modified","post_modified_gmt","post_content_filtered","post_parent","guid","menu_order","post_type","post_mime_type","comment_count"
2853,2,"2015-05-06 04:24:18","2015-05-06 04:24:18","Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years<!--more-->

Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years","Making this the first true generator on the internet","","draft","open","open","","making-this-the-first-true-generator-on-the-internet","","","2015-05-06 04:24:18","2015-05-06 04:24:18","",0,"http://arkahost.com/?p=181",0,"post","",0
2857,2,"2018-12-20 15:31:56","2018-12-20 15:31:56","<!-- wp:paragraph --><p><em>When you first create a new Ubuntu 18.04 server, there are a few configuration steps that you should take early on as part of the basic setup. This will increase the security and usability of your server and will give you a solid foundation for subsequent actions.</em></p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>While <a href=\"https://www.lifelongfamilies.com/initial-server-setup-with-ubuntu-18-04/\">you can complete these steps manually</a>, sometimes it can be easier to script the processes to save time and eliminate human error. This guide explains how to use <a href=\"https://github.com/do-community/automated-setups/blob/master/Ubuntu-18.04/initial_server_setup.sh\">a script to automate the steps in the initial server setup guide</a>.</p><!-- /wp:paragraph -->

<!-- wp:heading --><h2 id=\"what-does-the-script-do\">What Does the Script Do?</h2><!-- /wp:heading -->

<!-- wp:paragraph --><p>This script is an alternative to manually running through the procedure outlined in the <a href=\"https://www.lifelongfamilies.com/initial-server-setup-with-ubuntu-18-04/\">Ubuntu 18.04 initial server setup guide</a> and the guide on <a href=\"https://www.lifelongfamilies.com/how-to-set-up-ssh-keys-on-ubuntu-16-04/\">setting up SSH keys on Ubuntu 18.04</a>.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>The following variables affect how the script is run:</p><!-- /wp:paragraph -->

<!-- wp:list --><ul><li><code>USERNAME</code>: The name of the regular user account to create and grant <code>sudo</code> privileges to.</li><li><code>COPY_AUTHORIZED_KEYS_FROM_ROOT</code>: Whether to copy the SSH key assets from the <strong>root</strong> account to the new <code>sudo</code> account.</li><li><code>OTHER_PUBLIC_KEYS_TO_ADD</code>: An array of strings representing other public keys to add to the <code>sudo</code>-enabled account. This can optionally be used in addition to or instead of copying the keys from the <strong>root</strong> account.</li></ul><!-- /wp:list -->

<!-- wp:paragraph --><p>You should update these variables as needed before running the script.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>When the script runs, the following actions are performed:</p><!-- /wp:paragraph -->

<!-- wp:list --><ul><li>Create a regular user account with <code>sudo</code> privileges using the name specified by the <code>USERNAME</code>variable.</li><li>Configure the initial password state for the new account:<ul><li>If the server was configured for password authentication, the original, generated administrative password is moved from the <strong>root</strong> account to the new <code>sudo</code> account. The password for the <strong>root</strong> account is then locked.</li><li>If the server was configured for SSH key authentication, a blank password is set for the <code>sudo</code>account.</li></ul></li><li>The <code>sudo</code> user's password is marked as expired so that it must be changed upon first login.</li><li>The <code>authorized_keys</code> file from the <strong>root</strong> account is copied over to the <code>sudo</code> user if <code>COPY_AUTHORIZED_KEYS_FROM_ROOT</code> is set to <code>true</code>.</li><li>Any keys defined in <code>OTHER_PUBLIC_KEYS_TO_ADD</code> are added to the <code>sudo</code> user's <code>authorized_keys</code> file.</li><li>Password-based SSH authentication is disabled for the <strong>root</strong> user.</li><li>The UFW firewall is enabled with SSH connections permitted.</li></ul><!-- /wp:list -->

<!-- wp:heading --><h2 id=\"how-to-use-the-script\">How To Use the Script</h2><!-- /wp:heading -->

<!-- wp:paragraph --><p>The script can be run in two ways: by adding it to <a href=\"https://www.digitalocean.com/community/tutorials/an-introduction-to-droplet-metadata#about-user-data\">the server's user data field during creation</a> or by logging in as <strong>root</strong> and executing it after provisioning.</p><!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} --><h3 id=\"using-user-data\">Using User Data</h3><!-- /wp:heading -->

<!-- wp:paragraph --><p>When creating a Droplet on DigitalOcean, you can optionally specify <a href=\"https://www.digitalocean.com/community/tutorials/an-introduction-to-droplet-metadata#how-to-provide-user-data\">user data</a>, a script to be run during the initial server provisioning to perform additional configuration.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>If you are creating a Droplet from the <strong>Control Panel</strong>, you can select the <strong>User data</strong> checkbox in the <strong>Select additional options</strong> section. A text box will appear where you can paste the script:</p><!-- /wp:paragraph -->

<!-- wp:image --><figure class=\"wp-block-image\"><img src=\"https://assets.digitalocean.com/articles/automated_initial_server_setup_1804/user_data_field.png\" alt=\"DigitalOcean control panel user data field\" /></figure><!-- /wp:image -->

<!-- wp:paragraph --><p>If you are <a href=\"https://developers.digitalocean.com/documentation/v2/#create-a-new-droplet\">creating a Droplet using the <strong>DigitalOcean API</strong></a>, you can pass in the script using the <code>user_data</code>attribute instead.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>If you are <a href=\"https://github.com/digitalocean/doctl\">creating a Droplet with the <strong><code>doctl</code> command line tool</strong></a>, you can pass in the script using the <code>--user-data-file</code> option:</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">doctl compute droplet create ... --user-data-file /path/to/script
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>Regardless of the method you use to add the user data, the script will be run the first time the new server boots up. You may have to wait a few minutes for the process to complete, but afterwards, you can log into your server with your <code>sudo</code>-enabled user for any further configuration.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>The first time you log in, you will be prompted to change your password. The server will terminate the current SSH session once you provide and confirm your new credentials. Afterwards, you can SSH back in again as normal.</p><!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} --><h3 id=\"running-the-script-after-provisioning\">Running the Script After Provisioning</h3><!-- /wp:heading -->

<!-- wp:paragraph --><p>If you do not want to use user data, you can also run the script manually over SSH once the server is booted up.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>If you have downloaded the script to your local computer, you can pass the script directly to SSH by typing:</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">ssh root@servers_public_IP \"bash -s\" -- &lt; /path/to/script/file
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>You should now be able to log in using your <code>sudo</code> account for any further configuration.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>If you do not have the script downloaded to your local computer, start by logging into the <strong>root</strong> account on your server:</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">ssh root@servers_public_IP
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>Next, download the raw script to the server:</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">curl -L https://raw.githubusercontent.com/do-community/automated-setups/master/Ubuntu-18.04/initial_server_setup.sh -o /tmp/initial_setup.sh
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>Inspect the script to ensure that it downloaded properly and update any variables that you wish to change:</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">nano /tmp/initial_setup.sh
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>Once satisfied, run the script manually using <code>bash</code>:</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">bash /tmp/initial_setup.sh
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>You should be able to log in using the <code>sudo</code>-enabled user to complete any further configuration.</p><!-- /wp:paragraph -->

<!-- wp:heading --><h2 id=\"the-script-contents\">The Script Contents</h2><!-- /wp:heading -->

<!-- wp:paragraph --><p>You can find the initial server setup script in the <a href=\"https://github.com/do-community/automated-setups/blob/master/Ubuntu-18.04/initial_server_setup.sh\">automated-setups repository</a> in the DigitalOcean Community GitHub organization. To copy or download the script contents directly, click the <strong>Raw</strong> button towards the top of the script, or <a href=\"https://raw.githubusercontent.com/do-community/automated-setups/master/Ubuntu-18.04/initial_server_setup.sh\">click here to view the raw contents directly</a>.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>The full contents are also included here for convenience:</p><!-- /wp:paragraph -->

<!-- wp:code --><pre class=\"wp-block-code\"><code>#!/bin/bash
set -euo pipefail

########################
### SCRIPT VARIABLES ###
########################

# Name of the user to create and grant sudo privileges
USERNAME=sammy

# Whether to copy over the root user's `authorized_keys` file to the new sudo
# user.
COPY_AUTHORIZED_KEYS_FROM_ROOT=true

# Additional public keys to add to the new sudo user
# OTHER_PUBLIC_KEYS_TO_ADD=(
#     \"ssh-rsa AAAAB...\"
#     \"ssh-rsa AAAAB...\"
# )
OTHER_PUBLIC_KEYS_TO_ADD=(
)

####################
### SCRIPT LOGIC ###
####################

# Add sudo user and grant privileges
useradd --create-home --shell \"/bin/bash\" --groups sudo \"${USERNAME}\"

# Check whether the root account has a real password set
encrypted_root_pw=\"$(grep root /etc/shadow | cut --delimiter=: --fields=2)\"

if [ \"${encrypted_root_pw}\" != \"*\" ]; then
    # Transfer auto-generated root password to user if present
    # and lock the root account to password-based access
    echo \"${USERNAME}:${encrypted_root_pw}\" | chpasswd --encrypted
    passwd --lock root
else
    # Delete invalid password for user if using keys so that a new password
    # can be set without providing a previous value
    passwd --delete \"${USERNAME}\"
fi

# Expire the sudo user's password immediately to force a change
chage --lastday 0 \"${USERNAME}\"

# Create SSH directory for sudo user
home_directory=\"$(eval echo ~${USERNAME})\"
mkdir --parents \"${home_directory}/.ssh\"

# Copy `authorized_keys` file from root if requested
if [ \"${COPY_AUTHORIZED_KEYS_FROM_ROOT}\" = true ]; then
    cp /root/.ssh/authorized_keys \"${home_directory}/.ssh\"
fi

# Add additional provided public keys
for pub_key in \"${OTHER_PUBLIC_KEYS_TO_ADD[@]}\"; do
    echo \"${pub_key}\" &gt;&gt; \"${home_directory}/.ssh/authorized_keys\"
done

# Adjust SSH configuration ownership and permissions
chmod 0700 \"${home_directory}/.ssh\"
chmod 0600 \"${home_directory}/.ssh/authorized_keys\"
chown --recursive \"${USERNAME}\":\"${USERNAME}\" \"${home_directory}/.ssh\"

# Disable root SSH login with password
sed --in-place 's/^PermitRootLogin.*/PermitRootLogin prohibit-password/g' /etc/ssh/sshd_config
if sshd -t -q; then
    systemctl restart sshd
fi

# Add exception for SSH and then enable UFW firewall
ufw allow OpenSSH
ufw --force enable
</code></pre><!-- /wp:code -->

<!-- wp:heading --><h2 id=\"conclusion\">Conclusion</h2><!-- /wp:heading -->

<!-- wp:paragraph --><p>Automating the initial server setup can save you a bit of time and gives you a good foundation for further configuration. If there are additional steps you'd like to take, you can either log in after the script runs to continue manually, or append the steps to the end of the script to automate the process.</p><!-- /wp:paragraph -->","","","draft","closed","closed","","2520-2","","","2018-12-20 15:31:56","2018-12-20 15:31:56","",0,"https://www.lifelongfamilies.com/?p=2520",0,"post","",0
2571,2,"2019-01-01 15:05:22","0000-00-00 00:00:00","","Step by Step Creating A Wordpress Theme","","draft","closed","closed","","","","","2019-01-01 15:05:22","0000-00-00 00:00:00","",0,"https://www.lifelongfamilies.com/?p=2571",0,"post","",0
2329,2,"2019-10-30 18:12:48","0000-00-00 00:00:00","<!-- wp:paragraph -->
<p>Real estate marketing is all about promoting your brand as an agent and securing buyer  leads by sharing your listings on social media, advertising your agency, and building your website content</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->","Digital Marketing Strategies for Real Estate in Kenya","","draft","open","open","","real-estate-marketing","","","2019-10-30 18:12:48","2019-10-30 18:12:48","",0,"https://www.digitalmarketingkenya.com/?p=2329",0,"post","",0
344,2,"2018-12-09 15:43:23","2018-12-09 15:43:23","<h2>First Time User Acquisition</h2>
<h3>Audit your website</h3>
&nbsp;

If Don't have a website yet look at <a href=\"https://www.lifelongfamilies.com/how-to-start-a-blog-and-make-money-in-2019/\">How To Start A blog (And Make Money) in 2019</a>

<a href=\"https://www.lifelongfamilies.com/how-to-start-a-blog-and-make-money-in-2019/\"><img class=\"alignnone size-full wp-image-2631\" src=\"https://www.lifelongfamilies.com/wp-content/uploads/2018/12/Making-Money-Blogging-2019.jpg\" alt=\"Making-Money-Blogging-2019\" width=\"573\" height=\"377\" /></a>

The best way to drive scaleable and consistent traffic and customers to your website is through SEO. Instead of just doing things, take a strategic approach instead and audit your website to create a game plan so that you can focus on the highest leverage opportunities.

Do this using a combination of a site crawler and a digital marketing tool like <a href=\"https://www.getcredo.com/semrush/\">SEMrush</a> to both proactively discover current opportunities/issues and to proactively learn about new challenges and opportunities as you go about building your business.

&nbsp;

<a href=\"https://www.bluehost.com/track/innoxafrica/\"><img class=\"alignnone size-full wp-image-2624\" src=\"https://www.lifelongfamilies.com/wp-content/uploads/2019/01/728x90BW.png\" alt=\"728x90BW\" width=\"728\" height=\"90\" /></a>
<h3>Create New Content</h3>
<a href=\"https://www.getcredo.com/should-i-do-seo/\"><img class=\"aligncenter wp-image-5733 size-large\" src=\"https://www.getcredo.com/wp-content/uploads/2016/01/should-i-do-seo-1024x594.png\" sizes=\"(max-width: 640px) 100vw, 640px\" srcset=\"https://www.getcredo.com/wp-content/uploads/2016/01/should-i-do-seo-1024x594.png 1024w, https://www.getcredo.com/wp-content/uploads/2016/01/should-i-do-seo-300x174.png 300w, https://www.getcredo.com/wp-content/uploads/2016/01/should-i-do-seo.png 1303w\" alt=\"should-i-do-seo\" width=\"640\" height=\"371\" /></a>The best way to increase traffic to your website from organic traffic is to increase the number of pages on your website that can rank for your important keyword terms. Look at where you can add new category pages, new blog posts, or new pieces of attractive content (visuals, quizzes, etc) to target specific keywords.
<h3>Optimize Old Content</h3>
Because you are tracking your keyword rankings (you are, right? If you’re not, use <a href=\"https://www.semrush.com/sem/?ref=16154647&amp;refer_source=&amp;utm_source=berush&amp;utm_medium=promo&amp;utm_campaign=banner\">SEMrush</a>), you can find the keywords that you rank near the bottom of the first page and go add useful content to those pages to help them rank better. Google also prefers updated and new content over old stale content.
<h3>Launch New Products</h3>
A great way to attract new users to your company or website is to launch products that meet their needs. The great part is that you can often charge for these as well and make money will getting new users into your full conversion funnel.
<h3>Create Online Courses</h3>
The great thing about the Internet is that you can publish any type of content you want. By creating longer form content like courses that are targeted around both user needs and specific keyword phrases , you can drive more traffic to your site and convert them into email addresses that you can then take down your funnel.

Plus, online course websites exist in plenty so you can put them on places like Lynda.com to further your reach.
<h3>Write Guest Posts</h3>
By using a site like Similar Web, you can find sites related to yours. If they have your audience, you can usually get content onto their site that helps them build traffic while at the same time getting access to their new audience.
<h3>Accept guest posts</h3>
Similarly, many sites want links for SEO purposes and access to your customers. If they’re not a direct competitor, let them guest post on your site! Then they are invested in your company and will promote the content that they’ve produced, which also gets you in front of their own audience. Double win!
<h3>Launch Infographics</h3>
If you have a designer in your company or can find one online, create useful graphics that tell a story and help people see your content in a new way. Do outreach for links, promote on Pinterest, etc.
<h3>Give Podcast Interviews</h3>
Podcasting is HUGE these days, and one of the best ways to grow a podcast audience is to invite influential people onto your podcast. Think about it like audio version guest posts. So, get one or two podcasts under your belt (or launch your own) then start targeting podcast producers to get onto their shows.
<h3>Social advertising</h3>
Social advertising on Facebook, Twitter, and other networkds is still relatively cheap today as compared to Adwords. Many of them also allow you to segment down by demographics or target by keywords so that you hit your ideal audience.
<h3>PPC</h3>
PPC is usually best used for conversion-oriented keywords, which is great because it gets you a new audience that is also ready to convert.
<h3>Create and Sell Courses</h3>
What better way to show your expertise and get people reading all of your content than to teach what you already know? If you have a craft, create a course to teach it then sell it on places like Udemy while simultaneously selling it on your site from a page targeted towards a high volume keyword for SEO.
<h3>Create Pinterest boards</h3>
Pinterest is a super strong domain and your Pinterest boards can rank very well. Do your typical keyword research for your website, then take some of those keywords and target them on Pinterest. A pro tip is to use your other online resources (website, Instagram, etc) to get them indexed faster and ranking better.
<h3>Promote pins on Pinterest</h3>
In this day and age, it’s not just enough to create content and expect it to rank and drive traffic. Rankings are influenced by engagement stronger than ever before, so use some budget to promote pins on Pinterest to your target audience.
<h3>Partnerships</h3>
Especially in B2B spaces, partnerships can be gold for customer acquisition. Build out referral programs with complementary companies to yours and try to funnel some of their traffic back to your site, either through website mentions or even their email marketing.
<h3>Link acquisition</h3>
This feels like an old school tactic, but it’s still true that the more links you have to your site, the better your site will rank. So acquire links to your site from content, from relevant resource pages on other sites, and from outreach that you do.
<h3>Promote content via Outbrain/Taboola</h3>
Content promotion is so cheap these days that you’d be silly not to do it. I know people with content sites making literally thousands of dollars a day all from promoted content.
<h3>Create satellite websites</h3>
If your main website is around one niche yet you operate in many niches, you can build out websites specifically targeted at those other niches and use them to funnel traffic to your other sites. You need to disclose that you own those other sites, but this is a great way to spread the organic reach.
<h3>Speed up your website</h3>
A fast site not only converts better, but on a big site you will also get more organic traffic because the search engines are able to crawl your site faster and find more content. Start with switching hosts then optimizing your code, all while making sure you are using aggressive caching and a content delivery network (CDN).
<h3>Do new keyword research</h3>
If you’re really struggling to increase traffic to your site, go do new keyword research to get new content ideas, then go back to point 1 above and create new content!
<h3>Target the longtail of keywords for SEO</h3>
If you don’t have a very strong website, you can target longer tail keywords (&lt;50 searches a month) which are often much easier to rank for. From this you can start building up a base of content that you can then use to earn links and propel rankings for more competitive terms.
<h3>Target HackerNews/Reddit/relevant forums with content</h3>
If you can get content or a product to go hot on a site like Hacker News, Reddit, or ProductHunt you can literally get tens of thousands of visitors and often signups and sales. I (John) personally make over $70k from my site sitting on the first page of ProductHunt for a day, and I’ve seen Reddit drive tens of thousands of visits to sites.
<h3>Run competitions/giveaways</h3>
One of the best ways to build an email list and therefore a new audience is through giving away high value items and incentivizing your entrants to share as well in order to get more entries. I use the <a href=\"https://kingsumo.com/apps/giveaways/\" target=\"_blank\" rel=\"noopener noreferrer\">Kingsumo Giveaways</a> plugin for this.
<h3>Speak at conferences</h3>
If you enjoy speaking, conferences can be a great way to get in front of a targeted audience. If you encourage them to tweet about it (put your Twitter handle on the bottom of every slide), you also get in front of their social media audience.
<h3>Advertise at conferences</h3>
While speaking is the best way to get in front of your audience at conferences, advertising is second best. You can leverage advertising for brand recognition, offer discounts to those at the conference, get links from people doing roundups, and more. It’s a big win especially if you can tie revenue directly back to your company.
<h3>Free swag at conferences</h3>
I have constantly been amazed at how well quality swag works for advertising your brand, and what better place to give away swag than at conferences to your customers? You’ll build brand recognition and good will.
<h3>Create content for Slideshare specifically</h3>
Slideshare is its own content social network. By creating content for Slideshare specifically and promoting it, you can also land on the popular content sections of their homepage which drive great traffic. Make sure you link back to your site from Slideshare too.
<h3>Create videos for YouTube</h3>
If you can create videos in a cost-effective manner, YouTube is a great distribution platform. It takes time to build the channel but has a huge audience if done well.
<h3>Run YouTube Ads</h3>
Can’t create videos, but there are videos on YouTube that your target audience watches? You can run YouTube videos.
<h3>Run webinars</h3>
Webinars can drive a new audience for you when you invite guests, or do advertising, that have an audience that they will promote your webinar to. Try to bring on guests who already have a large audience.
<h3>Use HARO to acquire contributors</h3>
Help A Reporter Out is a great way to find great sources for stories you are writing. While this won’t directly get you a new audience, by including their quotes and tagging them on social media you can access their audience.
<h3>Teach a class</h3>
Teach people how to do what you do, put your content on Slideshare, rinse, repeat.
<h3>Mentor a startup</h3>
Mentoring startups is a great way to build goodwill within your industry. Often you can also then get guest posts or leverage their name to get content elsewhere or to be quoted as an expert/source.
<h3>Sponsor Meetups</h3>
Meetup.com is one of the most popular websites online for organizing groups of people to get together. Many of them accept sponsors, who do things like give free meeting space or pay the bar tab. This can be a great way to get your company or product in front of your ideal target audience.
<h3>Do outreach to get included in email newsletters</h3>
Some companies do daily, weekly, or monthly newsletters that curate content from around their industry, and many of these have a lot of subscribers. If you have content that fits their audience, reach out to them and see if they’ll include your article in their next edition.
<h3>Start a podcast</h3>
Starting a podcast is extremely popular these days, and for good reason – they can build a great audience, have a high barrier to entry to do well, and can set you apart as an expert in your space.
<h3>Answer Quora questions</h3>
If you write online at all, then you probably know Q&amp;A platform <a href=\"https://www.quora.com/\">Quora</a>. Quora is a fantastic place to find questions people are asking around your area of expertise. Write a great answer, share it socially to get some upvotes, and watch your traffic (and referrals!) soar. At this time of writing, we receive about 10,000 views a quarter on our answers and have received over 320,000 in the last few years:

<img class=\"aligncenter size-large wp-image-40608\" src=\"https://www.getcredo.com/wp-content/uploads/2017/03/credo-quora-stats-650x504.png\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 984px) 61vw, (max-width: 1362px) 45vw, 600px\" srcset=\"https://www.getcredo.com/wp-content/uploads/2017/03/credo-quora-stats-650x504.png 650w, https://www.getcredo.com/wp-content/uploads/2017/03/credo-quora-stats-300x232.png 300w, https://www.getcredo.com/wp-content/uploads/2017/03/credo-quora-stats-768x595.png 768w, https://www.getcredo.com/wp-content/uploads/2017/03/credo-quora-stats-1200x930.png 1200w, https://www.getcredo.com/wp-content/uploads/2017/03/credo-quora-stats.png 1203w\" alt=\"\" width=\"650\" height=\"504\" />
<h2>User Retention</h2>
Once you’ve attracted your customers to your site, whether to a piece of content via social or a conversion page via SEO, they’ll often leave your site and come back a few times before they actually convert. Sometimes they’re doing research, sometimes they get distracted by other sites, and sometimes they’re just not ready to buy or give you the information you so badly need from them to drive your business forward.

Here are 9 ways to get people back to your site
<h3>Collect email addresses and send consistent emails</h3>
One of the simplest things to do that most people don’t actually do is send consistent email marketing to their customers who have given their email address. Whether this is a weekly newsletter or a daily piece of content to teach and sell, this is the best way to keep your users engaged. The best part is that once you set it up once, your customers will all see that same content.
<h3>Guest post on similar sites</h3>
<img class=\"aligncenter size-large wp-image-5817\" src=\"https://www.getcredo.com/wp-content/uploads/2016/02/similar-web-similar-sites-650x316.png\" sizes=\"(max-width: 640px) 100vw, 640px\" srcset=\"https://www.getcredo.com/wp-content/uploads/2016/02/similar-web-similar-sites-650x316.png 650w, https://www.getcredo.com/wp-content/uploads/2016/02/similar-web-similar-sites-300x146.png 300w\" alt=\"similar-web-similar-sites\" width=\"640\" height=\"311\" />

Similar to acquiring new users, guest posting on similar sites that likely have your audience and have read your site is a great way to remind them about your site/product as well. Pro move – advertise on these sites too (see below)
<h3>Do retargeting advertising</h3>
If you’re not doing retargeting and you operate a business online, you are literally leaving money on the table. With all the different display networks available, not to mention Facebook, you can easily target people who have come to your site but not purchased to come back and finish their conversion.
<h3>Advertise on similar sites</h3>
Once again using SimilarWeb or <a href=\"https://www.semrush.com/sem/?ref=16154647&amp;refer_source=&amp;utm_source=berush&amp;utm_medium=promo&amp;utm_campaign=banner\">SEMrush</a>, find the sites similar to yours who are not competitors and see if you can advertise there. Now their audience is yours.
<h3>Bid on competitor keywords</h3>
This one is slightly greyer on the ethical scale than many of the others, but Adwords allows you to bid on many competitor branded terms. If they’re searching for your competitor, they should also know about you.
<h3>Promote content on social</h3>
You might not know this, but your followers on social media (especially Facebook) don’t see all of the content you post. If you see a piece of content being successful and getting good exposure, either boost that post or promote it to your custom audiences that you’ve put together.
<h3>Let users subscribe to content</h3>
Some CMSs, like WordPress, will let people subscribe to replies to their comments that they leave on your content. You can also use a myriad of tools (like SumoMe) to capture email addresses to which you can send content when it publishes.
<h3>Email users when something happens onsite</h3>
If you’ve had someone sign up to your product, email them when something happens (a product goes out of stock or comes in stock, metrics change, etc) to get them back to engage with your product again.
<h3>Email users who abandon their shopping cart</h3>
If you run an ecommerce site, email them when they’ve left something that they wanted to buy.
<h3>Affiliates</h3>
If you run a site that has products or things directly for sale, you could consider an affiliate program. While affiliate programs take management, they are also a great way to get others to talk about your products for free and you only pay if they buy something.
<h3>Partners</h3>
If you’re a B2B company, partnerships can be a great way to drive relevant traffic that is ready to convert to your site. This has been a major way Credo has grown. Begin with outreach to sites that have written roundups of alternatives for your competitors and see if they’d like to include your site. Bonus points for getting them to add you at the top.
<h3>Influencers</h3>
2018 was the year of influencer marketing, and this will only continue into  2019. Get influencers to post about your products, blog on your site and share it, or interview them and provide it for free to your users.","51 Ways to drive traffic to your website in Kenya","You need more website traffic. If you run an online business, traffic is your lifeblood because it enables your business model to work and pay your bills. Therefore, you need to employee multiple strategies to bring new visitors to your site and keep old visitors engaged with your content.

Here are 51 ways to drive and increase traffic to your website in 2019.","publish","open","open","","10-ways-to-drive-traffic-to-your-website","","","2020-11-18 11:19:53","2020-11-18 11:19:53","",0,"https://www.lifelongfamilies.com/?p=344",0,"post","",0
401,2,"2018-12-14 17:40:30","2018-12-14 17:40:30","<!-- wp:paragraph -->
<p><strong>For first-time site builders and owners of small websites, shared hosting can fill the bill for an affordable price, but that option may not be able to meet the needs of larger, more complex sites and those with high traffic volume. For those users,&nbsp;</strong><a href=\"https://www.lifelongfamilies.com/dedicated-hosting/\"><strong>dedicated hosting</strong>&nbsp;</a>offers a scalable, highly customizable alternative that bypasses the limitations and risks of shared hosting in favor of sole occupancy on a server reserved exclusively for a single website.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>How Does Dedicated Hosting Work?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In all web hosting models, account holders’ sites are hosted and maintained on the servers of a remote provider that is also responsible for essential maintenance and some site management, depending on the type of hosting plan. To keep costs low, shared hosting providers put many accounts on the same server, where they draw from the server’s shared resources.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In this environment, any site can be affected by the behavior of its neighbors on the server. A surge in traffic on one site can cause others to run slowly or experience interruptions in service, and the basic security measures put in place by the provider may not be able to stop malicious activity that infects sites through shared technology. And, since shared hosting is designed for smaller sites with low traffic, when a site’s monthly traffic volume exceeds a cap set by the provider, the account can be terminated.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Dedicated hosting avoids those issues by providing a more flexible, efficient, and safe alternative for growing sites with an ever-increasing volume of traffic, as well as the established sites of large companies. In this hosting model, a provider makes an entire server and all its resources available to a single client, with varying levels of support and maintenance available depending on the provider’s hosting plans.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Although dedicated web hosting can cost considerably more than basic shared hosting, this kind of hosting environment offers far more flexibility, privacy and user control than other kinds of web hosting solutions. The benefits of dedicated web hosting include enhanced performance, better security, complete customer control, and a spectrum of support services from the hosting provider. If these are the kind of features you are looking for,&nbsp;<a href=\"https://www.lifelongfamilies.com/dedicated-hosting/\">get started with dedicated hosting</a>&nbsp;today.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Enhanced Website Performance</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In a dedicated hosting environment, all resources such as bandwidth, RAM and CPU output on a user’s contracted server are dedicated to supporting that user’s single site. That ensures maximum uptime with no “competition” from other sites on a shared server, so that a site’s performance can’t be affected by shifts in the use of those shared resources. With all resources available at all times, dedicated hosting can also offer enhanced speeds and added stability for businesses whose computing needs involve sensitive financial transactions or the handling of personal information.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Superior Security for Unique Needs</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Dedicated website hosting avoids many of the security issues that worry users of shared hosting services. Depending on the hosting plan, dedicated hosting users may be able to install security measures designed to meet their specific needs alongside – or in place of – those that are provided by the host. Because sites on dedicated servers don’t share space with others, they face no risk of becoming “infected” through shared technology by malware or malicious activity directed at a neighboring site on a shared server.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Each server used for hosting has its own IP address and, in a shared hosting environment, that IP address is also shared by all the sites, both legitimate and questionable, that are using that server. Because no other sites share a server in a dedicated hosting situation, each site has a unique IP address, which eliminates confusion and adds additional layers of security that can be essential for processing financial and medical transactions.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Flexibility for Customization</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Dedicated hosting makes it possible for users to have virtually complete control over all aspects of their sites – or leave some or all of its management in the hands of the hosting provider. With managed hosting plans, the host handles ongoing site management along with maintaining the server itself, while self-managed hosting allows site owners complete control of all aspects of their site, with only server maintenance and support provided by the host. In both models, though, users are free to install software packages and security features of their choice to meet the specific needs of the site and the company behind it.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Dedicated hosting also provides scalability for the life of a site. Though a site can outgrow the limited resources of a shared hosting environment fairly quickly, the resources of a dedicated server make it possible to scale a site to just about any size – and to add the additional features and functionality it needs at every stage of development. Dedicated hosting packages allow for scalability, too, with tiered pricing that reflects added RAM, bandwidth, and other features as needed.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Ongoing Technical and Server Support</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Dedicated hosting providers typically offer around the clock technical support from a well-trained staff with the expertise to resolve issues of all kinds – an important aspect of this kind of hosting, since users can opt to handle all aspects of site management on their own. Hosts also provide ongoing server support, including maintenance and installing upgrades and other features as needed for optimum performance and uptime. All costs for maintaining the server are assumed by the provider, but users can purchase and install any software they choose.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Who Needs Dedicated Hosting?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Dedicated hosting is not for everyone. This kind of&nbsp;<a href=\"https://www.bluehost.com/products\">hosting</a>&nbsp;can be expensive, costing hundreds per month, although some providers offer self-managed economy plans for less. For new users with small sites, or longtime sites with small amounts of traffic, shared hosting at a lower cost might be the right choice for both short and long term needs.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For sites that have, or expect to have, significant traffic, dedicated hosting provides the needed resources to accommodate site visits numbering into the millions. Dedicated hosting also supports complex sites that require extensive customization, such as those sponsored by large ecommerce businesses and other kinds of enterprises. This kind of hosting may also be right for sites that demand strict security, such as those involving financial transactions or the handling of medical data and patient information.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Shared hosting options may be all a small site needs for the duration of its life, but with exclusive server resources and extensive user support, dedicated hosting provides the flexibility and scalability that can sustain a website’s growth and development now and for the future.</p>
<!-- /wp:paragraph -->","What is Dedicated Hosting?","","publish","closed","open","","what-is-dedicated-hosting","","","2018-12-14 17:40:30","2018-12-14 17:40:30","",0,"https://www.lifelongfamilies.com/?p=401",0,"post","",0
403,2,"2018-12-14 17:47:59","2018-12-14 17:47:59","<!-- wp:paragraph --><p>Over 90,000 hacking attacks per minute strike WordPress sites and <a href=\"https://www.bluehost.com/products/wordpress-hosting\">WordPress hosting</a> around the world, hitting not only large corporate websites packed with sensitive data, but also sites belonging to small businesses, independent entrepreneurs, and individuals running personal blogs. Security of WordPress sites typically tops the list of concerns for new and experienced website owners alike. For owners of WordPress sites, statistics like that one raises particular worries about the security not just of individual WordPress sites, but of WordPress itself. No platform is ever completely safe from malware, hacking, and other kinds of cyber attacks — but <a href=\"https://www.lifelongfamilies.com/website-security/\">WordPress security</a> includes protections on the source code itself, as well as precautions taken by both a hosting provider and site owners themselves.</p><!-- /wp:paragraph -->

<!-- wp:heading --><h2><strong>Is WordPress Secure?</strong></h2><!-- /wp:heading -->

<!-- wp:paragraph --><p>As you read this blog post, you may be wondering, “Is WordPress secure?” The number of cyber attacks striking WordPress websites of all kinds may seem extreme, suggesting that WordPress itself is inherently prone to dangerous security lapses. The fact that WordPress is a free and open source software package that anyone can not only download but also modify and share makes it appear especially vulnerable to any skilled hacker who can insert a snippet of malicious code into the WordPress core.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>But, although WordPress is a product of developers and designers around the globe working to keep it updated and stable, security is the work of a team of dedicated developers who monitor WordPress for security vulnerabilities and install patches as soon as one becomes known. Between its launch in 2003 and early 2018, nearly 2,500 security vulnerabilities have been patched. WordPress releases frequent updates to the software, which includes those patches, so it’s important for users to install updates whenever they become available.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>WordPress developers working to keep the platform as secure as possible are the first line of defense for your website, but they aren’t the only one. Both hosting providers and site owners have jobs to do in keeping up their WordPress site security.</p><!-- /wp:paragraph -->

<!-- wp:heading --><h2><strong>Website Hosting and WordPress Security</strong></h2><!-- /wp:heading -->

<!-- wp:paragraph --><p>Trusted, quality website hosting providers also have protocols in place to protect WordPress and other sites they host. It’s the hosting provider’s job to maintain the security of servers used in hosting and to implement essential security monitoring features. <a href=\"https://www.lifelongfamilies.com/products/cpanel-starter/\">Shared hosting</a> poses more risks than dedicated or VPS (Virtual Private Server) hosting simply due to the number of sites sharing space on a given server. </p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>In situations like that, security measures must apply to all sites being hosted, regardless of the platform being used, so those measures may not be equally effective for all sites. Dedicated hosting designed for WordPress sites can add more useful security features aimed at WordPress-specific vulnerabilities.</p><!-- /wp:paragraph -->

<!-- wp:heading --><h2><strong>DIY Security for WordPress Sites</strong></h2><!-- /wp:heading -->

<!-- wp:paragraph --><p>Along with efforts by WordPress itself and responsible web hosting providers, owners of WordPress sites can also take many steps to tighten security and thwart cyberattacks of all kinds. Below are some WordPress security best practices:</p><!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} --><h3><strong>Keep WordPress Updated</strong></h3><!-- /wp:heading -->

<!-- wp:paragraph --><p>Many cyberattacks on WordPress sites strike smaller ones or those running older versions of WordPress that haven’t received the latest patches and other updates. Owners of these sites might not expect that their sites might be targets, but they may be even more vulnerable than larger sites containing stores of sensitive data. Installing all of the frequent updates released by WordPress is a key step in keeping a site secure — and that includes updates not only to WordPress itself, but also to its themes and plugins installed from WordPress and from third-party developers.</p><!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} --><h3><strong>Keep Devices Secure</strong></h3><!-- /wp:heading -->

<!-- wp:paragraph --><p>WordPress security won’t help if the devices used to manage the site are compromised. Security experts recommend making sure that all computers and mobile devices used for accessing and managing a WordPress site be regularly monitored and updated with effective firewalls and malware scans. </p><!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} --><h3><strong>Secure Passwords and Permissions</strong></h3><!-- /wp:heading -->

<!-- wp:paragraph --><p>Hackers often attempt to get access to a site by “brute-force attack” — entering usernames and passwords again and again until one works. Because the default username for a WordPress website is “Admin,” which is an easy one to guess, it’s wise to change that to something unique as soon as possible.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>Restricting permission to access the site and its directories and disabling file editing can also help, since WordPress code can easily be edited by anyone who can open it. Likewise, limit login attempts and set notifications for excessive logins — a sign of login attempts to hack into a site using brute force tactics.</p><!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} --><h3><strong>Install </strong><strong>WordPress </strong><strong>Security Plugins</strong></h3><!-- /wp:heading -->

<!-- wp:heading {\"level\":3} --><h3><strong>Backup Your WordPress Site</strong></h3><!-- /wp:heading -->

<!-- wp:paragraph --><p>Backing up your WordPress website at least once, and preferably multiple times, is always a good idea in case of accidental loss or errors when editing WordPress, but it makes good sense from a security standpoint, too. If a site is compromised with malicious code or viruses, a clean backup can be restored at any time, or the site can be moved to a new host if necessary using the backup versions.</p><!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} --><h3><strong>Stay on Top of Spam</strong></h3><!-- /wp:heading -->

<!-- wp:paragraph --><p>New WordPress sites and those that aren’t regularly maintained are prime targets for spam — and that can easily infect a site with malware. Set tight spam filters and keep them updated with the latest version, monitor commenting carefully, and block questionable comments from your site’s Admin WordPress dashboard.By its very nature and its massive popularity, WordPress can appear especially vulnerable to hacking and other kinds of cyber attacks for its users. But WordPress sites can be secured on every level from WordPress itself to hosting and site owners themselves — and regular updates and practical steps can keep WordPress sites of all kinds secure.</p><!-- /wp:paragraph -->","A Guide to WordPress Security in 2019","","publish","closed","closed","","a-guide-to-wordpress-security","","","2018-12-14 17:47:59","2018-12-14 17:47:59","",0,"https://www.lifelongfamilies.com/?p=403",0,"post","",0
407,2,"2018-12-15 15:55:07","2018-12-15 15:55:07","<!-- wp:quote -->
<blockquote class=\"wp-block-quote\"><p>Have you noticed that you’re not receiving WordPress contact form notifications? You might be wondering why WPForms&nbsp;isn’t sending you emails when someone fills out your forms, or why you&nbsp;aren’t seeing any WordPress notifications.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>In this tutorial, we’ll walk you through how to fix email delivery issues by sending WordPress emails&nbsp;with Mailgun using WP Mail SMTP.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>Note:</strong>&nbsp;If you are using G Suite, we recommend using&nbsp;<a href=\"https://wpforms.com/how-to-securely-send-wordpress-emails-using-gmail-smtp/\">WP Mail SMTP’s Google mailer option</a>&nbsp;in place of Mailgun to avoid technical challenges.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>Why Email Notifications Don’t Work</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Maybe you’ve noticed that WordPress isn’t&nbsp;sending you email notifications because&nbsp;form entries are piling up in your WordPress dashboard, or frustrated&nbsp;visitors start to reach out to you using social media or other methods.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The most common reason for missing these emails is due to your&nbsp;<a href=\"http://www.wpbeginner.com/wordpress-hosting/\" target=\"_blank\" rel=\"noreferrer noopener\">WordPress hosting</a>&nbsp;server. Usually it isn’t configured to use&nbsp;the&nbsp;<a href=\"http://www.wpbeginner.com/glossary/php/\" target=\"_blank\" rel=\"noreferrer noopener\">PHP</a>&nbsp;mail() function, which WordPress uses by default to send emails generated by WordPress or any contact&nbsp;plugin like&nbsp;<a href=\"http://wpforms.com/\">WPForms</a>.<br></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Thankfully, you can work around this issue by using SMTP.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>SMTP (Simple Mail Transfer Protocol) is the industry standard for sending emails. Unlike PHP mail function, SMTP uses proper authentication which increases email deliverability. That’s why we recommend using SMTP to send emails in WordPress.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In this article we’ll show one of the SMTP services we recommend: Mailgun.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>How to Fix Your Form Notifications</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Mailgun is a popular email service provider that allows website owners to send large quantities&nbsp;of emails. You can send&nbsp;your first 10,000 emails for free every month (or 100 emails per hour), though beyond that it’s a paid service. But that’s more than enough for most small websites.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Let’s get started setting up your site to send WordPress emails with Mailgun using WP Mail SMTP.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>1. Sign up for a Mailgun account</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>First you need to&nbsp;<a href=\"https://signup.mailgun.com/new/signup\" target=\"_blank\" rel=\"noreferrer noopener\">sign up for an account on the Mailgun website</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":119018,\"align\":\"center\"} -->
<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://wpforms.com/wp-content/uploads/2017/12/Sign-up-for-a-Mailgun-account.png\" alt=\"Sign up for a Mailgun account\" class=\"wp-image-119018\"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p><strong>Note:</strong>&nbsp;As an added verification step Mailgun will require that you enter credit card information to set up an account, even if using a free account. For more information, please see&nbsp;<a href=\"https://signup.mailgun.com/new/signup\" target=\"_blank\" rel=\"noreferrer noopener\">Mailgun’s sign up page</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>After completing the short signup form, you’ll have a couple of additional verification steps to complete. Multiple levels of verification is what allows Mailgun to better ensure email deliverability for all of their users.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>First, you should receive an email to verify your Mailgun account. After clicking the verification link, you’ll then need to enter a mobile number to receive a text verification code.</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":119025,\"align\":\"center\"} -->
<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://wpforms.com/wp-content/uploads/2017/12/Verify-Mailgun-account.png\" alt=\"Verify Mailgun account\" class=\"wp-image-119025\"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Once you’ve completed these steps, you’ll be taken to the login page. Go ahead and log into your new Mailgun account.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>After logging in, you’ll be taken to your Mailgun dashboard. If you didn’t enter credit card details earlier, you’ll be prompted for that information again here. Otherwise, you’ll see a graph that can later show some statistics about the emails you send.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>When you’re ready, click on&nbsp;<strong>Domains</strong>&nbsp;in the main menu.</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":119031,\"align\":\"center\"} -->
<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://wpforms.com/wp-content/uploads/2017/12/Go-to-Domains-in-Mailgun-dashboard.png\" alt=\"Go to Domains in Mailgun dashboard\" class=\"wp-image-119031\"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>On the Domains page, you’ll need to click the&nbsp;<strong>Add New Domain</strong>&nbsp;button.</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":54814,\"align\":\"center\"} -->
<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://wpforms.com/wp-content/uploads/2017/06/Add-new-domain-to-Mailgun.png\" alt=\"Add new domain to Mailgun\" class=\"wp-image-54814\"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Next, you’ll need to enter a subdomain of your website’s domain name.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>What does that mean, exactly?&nbsp;A subdomain replaces the “www” part of your website’s address;&nbsp;for example: “subdomain.yourwebsite.com.” Subdomains can be used to add separate sections or directories to your website (like how some sites have their blogs on a subdomain such as blog.example.com).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In this case, the subdomain we’ll create will be used by Mailgun to send emails.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>We’ll create the actual subdomain in the next step. For now, you can just enter a subdomain such as mail.yourwebsite.com or mg.yourwebsite.com. (It doesn’t really matter what you name it, but using “mail” or “mg” makes it more clear what its purpose is.)</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":54816,\"align\":\"center\"} -->
<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://wpforms.com/wp-content/uploads/2017/06/Add-a-domain-to-Mailgun.png\" alt=\"Add a domain to Mailgun\" class=\"wp-image-54816\"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>As we continue into the next step, be sure to keep this tab or window open as we’ll return to this page later.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>2. Verify Your Domain</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>As a way of both protecting site owners and their visitors, some SMTP services like Mailgun require that you verify your domain by adding records to your site’s&nbsp;<a href=\"http://www.wpbeginner.com/glossary/dns/\" target=\"_blank\" rel=\"noreferrer noopener\">DNS</a>. You can find more information on the benefits of verifying your domain in&nbsp;<a href=\"https://documentation.mailgun.com/en/latest/quickstart-sending.html#verify-your-domain\" target=\"_blank\" rel=\"noreferrer noopener\">Mailgun’s guide</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>First, you’ll need to open your site’s DNS settings. If you’re not sure how to find these, Mailgun will provide you with some helpful links shown on their setup page when you’re adding a new domain.</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":54791,\"align\":\"center\"} -->
<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://wpforms.com/wp-content/uploads/2017/06/Mailgun-Domains-page.png\" alt=\"Mailgun Domains page\" class=\"wp-image-54791\"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p><strong>Note:</strong>&nbsp;If you’re not sure where to find your site’s DNS settings or feel unsure about making changes, please contact your site’s hosting provider.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Or for more details on modifying a site’s DNS, we recommend&nbsp;<a href=\"http://www.wpbeginner.com/glossary/dns/\" target=\"_blank\" rel=\"noreferrer noopener\">WPBeginner’s tutorial on DNS settings</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Once your DNS settings are open, you should see an option to add a new record.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>TXT Records</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To make it possible for Mailgun to verify your domain, you’ll need to add two TXT records to your site’s DNS. Be sure to copy them carefully, as you’ll need the exact values from your Mailgun account for the verification to work.</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":119088,\"align\":\"center\"} -->
<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://wpforms.com/wp-content/uploads/2017/12/DNS-records-for-Mailgun.png\" alt=\"\" class=\"wp-image-119088\"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>In your site’s DNS settings you may also see a TTL field, or Time To Live, field for the record. You can leave this blank to allow the default TTL value to be used.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>MX Records</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The next step is to add MX, or Mail Exchanger, records.<strong>Note:</strong>&nbsp;If you are already using MX records to point to an email provider, such as G Suite, modifying MX records can lead to additional email issues.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If unsure of any changes, be sure to reach out to your site’s hosting provider or&nbsp;<a href=\"https://mailgun.com/app/support\" target=\"_blank\" rel=\"noreferrer noopener\">Mailgun support</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Mailgun’s MX records are the same for everyone:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>First MX record:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong>Type:</strong>&nbsp;MX</li><li><strong>Priority:</strong>&nbsp;10</li><li><strong>Value:</strong>&nbsp;“mxa.mailgun.org”</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Second MX record:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong>Type:</strong>&nbsp;MX</li><li><strong>Priority:</strong>&nbsp;10</li><li><strong>Value:</strong>&nbsp;“mxb.mailgun.org”</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Once you’ve completed these steps, your DNS settings are all set.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>3. Check your Mailgun Verification Status</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Now Mailgun will need to verify that your domain has proper DNS records. This&nbsp;verification can&nbsp;take a while (sometimes 24-48 hours) because DNS records may take some time to update.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>You can check the status of your domain verification any time by visiting the Domains page in your Mailgun account. Once Mailgun can verify the DNS changes you made, it will show active status next to your domain name.</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":54824,\"align\":\"center\"} -->
<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://wpforms.com/wp-content/uploads/2017/06/View-active-domain-on-Mailgun.png\" alt=\"View active domain on Mailgun\" class=\"wp-image-54824\"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>However, you can skip to the next step while you wait for this verification to complete. Just be sure to keep this tab or window open, as we’ll need it a little later.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>4. Configure WordPress to Send Emails</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Now that you’ve set up your DNS, you can prepare your WordPress site to start using Mailgun with WP Mail SMTP for sending emails.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The first thing you need to do is install and activate the&nbsp;<a href=\"https://wordpress.org/plugins/wp-mail-smtp/\" target=\"_blank\" rel=\"noreferrer noopener\">WP Mail SMTP plugin</a>. For more details, see our step by step guide on&nbsp;<a href=\"http://www.wpbeginner.com/beginners-guide/step-by-step-guide-to-install-a-wordpress-plugin-for-beginners/\" target=\"_blank\" rel=\"noreferrer noopener\">how to install a WordPress plugin</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>After installing and activating this plugin, you need to visit&nbsp;<strong>Settings » WP Mail SMTP</strong>&nbsp;to configure plugin settings.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>At the top of this page, you can set the&nbsp;<strong>From Email</strong>&nbsp;and&nbsp;<strong>From Name</strong>. By default, these will fill with your site’s admin email and site name.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For the&nbsp;<strong>From Email</strong>, be sure this is set to the same email address used to set up your Mailgun account.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>We also recommend that you check the box labeled&nbsp;<strong>Force From Email</strong>. Since you will need the From Email in all plugins that send email to match this email address (a requirement in order for SMTP to work), this option will save you the trouble of editing the email settings throughout your site (in all form emails, etc).</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":225662,\"align\":\"center\"} -->
<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://wpforms.com/wp-content/uploads/2018/07/Enable-the-Force-From-Email-option-in-WP-Mail-SMTP.png\" alt=\"Enable the Force From Email option in WP Mail SMTP\" class=\"wp-image-225662\"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>You may add any&nbsp;<strong>From Name</strong>&nbsp;you’d like, and you can also choose to&nbsp;<strong>Force From Name</strong>&nbsp;to apply this setting site-wide. Unlike From Email, having a specific From Name is not critical to the plugin’s functionality. However, it will help email recipients to easily see where these emails are coming from.</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":225164,\"align\":\"center\"} -->
<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://wpforms.com/wp-content/uploads/2018/06/Set-a-From-Name-in-WP-Mail-SMTP-settings.png\" alt=\"Set a From Name in WP Mail SMTP settings\" class=\"wp-image-225164\"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Next, in the&nbsp;<strong>Mailer</strong>&nbsp;field you’ll need to select the&nbsp;<strong>Mailgun</strong>&nbsp;option.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>We also recommend checking the optional&nbsp;<strong>Return Path</strong>&nbsp;checkbox to&nbsp;<strong>Set the return-path to match the From Email</strong>. With this enabled, you’ll be emailed if any messages bounce as a result of issues with the recipient’s email.</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":119103,\"align\":\"center\"} -->
<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://wpforms.com/wp-content/uploads/2017/12/WP-Mail-SMTP-Mailer-settings-for-Mailgun.png\" alt=\"WP Mail SMTP Mailer settings for Mailgun\" class=\"wp-image-119103\"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>After selecting Mailgun as your mailer, a new&nbsp;<strong>Mailgun</strong>&nbsp;section will appear. Here, you’ll need to enter API and domain information.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Even if your domain is still waiting to be verified, Mailgun will provide the information you need here. To access this, you’ll need to return to the tab or window with your Mailgun domain details.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you look at the bottom the section named Domain Information, you should see the&nbsp;<strong>API Key</strong>.</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":119158,\"align\":\"center\"} -->
<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://wpforms.com/wp-content/uploads/2017/12/Copy-Mailgun-API-key.png\" alt=\"Copy Mailgun API key\" class=\"wp-image-119158\"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Once you’ve copied the text for the full key (including&nbsp;<code>key-</code>&nbsp;at the start), return to the WP Mail SMTP settings and paste it into the&nbsp;<strong>API Key</strong>&nbsp;field.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Then for the&nbsp;<strong>Domain Name</strong>, enter the subdomain you created in Mailgun. If needed, you can find this at the top of the Mailgun page with your API key.</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":119164,\"align\":\"center\"} -->
<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://wpforms.com/wp-content/uploads/2017/12/Domain-name-for-Mailgun.png\" alt=\"Domain name for Mailgun\" class=\"wp-image-119164\"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Once this information is complete, go ahead and save your settings.</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":119166,\"align\":\"center\"} -->
<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://wpforms.com/wp-content/uploads/2017/12/Enter-Mailgun-settings-in-WP-Mail-SMTP.png\" alt=\"Enter Mailgun settings in WP Mail SMTP\" class=\"wp-image-119166\"/></figure></div>
<!-- /wp:image -->

<!-- wp:heading {\"level\":3} -->
<h3>5. Send a Test Email</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Before proceeding with this step, make sure that the verification process from Step 3 is complete. This may take a while, so it’s possible you’ll need to come back to this later.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Once your domain is verified and your settings have been added to WP Mail SMTP, it’s important to send a test email to ensure that everything is working properly. To do this, make sure you’re on the&nbsp;<strong>Settings » WP Mail SMTP</strong>&nbsp;page and open the&nbsp;<strong>Email Test</strong>&nbsp;tab.</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":118201,\"align\":\"center\"} -->
<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://wpforms.com/wp-content/uploads/2017/12/Send-test-email-in-WP-Mail-SMTP.png\" alt=\"Send test email in WP Mail SMTP\" class=\"wp-image-118201\"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>On this tab, you can enter any email address that you have access to and click the&nbsp;<strong>Send Email</strong>&nbsp;button.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>After sending the email, you should see a success message.</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":118113,\"align\":\"center\"} -->
<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://wpforms.com/wp-content/uploads/2017/12/WP-Mail-SMTP-test-email-was-sent-successfully.png\" alt=\"WP Mail SMTP test email was sent successfully\" class=\"wp-image-118113\"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>If you check the inbox for that email address, you should receive the email for this test.<strong>Note:</strong>&nbsp;Be sure to also submit a couple of test submissions for your forms after completing this setup to check that emails deliver successfully.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you see any issues, we recommend setting the&nbsp;<strong>From Email</strong>&nbsp;in your form’s&nbsp;<a href=\"https://wpforms.com/docs/setup-form-notification-wpforms/\">notification settings</a>&nbsp;to the same email you set up Mailgun with.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>That’s it! You have successfully setup your site to send WordPress emails with Mailgun. Now your form notifications will reliably be delivered.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Looking for more email notification&nbsp;tips? You might also want to check out our guide on&nbsp;<a href=\"https://wpforms.com/send-users-confirmation-emails-from-wordpress-forms/\">how to send users confirmation emails from WordPress forms</a>. This is a great way to reassure visitors that their message has been received, and prevent them from sending duplicates.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Don’t have WPForms yet? What are you waiting for? Get started with the most powerful&nbsp;<a href=\"https://wpforms.com/\">WordPress forms plugin</a>&nbsp;today.</p>
<!-- /wp:paragraph -->","How to Send WordPress Emails With Mailgun Using WP Mail SMTP","","publish","open","open","","how-to-send-wordpress-emails-with-mailgun-using-wp-mail-smtp","","","2018-12-15 15:55:07","2018-12-15 15:55:07","",0,"https://www.lifelongfamilies.com/?p=407",0,"post","",0
2854,2,"2018-12-19 12:11:54","2018-12-19 12:11:54","<!-- wp:quote -->
<blockquote class=\"wp-block-quote\"><p>git config credential.helper 'store [&lt;options>]'<br><br>Using this helper will store your passwords unencrypted on disk, protected only by filesystem permissions. If this is not an acceptable security tradeoff, try <a href=\"https://git-scm.com/docs/git-credential-cache\">git-credential-cache</a>, or find a helper that integrates with secure storage provided by your operating system.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:heading -->
<h2 id=\"_options\">OPTIONS</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>--file=&lt;path&gt;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Use&nbsp;<code>&lt;path&gt;</code>&nbsp;to lookup and store credentials. The file will have its filesystem permissions set to prevent other users on the system from reading it, but will not be encrypted or otherwise protected. If not specified, credentials will be searched for from&nbsp;<code>~/.git-credentials</code>&nbsp;and&nbsp;<code>$XDG_CONFIG_HOME/git/credentials</code>, and credentials will be written to&nbsp;<code>~/.git-credentials</code>&nbsp;if it exists, or<code>$XDG_CONFIG_HOME/git/credentials</code>&nbsp;if it exists and the former does not. See also&nbsp;<a href=\"https://git-scm.com/docs/git-credential-store#FILES\">FILES</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id=\"FILES\">FILES</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If not set explicitly with&nbsp;<code>--file</code>, there are two files where git-credential-store will search for credentials in order of precedence:~/.git-credentials</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>User-specific credentials file.$XDG_CONFIG_HOME/git/credentials</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Second user-specific credentials file. If&nbsp;<em>$XDG_CONFIG_HOME</em>&nbsp;is not set or empty,&nbsp;<code>$HOME/.config/git/credentials</code>&nbsp;will be used. Any credentials stored in this file will not be used if&nbsp;<code>~/.git-credentials</code>&nbsp;has a matching credential as well. It is a good idea not to create this file if you sometimes use older versions of Git that do not support it.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For credential lookups, the files are read in the order given above, with the first matching credential found taking precedence over credentials found in files further down the list.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Credential storage will by default write to the first existing file in the list. If none of these files exist,&nbsp;<code>~/.git-credentials</code>&nbsp;will be created and written to.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>When erasing credentials, matching credentials will be erased from all files.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id=\"_examples\">EXAMPLES</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The point of this helper is to reduce the number of times you must type your username or password. For example:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">$ git config credential.helper store
$ git push http://example.com/repo.git
Username: &lt;type your username&gt;
Password: &lt;type your password&gt;

</pre>
<!-- /wp:preformatted -->

<!-- wp:shortcode -->
[several days later]
<!-- /wp:shortcode -->

<!-- wp:paragraph -->
<p>
$ git push http://example.com/repo.git
</p>
<!-- /wp:paragraph -->

<!-- wp:shortcode -->
[your credentials are used automatically]
<!-- /wp:shortcode -->

<!-- wp:heading -->
<h2 id=\"_storage_format\">STORAGE FORMAT</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The&nbsp;<code>.git-credentials</code>&nbsp;file is stored in plaintext. Each credential is stored on its own line as a URL like:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">https://user:pass@example.com</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>When Git needs authentication for a particular URL context, credential-store will consider that context a pattern to match against each entry in the credentials file. If the protocol, hostname, and username (if we already have one) match, then the password is returned to Git. See the discussion of configuration in&nbsp;<a href=\"https://git-scm.com/docs/gitcredentials\">gitcredentials[7]</a>&nbsp;for more information.</p>
<!-- /wp:paragraph -->","Ways to remember git credentials,","","publish","closed","closed","","ways-to-remember-git-credentials","","","2018-12-19 12:11:54","2018-12-19 12:11:54","",0,"https://www.lifelongfamilies.com/?p=2508",0,"post","",0
2855,2,"2018-12-19 16:49:29","2018-12-19 16:49:29","<!-- wp:list --><ul><li><em><strong>LEMP stack stands for Linux, Nginx, MariaDB, and PHP. Here in LAMP stack which stands for Linux, Apache, MariaDB and PHP, all components are not tightly coupled. So by replacing Apache With Nginx, we are installing LEMP stack. This tutorial outlines how to install LEMP stack on Ubuntu 18.04.</strong></em></li></ul><!-- /wp:quote -->

<!-- wp:paragraph --><h3 id=\"introduction\">Introduction</h3><p>The LEMP software stack is a group of software that can be used to serve dynamic web pages and web applications. This is an acronym that describes a <strong>L</strong>inux operating system, with an Nginx (pronounced like “<strong>E</strong>ngine-X”) web server. The backend data is stored in the <strong>M</strong>ySQL database and the dynamic processing is handled by <strong>P</strong>HP.</p><p>This guide demonstrates how to install a LEMP stack on an Ubuntu 18.04 server. The Ubuntu operating system takes care of the first requirement. We will describe how to get the rest of the components up and running.</p><h2 id=\"prerequisites\">Prerequisites</h2><p>Before you complete this tutorial, you should have a regular, non-root user account on your server with <code>sudo</code> privileges. Set up this account by completing our <a href=\"https://www.lifelongfamilies.com/how-to-install-the-lamp-stack-on-ubuntu-16-04-18-04-18-10/\">initial server setup guide for Ubuntu 18.04</a>.</p><p>Once you have your user available, you are ready to begin the steps outlined in this guide.</p><h2 id=\"step-1-–-installing-the-nginx-web-server\">Step 1 – Installing the Nginx Web Server</h2><p>In order to display web pages to our site visitors, we are going to employ Nginx, a modern, efficient web server.</p><p>All of the software used in this procedure will come from Ubuntu's default package repositories. This means we can use the <code>apt</code> package management suite to complete the necessary installations.</p><p>Since this is our first time using <code>apt</code> for this session, start off by updating your server’s package index. Following that, install the server:</p><ul><li>sudo apt update</li></ul><ul class=\"prefixed\"><li class=\"line\">sudo apt install nginx</li></ul><p>On Ubuntu 18.04, Nginx is configured to start running upon installation.</p><p>If you have the <code>ufw</code> firewall running, as outlined in the initial setup guide, you will need to allow connections to Nginx. Nginx registers itself with <code>ufw</code> upon installation, so the procedure is rather straightforward.</p><p>It is recommended that you enable the most restrictive profile that will still allow the traffic you want. Since you haven't configured SSL for your server in this guide, you will only need to allow traffic on port <code>80</code>.</p><p>Enable this by typing:</p><p>sudo ufw allow 'Nginx HTTP'</p><p>You can verify the change by running:</p><p>sudo ufw status</p><p>This command’s output will show that HTTP traffic is allowed:</p><p>Output</p><p><code>Status: active

To                         Action      From
--                         ------      ----
OpenSSH                    ALLOW       Anywhere                  
Nginx HTTP                 ALLOW       Anywhere                  
OpenSSH (v6)               ALLOW       Anywhere (v6)             
Nginx HTTP (v6)            ALLOW       Anywhere (v6)
</code></p><p><code></code>With the new firewall rule added, you can test if the server is up and running by accessing your server's domain name or public IP address in your web browser.</p><p>If you do not have a domain name pointed at your server and you do not know your server's public IP address, you can find it by running the following command:</p><p>ip addr show eth0 | grep inet | awk '{ print $2; }' | sed 's/\\/.*$//'</p><p>This will print out a few IP addresses. You can try each of them in turn in your web browser.</p><p>As an alternative, you can check which IP address is accessible, as viewed from other locations on the internet:</p><p>curl -4 icanhazip.com</p><p>Type the address that you receive in your web browser and it will take you to Nginx's default landing page:</p><p><code>http://<span class=\"highlight\">server_domain_or_IP</span></code></p><p><code></code><img src=\"https://assets.digitalocean.com/articles/lemp_ubuntu_1604/nginx_default.png\" alt=\"Nginx default page\" /></p><p>If you see the above page, you have successfully installed Nginx.</p><p><strong>Step 2 – Installing MySQL to Manage Site Data</strong></p><p>Now that you have a web server, you need to install MySQL (a database management system) to store and manage the data for your site.</p><p>Install MySQL by typing:</p><p>sudo apt install mysql-server</p><p>The MySQL database software is now installed, but its configuration is not yet complete.</p><p>To secure the installation, MySQL comes with a script that will ask whether we want to modify some insecure defaults. Initiate the script by typing:</p><p>sudo mysql_secure_installation</p><p>This script will ask if you want to configure the <code>VALIDATE PASSWORD PLUGIN</code>.</p><p><span class=\"warning\"><strong>Warning:</strong> Enabling this feature is something of a judgment call. If enabled, passwords which don't match the specified criteria will be rejected by MySQL with an error. This will cause issues if you use a weak password in conjunction with software which automatically configures MySQL user credentials, such as the Ubuntu packages for phpMyAdmin. It is safe to leave validation disabled, but you should always use strong, unique passwords for database credentials.</span></p><p>Answer <code>Y</code> for yes, or anything else to continue without enabling.</p><p><code>VALIDATE PASSWORD PLUGIN can be used to test passwords
and improve security. It checks the strength of password
and allows the users to set only those passwords which are
secure enough. Would you like to setup VALIDATE PASSWORD plugin?

Press y|Y for Yes, any other key for No:
</code></p><p><code></code>If you've enabled validation, the script will also ask you to select a level of password validation. Keep in mind that if you enter <strong>2</strong> – for the strongest level – you will receive errors when attempting to set any password which does not contain numbers, upper and lowercase letters, and special characters, or which is based on common dictionary words.</p><p><code>There are three levels of password validation policy:

LOW    Length &gt;= 8
MEDIUM Length &gt;= 8, numeric, mixed case, and special characters
STRONG Length &gt;= 8, numeric, mixed case, special characters and dictionary                  file

Please enter 0 = LOW, 1 = MEDIUM and 2 = STRONG: <span class=\"highlight\">1</span>
</code></p><p><code></code>Next, you'll be asked to submit and confirm a root password:</p><p><code>Please set the password for root here.

New password: 

Re-enter new password:</code></p><p><code></code>For the rest of the questions, you should press <code style=\"background-color: #ffffff; color: #4b4f53;\">Y</code> and hit the <code style=\"background-color: #ffffff; color: #4b4f53;\">ENTER</code> key at each prompt. This will remove some anonymous users and the test database, disable remote root logins, and load these new rules so that MySQL immediately respects the changes we have made.</p><p>Note that in Ubuntu systems running MySQL 5.7 (and later versions), the <strong>root</strong> MySQL user is set to authenticate using the <code>auth_socket</code> plugin by default rather than with a password. This allows for some greater security and usability in many cases, but it can also complicate things when you need to allow an external program (e.g., phpMyAdmin) to access the user.</p><p>If using the <code>auth_socket</code> plugin to access MySQL fits with your workflow, you can proceed to Step 3. If, however, you prefer to use a password when connecting to MySQL as <strong>root</strong>, you will need to switch its authentication method from <code>auth_socket</code> to <code>mysql_native_password</code>. To do this, open up the MySQL prompt from your terminal:</p><p>sudo mysql</p><p>Next, check which authentication method each of your MySQL user accounts use with the following command:</p><p><span style=\"white-space: pre;\">SELECT user,authentication_string,plugin,host FROM mysql.user;</span></p><p>Output</p><p><code>+------------------+-------------------------------------------+-----------------------+-----------+
| user             | authentication_string                     | plugin                | host      |
+------------------+-------------------------------------------+-----------------------+-----------+
| root             |                                           | auth_socket           | localhost |
| mysql.session    | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password | localhost |
| mysql.sys        | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password | localhost |
| debian-sys-maint | *CC744277A401A7D25BE1CA89AFF17BF607F876FF | mysql_native_password | localhost |
+------------------+-------------------------------------------+-----------------------+-----------+
4 rows in set (0.00 sec)
</code></p><p><code></code>In this example, you can see that the <strong>root</strong> user does in fact authenticate using the <code>auth_socket</code> plugin. To configure the <strong>root</strong> account to authenticate with a password, run the following <code>ALTER USER</code> command. Be sure to change <code><span class=\"highlight\">password</span></code> to a strong password of your choosing:</p><p><em><span style=\"white-space: pre;\">ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '</span><span class=\"highlight\" style=\"white-space: pre;\">password</span><span style=\"white-space: pre;\">';</span></em></p><p>Then, run <code>FLUSH PRIVILEGES</code> which tells the server to reload the grant tables and put your new changes into effect:</p><p><span style=\"white-space: pre;\"><em>FLUSH PRIVILEGES</em>;</span></p><p>Check the authentication methods employed by each of your users again to confirm that <strong>root</strong> no longer authenticates using the <code>auth_socket</code> plugin:</p><p><span style=\"white-space: pre;\">S<em>ELECT user,authentication_string,plugin,host FROM mysql.user;</em></span></p><p>Output</p><p><code>+------------------+-------------------------------------------+-----------------------+-----------+
| user             | authentication_string                     | plugin                | host      |
+------------------+-------------------------------------------+-----------------------+-----------+
| root             | *3636DACC8616D997782ADD0839F92C1571D6D78F | <span class=\"highlight\">mysql_native_password</span> | localhost |
| mysql.session    | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password | localhost |
| mysql.sys        | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password | localhost |
| debian-sys-maint | *CC744277A401A7D25BE1CA89AFF17BF607F876FF | mysql_native_password | localhost |
+------------------+-------------------------------------------+-----------------------+-----------+
4 rows in set (0.00 sec)
</code></p><p><code></code>You can see in this example output that the <strong>root</strong> MySQL user now authenticates using a password. Once you confirm this on your own server, you can exit the MySQL shell:</p><p><em><span style=\"white-space: pre;\">exit</span></em></p><p><strong>Note</strong>: After configuring your <strong>root</strong> MySQL user to authenticate with a password, you'll no longer be able to access MySQL with the <code>sudo mysql</code> command used previously. Instead, you must run the following:</p><p><em>mysql -u root -p</em></p><p>After entering the password you just set, you will see the MySQL prompt.</p><p>At this point, your database system is now set up and you can move on to installing PHP.</p><p><strong>Step 3 – Installing PHP and Configuring Nginx to Use the PHP Processor</strong></p><p>You now have Nginx installed to serve your pages and MySQL installed to store and manage your data. However, you still don't have anything that can generate dynamic content. This is where PHP comes into play.</p><p>Since Nginx does not contain native PHP processing like some other web servers, you will need to install <code>php-fpm</code>, which stands for \"fastCGI process manager\". We will tell Nginx to pass PHP requests to this software for processing.</p><p><strong>Note</strong>: Depending on your cloud provider, you may need to add Ubuntu's <code>universe</code> repository, which includes free and open-source software maintained by the Ubuntu community, before installing the <code>php-fpm</code> package. You can do this by typing:</p><p><em>sudo add-apt-repository universe</em></p><p>Install the <code>php-fpm</code> module along with an additional helper package, <code>php-mysql</code>, which will allow PHP to communicate with your database backend. The installation will pull in the necessary PHP core files. Do this by typing:</p><p><em>sudo apt install php-fpm php-mysql</em></p><p>You now have all of the required LEMP stack components installed, but you still need to make a few configuration changes in order to tell Nginx to use the PHP processor for dynamic content.</p><p>This is done on the server block level (server blocks are similar to Apache's virtual hosts). To do this, open a new server block configuration file within the</p><p> <code><em>/etc/nginx/sites-available/</em></code> </p><p>directory. In this example, the new server block configuration file is named <code>example.com</code>, although you can name yours whatever you’d like:</p><p><em>sudo nano /etc/nginx/sites-available/<span class=\"highlight\">example.com</span></em></p><p>By editing a new server block configuration file, rather than editing the default one, you’ll be able to easily restore the default configuration if you ever need to.</p><p>Add the following content, which was taken and slightly modified from the default server block configuration file, to your new server block configuration file:</p><p><em>/etc/nginx/sites-available/example.com</em></p><p><code>server {
        listen 80;
        root /var/www/html;
        index index.php index.html index.htm index.nginx-debian.html;
        server_name <span class=\"highlight\">example.com</span>;

        location / {
                try_files $uri $uri/ =404;
        }

        location ~ \\.php$ {
                include snippets/fastcgi-php.conf;
                fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
        }

        location ~ /\\.ht {
                deny all;
        }
}
</code></p><p><code></code><code></code>Here’s what each of these directives and location blocks do:</p><p><code style=\"background-color: #ffffff; color: #4b4f53;\">listen</code> — Defines what port Nginx will listen on. In this case, it will listen on port <code style=\"background-color: #ffffff; color: #4b4f53;\">80</code>, the default port for HTTP.</p><ul><li><code>root</code> — Defines the document root where the files served by the website are stored.</li><li><code>index</code> — Configures Nginx to prioritize serving files named <code>index.php</code> when an index file is requested, if they’re available.</li><li><code>server_name</code> — Defines which server block should be used for a given request to your server. <strong>Point this directive to your server's domain name or public IP address.</strong></li><li><code>location /</code> — The first location block includes a <code>try_files</code> directive, which checks for the existence of files matching a URI request. If Nginx cannot find the appropriate file, it will return a 404 error.</li><li><code>location ~ \\.php$</code> — This location block handles the actual PHP processing by pointing Nginx to the <code>fastcgi-php.conf</code> configuration file and the <code>php7.2-fpm.sock</code> file, which declares what socket is associated with <code>php-fpm</code>.</li><li><code>location ~ /\\.ht</code> — The last location block deals with <code>.htaccess</code> files, which Nginx does not process. By adding the <code>deny all</code> directive, if any <code>.htaccess</code> files happen to find their way into the document root they will not be served to visitors.</li></ul><p>After adding this content, save and close the file. Enable your new server block by creating a symbolic link from your new server block configuration file (in the </p><p><em><code>/etc/nginx/sites-available/</code> directory) to the <code>/etc/nginx/sites-enabled/</code> directory:</em></p><p><em>sudo ln -s /etc/nginx/sites-available/<span class=\"highlight\">example.com</span> /etc/nginx/sites-enabled/</em></p><p>Then, unlink the default configuration file from the <code>/sites-enabled/</code> directory:</p><p><em>sudo unlink /etc/nginx/sites-enabled/default</em></p><p><strong>Note</strong>: If you ever need to restore the default configuration, you can do so by recreating the symbolic link, like this:</p><p><em>sudo ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/</em></p><p>Test your new configuration file for syntax errors by typing:</p><p><em>sudo nginx -t</em></p><p>If any errors are reported, go back and recheck your file before continuing.</p><p>When you are ready, reload Nginx to make the necessary changes:</p><p><em>sudo systemctl reload nginx</em></p><p>This concludes the installation and configuration of your LEMP stack. However, it’s prudent to confirm that all of the components can communicate with one another.</p><p><strong>Step 4 – Creating a PHP File to Test Configuration</strong></p><p>Your LEMP stack should now be completely set up. You can test it to validate that Nginx can correctly hand <code>.php</code> files off to the PHP processor.</p><p>To do this, use your text editor to create a test PHP file called <code>info.php</code> in your document root:</p><p><em>sudo nano /var/www/html/info.php</em></p><p>Enter the following lines into the new file. This is valid PHP code that will return information about your server:</p><p>/var/www/html/info.php</p><p><code>&lt;?php
phpinfo(); ?&gt;</code></p><p>When you are finished, save and close the file.</p><p>Now, you can visit this page in your web browser by visiting your server's domain name or public IP address followed by <code>/info.php</code>:</p><p><code>http://<span class=\"highlight\">your_server_domain_or_IP</span>/info.php
</code></p><p>You should see a web page that has been generated by PHP with information about your server:</p><p class=\"growable\"><img class=\"alignnone size-full wp-image-2649\" src=\"https://www.lifelongfamilies.com/wp-content/uploads/2018/12/php_info_1804.png\" alt=\"php_info_1804\" width=\"1892\" height=\"1544\" /></p><p>If you see a page that looks like this, you've set up PHP processing with Nginx successfully.</p><p>After verifying that Nginx renders the page correctly, it's best to remove the file you created as it can actually give unauthorized users some hints about your configuration that may help them try to break in. You can always regenerate this file if you need it later.</p><p>For now, remove the file by typing:</p><p>sudo rm /var/www/html/info.php</p><p>With that, you now have a fully-configured and functioning LEMP stack on your Ubuntu 18.04 server.</p><p><strong>Conclusion</strong></p><p>A LEMP stack is a powerful platform that will allow you to set up and serve nearly any website or application from your server. Where are a number of next steps you could take from here. For example, you should ensure that connections to your server are secured.</p><pre class=\"code-pre command\"><code></code></pre><!-- /wp:paragraph -->","How To Install LEMP Stack On Ubuntu 14.04, 16.04 and 18.04","LAMP is an acronym for Linux (Ubuntu), Apache2 HTTP Server, MariaDB or MySQL Database Server and PHP Scripting Language… It is a group of open source software and building block of many of the web applications and majoriy of the content management systems (CMS) in use toda","publish","open","open","","install-lemp-stack-on-ubuntu","","","2018-12-19 16:49:29","2018-12-19 16:49:29","",0,"https://www.lifelongfamilies.com/?p=2513",0,"post","",0
2856,2,"2018-12-20 15:27:04","2018-12-20 15:27:04","<!-- wp:heading {\"level\":6} -->
<h6 id=\"introduction\"><em><strong>When you first create a new Ubuntu 18.04 server, there are a few configuration steps that you should take early on as part of the basic setup. This will increase the security and usability of your server and will give you a solid foundation for subsequent actions.</strong></em></h6>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><strong>Note:</strong>&nbsp;The guide below demonstrates how to manually complete the steps we recommend for new Ubuntu 18.04 servers. Following this procedure manually can be useful to learn some basic system administration skills and as an exercise to fully understand the actions being taken on your server. As an alternative, if you wish to get up and running more quickly, you can&nbsp;<a href=\"https://www.digitalocean.com/community/tutorials/automating-initial-server-setup-with-ubuntu-18-04\">run our initial server setup script</a>&nbsp;which automates these steps.<br></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id=\"step-1-—-logging-in-as-root\">Step 1 — Logging in as Root</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To log into your server, you will need to know your&nbsp;<strong>server's public IP address</strong>. You will also need the password or, if you installed an SSH key for authentication, the private key for the&nbsp;<strong>root</strong>&nbsp;user's account. If you have not already logged into your server, you may want to follow our guide on&nbsp;<a href=\"https://www.digitalocean.com/community/tutorials/how-to-connect-to-your-droplet-with-ssh\">how to connect to your Droplet with SSH</a>, which covers this process in detail.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you are not already connected to your server, go ahead and log in as the&nbsp;<strong>root</strong>&nbsp;user using the following command (substitute the highlighted portion of the command with your server's public IP address):</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">ssh root@your_server_ip
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Accept the warning about host authenticity if it appears. If you are using password authentication, provide your&nbsp;<strong>root</strong>&nbsp;password to log in. If you are using an SSH key that is passphrase protected, you may be prompted to enter the passphrase the first time you use the key each session. If this is your first time logging into the server with a password, you may also be prompted to change the&nbsp;<strong>root</strong>&nbsp;password.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3 id=\"about-root\">About Root</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The&nbsp;<strong>root</strong>&nbsp;user is the administrative user in a Linux environment that has very broad privileges. Because of the heightened privileges of the&nbsp;<strong>root</strong>&nbsp;account, you are&nbsp;<em>discouraged</em>&nbsp;from using it on a regular basis. This is because part of the power inherent with the&nbsp;<strong>root</strong>&nbsp;account is the ability to make very destructive changes, even by accident.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The next step is to set up an alternative user account with a reduced scope of influence for day-to-day work. We'll teach you how to gain increased privileges during the times when you need them.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id=\"step-2-—-creating-a-new-user\">Step 2 — Creating a New User</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Once you are logged in as&nbsp;<strong>root</strong>, we're prepared to add the new user account that we will use to log in from now on.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This example creates a new user called&nbsp;<strong>sammy</strong>, but you should replace it with a username that you like:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">adduser sammy
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>You will be asked a few questions, starting with the account password.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Enter a strong password and, optionally, fill in any of the additional information if you would like. This is not required and you can just hit&nbsp;<code>ENTER</code>&nbsp;in any field you wish to skip.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id=\"step-3-—-granting-administrative-privileges\">Step 3 — Granting Administrative Privileges</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Now, we have a new user account with regular account privileges. However, we may sometimes need to do administrative tasks.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To avoid having to log out of our normal user and log back in as the&nbsp;<strong>root</strong>&nbsp;account, we can set up what is known as \"superuser\" or&nbsp;<strong>root</strong>&nbsp;privileges for our normal account. This will allow our normal user to run commands with administrative privileges by putting the word&nbsp;<code>sudo</code>&nbsp;before each command.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To add these privileges to our new user, we need to add the new user to the&nbsp;<strong>sudo</strong>&nbsp;group. By default, on Ubuntu 18.04, users who belong to the&nbsp;<strong>sudo</strong>&nbsp;group are allowed to use the&nbsp;<code>sudo</code>&nbsp;command.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>As&nbsp;<strong>root</strong>, run this command to add your new user to the&nbsp;<strong>sudo</strong>&nbsp;group (substitute the highlighted word with your new user):</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">usermod -aG sudo sammy
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Now, when logged in as your regular user, you can type&nbsp;<code>sudo</code>&nbsp;before commands to perform actions with superuser privileges.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id=\"step-4-—-setting-up-a-basic-firewall\">Step 4 — Setting Up a Basic Firewall</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Ubuntu 18.04 servers can use the UFW firewall to make sure only connections to certain services are allowed. We can set up a basic firewall very easily using this application.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>Note:</strong>&nbsp;If your servers are running on DigitalOcean, you can optionally use&nbsp;<a href=\"https://www.digitalocean.com/community/tutorials/an-introduction-to-digitalocean-cloud-firewalls\">DigitalOcean Cloud Firewalls</a>instead of the UFW firewall. We recommend using only one firewall at a time to avoid conflicting rules that may be difficult to debug.<br></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Different applications can register their profiles with UFW upon installation. These profiles allow UFW to manage these applications by name. OpenSSH, the service allowing us to connect to our server now, has a profile registered with UFW.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>You can see this by typing:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">ufw app list
</pre>
<!-- /wp:preformatted -->

<!-- wp:code -->
<pre class=\"wp-block-code\"><code>OutputAvailable applications:
  OpenSSH
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>We need to make sure that the firewall allows SSH connections so that we can log back in next time. We can allow these connections by typing:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">ufw allow OpenSSH
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Afterwards, we can enable the firewall by typing:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">ufw enable
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Type \"<code>y</code>\" and press&nbsp;<code>ENTER</code>&nbsp;to proceed. You can see that SSH connections are still allowed by typing:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">ufw status
</pre>
<!-- /wp:preformatted -->

<!-- wp:code -->
<pre class=\"wp-block-code\"><code>OutputStatus: active

To                         Action      From
--                         ------      ----
OpenSSH                    ALLOW       Anywhere
OpenSSH (v6)               ALLOW       Anywhere (v6)
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As&nbsp;<strong>the firewall is currently blocking all connections except for SSH</strong>, if you install and configure additional services, you will need to adjust the firewall settings to allow acceptable traffic in. You can learn some common UFW operations in&nbsp;<a href=\"https://www.digitalocean.com/community/tutorials/ufw-essentials-common-firewall-rules-and-commands\">this guide</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id=\"step-5-—-enabling-external-access-for-your-regular-user\">Step 5 — Enabling External Access for Your Regular User</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Now that we have a regular user for daily use, we need to make sure we can SSH into the account directly.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>Note:</strong>&nbsp;Until verifying that you can log in and use&nbsp;<code>sudo</code>&nbsp;with your new user, we recommend staying logged in as&nbsp;<strong>root</strong>. This way, if you have problems, you can troubleshoot and make any necessary changes as&nbsp;<strong>root</strong>. If you are using a DigitalOcean Droplet and experience problems with your&nbsp;<strong>root</strong>&nbsp;SSH connection, you can&nbsp;<a href=\"https://www.digitalocean.com/community/tutorials/how-to-use-the-digitalocean-console-to-access-your-droplet\">log into the Droplet using the DigitalOcean Console</a>.<br></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The process for configuring SSH access for your new user depends on whether your server's&nbsp;<strong>root</strong>&nbsp;account uses a password or SSH keys for authentication.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3 id=\"if-the-root-account-uses-password-authentication\">If the Root Account Uses Password Authentication</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you logged in to your&nbsp;<strong>root</strong>&nbsp;account&nbsp;<em>using a password</em>, then password authentication is enabled for SSH. You can SSH to your new user account by opening up a new terminal session and using SSH with your new username:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">ssh sammy@your_server_ip
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>After entering your regular user's password, you will be logged in. Remember, if you need to run a command with administrative privileges, type&nbsp;<code>sudo</code>&nbsp;before it like this:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">sudo command_to_run
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>You will be prompted for your regular user password when using&nbsp;<code>sudo</code>&nbsp;for the first time each session (and periodically afterwards).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To enhance your server's security,&nbsp;<strong>we strongly recommend setting up SSH keys instead of using password authentication</strong>. Follow our guide on&nbsp;<a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-1804\">setting up SSH keys on Ubuntu 18.04</a>&nbsp;to learn how to configure key-based authentication.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3 id=\"if-the-root-account-uses-ssh-key-authentication\">If the Root Account Uses SSH Key Authentication</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you logged in to your&nbsp;<strong>root</strong>&nbsp;account&nbsp;<em>using SSH keys</em>, then password authentication is&nbsp;<em>disabled</em>&nbsp;for SSH. You will need to add a copy of your local public key to the new user's&nbsp;<code>~/.ssh/authorized_keys</code>&nbsp;file to log in successfully.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Since your public key is already in the&nbsp;<strong>root</strong>&nbsp;account's&nbsp;<code>~/.ssh/authorized_keys</code>&nbsp;file on the server, we can copy that file and directory structure to our new user account in our existing session.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The simplest way to copy the files with the correct ownership and permissions is with the&nbsp;<code>rsync</code>command. This will copy the&nbsp;<strong>root</strong>&nbsp;user's&nbsp;<code>.ssh</code>&nbsp;directory, preserve the permissions, and modify the file owners, all in a single command. Make sure to change the highlighted portions of the command below to match your regular user's name:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>Note:</strong>&nbsp;The&nbsp;<code>rsync</code>&nbsp;command treats sources and destinations that end with a trailing slash differently than those without a trailing slash. When using&nbsp;<code>rsync</code>&nbsp;below, be sure that the source directory (<code>~/.ssh</code>)&nbsp;<strong>does not</strong>&nbsp;include a trailing slash (check to make sure you are not using&nbsp;<code>~/.ssh/</code>).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you accidentally add a trailing slash to the command,&nbsp;<code>rsync</code>&nbsp;will copy the&nbsp;<em>contents</em>&nbsp;of the&nbsp;<strong>root</strong>&nbsp;account's&nbsp;<code>~/.ssh</code>&nbsp;directory to the&nbsp;<code>sudo</code>&nbsp;user's home directory instead of copying the entire&nbsp;<code>~/.ssh</code>&nbsp;directory structure. The files will be in the wrong location and SSH will not be able to find and use them.<br></p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">rsync --archive --chown=sammy:sammy ~/.ssh /home/sammy
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Now, open up a new terminal session and using SSH with your new username:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">ssh sammy@your_server_ip
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>You should be logged in to the new user account without using a password. Remember, if you need to run a command with administrative privileges, type&nbsp;<code>sudo</code>&nbsp;before it like this:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">sudo command_to_run
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>You will be prompted for your regular user password when using&nbsp;<code>sudo</code>&nbsp;for the first time each session (and periodically afterwards).</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id=\"where-to-go-from-here\">Where To Go From Here?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>At this point, you have a solid foundation for your server. You can install any of the software you need on your server now.</p>
<!-- /wp:paragraph -->","Initial Server Setup with Ubuntu 18.04","","publish","closed","closed","","initial-server-setup-with-ubuntu-18-04","","","2018-12-20 15:27:04","2018-12-20 15:27:04","",0,"https://www.lifelongfamilies.com/?p=2517",0,"post","",0
2858,2,"2018-12-20 15:31:34","2018-12-20 15:31:34","<!-- wp:paragraph --><p><em>SSH, or secure shell, is an encrypted protocol used to administer and communicate with servers. When working with an Ubuntu server, chances are you will spend most of your time in a terminal session connected to your server through SSH.</em></p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>In this guide, we'll focus on setting up SSH keys for a vanilla Ubuntu 16.04 installation. SSH keys provide an easy, secure way of logging into your server and are recommended for all users.</p><!-- /wp:paragraph -->

<!-- wp:heading --><h2 id=\"step-1-—-create-the-rsa-key-pair\">Step 1 — Create the RSA Key Pair</h2><!-- /wp:heading -->

<!-- wp:paragraph --><p>The first step is to create a key pair on the client machine (usually your computer):</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">ssh-keygen
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>By default <code>ssh-keygen</code> will create a 2048-bit RSA key pair, which is secure enough for most use cases (you may optionally pass in the <code>-b 4096</code> flag to create a larger 4096-bit key).</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>After entering the command, you should see the following output:</p><!-- /wp:paragraph -->

<!-- wp:code --><pre class=\"wp-block-code\"><code>OutputGenerating public/private rsa key pair.
Enter file in which to save the key (/your_home/.ssh/id_rsa):
</code></pre><!-- /wp:code -->

<!-- wp:paragraph --><p>Press <code>ENTER</code> to save the key pair into the <code>.ssh/</code> subdirectory in your home directory, or specify an alternate path.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>If you had previously generated an SSH key pair, you may see the following prompt:</p><!-- /wp:paragraph -->

<!-- wp:code --><pre class=\"wp-block-code\"><code>Output/home/your_home/.ssh/id_rsa already exists.
Overwrite (y/n)?
</code></pre><!-- /wp:code -->

<!-- wp:paragraph --><p>If you choose to overwrite the key on disk, you will <strong>not</strong> be able to authenticate using the previous key anymore. Be very careful when selecting yes, as this is a destructive process that cannot be reversed.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>You should then see the following prompt:</p><!-- /wp:paragraph -->

<!-- wp:code --><pre class=\"wp-block-code\"><code>OutputEnter passphrase (empty for no passphrase):
</code></pre><!-- /wp:code -->

<!-- wp:paragraph --><p>Here you optionally may enter a secure passphrase, which is highly recommended. A passphrase adds an additional layer of security to prevent unauthorized users from logging in. To learn more about security, consult our tutorial on <a href=\"https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server\">How To Configure SSH Key-Based Authentication on a Linux Server</a>.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>You should then see the following output:</p><!-- /wp:paragraph -->

<!-- wp:code --><pre class=\"wp-block-code\"><code>OutputYour identification has been saved in /your_home/.ssh/id_rsa.
Your public key has been saved in /your_home/.ssh/id_rsa.pub.
The key fingerprint is:
a9:49:2e:2a:5e:33:3e:a9:de:4e:77:11:58:b6:90:26 username@remote_host
The key's randomart image is:
+--[ RSA 2048]----+
|     ..o         |
|   E o= .        |
|    o. o         |
|        ..       |
|      ..S        |
|     o o.        |
|   =o.+.         |
|. =++..          |
|o=++.            |
+-----------------+
</code></pre><!-- /wp:code -->

<!-- wp:paragraph --><p>You now have a public and private key that you can use to authenticate. The next step is to place the public key on your server so that you can use SSH-key-based authentication to log in.</p><!-- /wp:paragraph -->

<!-- wp:heading --><h2 id=\"step-2-—-copy-the-public-key-to-ubuntu-server\">Step 2 — Copy the Public Key to Ubuntu Server</h2><!-- /wp:heading -->

<!-- wp:paragraph --><p>The quickest way to copy your public key to the Ubuntu host is to use a utility called <code>ssh-copy-id</code>. Due to its simplicity, this method is highly recommended if available. If you do not have <code>ssh-copy-id</code>available to you on your client machine, you may use one of the two alternate methods provided in this section (copying via password-based SSH, or manually copying the key).</p><!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} --><h3 id=\"copying-public-key-using-ssh-copy-id\">Copying Public Key Using <code>ssh-copy-id</code></h3><!-- /wp:heading -->

<!-- wp:paragraph --><p>The <code>ssh-copy-id</code> tool is included by default in many operating systems, so you may have it available on your local system. For this method to work, you must already have password-based SSH access to your server.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>To use the utility, you simply need to specify the remote host that you would like to connect to and the user account that you have password SSH access to. This is the account to which your public SSH key will be copied.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>The syntax is:</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">ssh-copy-id username@remote_host
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>You may see the following message:</p><!-- /wp:paragraph -->

<!-- wp:code --><pre class=\"wp-block-code\"><code>OutputThe authenticity of host '203.0.113.1 (203.0.113.1)' can't be established.
ECDSA key fingerprint is fd:fd:d4:f9:77:fe:73:84:e1:55:00:ad:d6:6d:22:fe.
Are you sure you want to continue connecting (yes/no)? yes
</code></pre><!-- /wp:code -->

<!-- wp:paragraph --><p>This means that your local computer does not recognize the remote host. This will happen the first time you connect to a new host. Type \"yes\" and press <code>ENTER</code> to continue.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>Next, the utility will scan your local account for the <code>id_rsa.pub</code> key that we created earlier. When it finds the key, it will prompt you for the password of the remote user's account:</p><!-- /wp:paragraph -->

<!-- wp:code --><pre class=\"wp-block-code\"><code>Output/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
username@203.0.113.1's password:
</code></pre><!-- /wp:code -->

<!-- wp:paragraph --><p>Type in the password (your typing will not be displayed for security purposes) and press <code>ENTER</code>. The utility will connect to the account on the remote host using the password you provided. It will then copy the contents of your <code>~/.ssh/id_rsa.pub</code> key into a file in the remote account's home <code>~/.ssh</code> directory called <code>authorized_keys</code>.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>You should see the following output:</p><!-- /wp:paragraph -->

<!-- wp:code --><pre class=\"wp-block-code\"><code>OutputNumber of key(s) added: 1

Now try logging into the machine, with:   \"ssh 'username@203.0.113.1'\"
and check to make sure that only the key(s) you wanted were added.
</code></pre><!-- /wp:code -->

<!-- wp:paragraph --><p>At this point, your <code>id_rsa.pub</code> key has been uploaded to the remote account. You can continue on to <a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-1604#step-3-%E2%80%94-authenticate-to-ubuntu-server-using-ssh-keys\">Step 3</a>.</p><!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} --><h3 id=\"copying-public-key-using-ssh\">Copying Public Key Using SSH</h3><!-- /wp:heading -->

<!-- wp:paragraph --><p>If you do not have <code>ssh-copy-id</code> available, but you have password-based SSH access to an account on your server, you can upload your keys using a conventional SSH method.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>We can do this by using the <code>cat</code> command to read the contents of the public SSH key on our local computer and piping that through an SSH connection to the remote server.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>On the other side, we can make sure that the <code>~/.ssh</code> directory exists and has the correct permissions under the account we’re using.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>We can then output the content we piped over into a file called <code>authorized_keys</code> within this directory. We’ll use the <code>&gt;&gt;</code> redirect symbol to append the content instead of overwriting it. This will let us add keys without destroying previously added keys.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>The full command looks like this:</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">cat ~/.ssh/id_rsa.pub | ssh username@remote_host \"mkdir -p ~/.ssh &amp;&amp; touch ~/.ssh/authorized_keys &amp;&amp; chmod -R go= ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys\"
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>You may see the following message:</p><!-- /wp:paragraph -->

<!-- wp:code --><pre class=\"wp-block-code\"><code>OutputThe authenticity of host '203.0.113.1 (203.0.113.1)' can't be established.
ECDSA key fingerprint is fd:fd:d4:f9:77:fe:73:84:e1:55:00:ad:d6:6d:22:fe.
Are you sure you want to continue connecting (yes/no)? yes
</code></pre><!-- /wp:code -->

<!-- wp:paragraph --><p>This means that your local computer does not recognize the remote host. This will happen the first time you connect to a new host. Type \"yes\" and press <code>ENTER</code> to continue.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>Afterwards, you should be prompted to enter the remote user account password:</p><!-- /wp:paragraph -->

<!-- wp:code --><pre class=\"wp-block-code\"><code>Outputusername@203.0.113.1's password:
</code></pre><!-- /wp:code -->

<!-- wp:paragraph --><p>After entering your password, the content of your <code>id_rsa.pub</code> key will be copied to the end of the <code>authorized_keys</code> file of the remote user's account. Continue on to <a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-1604#step-3-%E2%80%94-authenticate-to-ubuntu-server-using-ssh-keys\">Step 3</a> if this was successful.</p><!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} --><h3 id=\"copying-public-key-manually\">Copying Public Key Manually</h3><!-- /wp:heading -->

<!-- wp:paragraph --><p>If you do not have password-based SSH access to your server available, you will have to complete the above process manually.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>We will manually append the content of your <code>id_rsa.pub</code> file to the <code>~/.ssh/authorized_keys</code> file on your remote machine.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>To display the content of your <code>id_rsa.pub</code> key, type this into your local computer:</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">cat ~/.ssh/id_rsa.pub
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>You will see the key's content, which should look something like this:</p><!-- /wp:paragraph -->

<!-- wp:code --><pre class=\"wp-block-code\"><code>Outputssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCqql6MzstZYh1TmWWv11q5O3pISj2ZFl9HgH1JLknLLx44+tXfJ7mIrKNxOOwxIxvcBF8PXSYvobFYEZjGIVCEAjrUzLiIxbyCoxVyle7Q+bqgZ8SeeM8wzytsY+dVGcBxF6N4JS+zVk5eMcV385gG3Y6ON3EG112n6d+SMXY0OEBIcO6x+PnUSGHrSgpBgX7Ks1r7xqFa7heJLLt2wWwkARptX7udSq05paBhcpB0pHtA1Rfz3K2B+ZVIpSDfki9UVKzT8JUmwW6NNzSgxUfQHGwnW7kj4jp4AT0VZk3ADw497M2G/12N0PPB5CnhHf7ovgy6nL1ikrygTKRFmNZISvAcywB9GVqNAVE+ZHDSCuURNsAInVzgYo9xgJDW8wUw2o8U77+xiFxgI5QSZX3Iq7YLMgeksaO4rBJEa54k8m5wEiEE1nUhLuJ0X/vh2xPff6SQ1BL/zkOhvJCACK6Vb15mDOeCSq54Cr7kvS46itMosi/uS66+PujOO+xt/2FWYepz6ZlN70bRly57Q06J+ZJoc9FfBCbCyYH7U/ASsmY095ywPsBo1XQ9PqhnN1/YOorJ068foQDNVpm146mUpILVxmq41Cj55YKHEazXGsdBIbXWhcrRf4G2fJLRcGUr9q8/lERo9oxRm5JFX6TCmj6kmiFqv+Ow9gI0x8GvaQ== demo@test
</code></pre><!-- /wp:code -->

<!-- wp:paragraph --><p>Access your remote host using whichever method you have available.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>Once you have access to your account on the remote server, you should make sure the <code>~/.ssh</code> directory exists. This command will create the directory if necessary, or do nothing if it already exists:</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">mkdir -p ~/.ssh
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>Now, you can create or modify the <code>authorized_keys</code> file within this directory. You can add the contents of your <code>id_rsa.pub</code> file to the end of the <code>authorized_keys</code> file, creating it if necessary, using this command:</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">echo public_key_string &gt;&gt; ~/.ssh/authorized_keys
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>In the above command, substitute the <code>public_key_string</code> with the output from the <code>cat ~/.ssh/id_rsa.pub</code> command that you executed on your local system. It should start with <code>ssh-rsa AAAA...</code>.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>Finally, we’ll ensure that the <code>~/.ssh</code> directory and <code>authorized_keys</code> file have the appropriate permissions set:</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">chmod -R go= ~/.ssh
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>This recursively removes all “group” and “other” permissions for the <code>~/.ssh/</code> directory.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>If you’re using the <code>root</code> account to set up keys for a user account, it’s also important that the <code>~/.ssh</code>directory belongs to the user and not to <code>root</code>:</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">chown -R sammy:sammy ~/.ssh
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>In this tutorial our user is named sammy but you should substitute the appropriate username into the above command.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>We can now attempt passwordless authentication with our Ubuntu server.</p><!-- /wp:paragraph -->

<!-- wp:heading --><h2 id=\"step-3-—-authenticate-to-ubuntu-server-using-ssh-keys\">Step 3 — Authenticate to Ubuntu Server Using SSH Keys</h2><!-- /wp:heading -->

<!-- wp:paragraph --><p>If you have successfully completed one of the procedures above, you should be able to log into the remote host <em>without</em> the remote account's password.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>The basic process is the same:</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">ssh username@remote_host
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>If this is your first time connecting to this host (if you used the last method above), you may see something like this:</p><!-- /wp:paragraph -->

<!-- wp:code --><pre class=\"wp-block-code\"><code>OutputThe authenticity of host '203.0.113.1 (203.0.113.1)' can't be established.
ECDSA key fingerprint is fd:fd:d4:f9:77:fe:73:84:e1:55:00:ad:d6:6d:22:fe.
Are you sure you want to continue connecting (yes/no)? yes
</code></pre><!-- /wp:code -->

<!-- wp:paragraph --><p>This means that your local computer does not recognize the remote host. Type \"yes\" and then press <code>ENTER</code> to continue.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>If you did not supply a passphrase for your private key, you will be logged in immediately. If you supplied a passphrase for the private key when you created the key, you will be prompted to enter it now (note that your keystrokes will not display in the terminal session for security). After authenticating, a new shell session should open for you with the configured account on the Ubuntu server.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>If key-based authentication was successful, continue on to learn how to further secure your system by disabling password authentication.</p><!-- /wp:paragraph -->

<!-- wp:heading --><h2 id=\"step-4-—-disable-password-authentication-on-your-server\">Step 4 — Disable Password Authentication on your Server</h2><!-- /wp:heading -->

<!-- wp:paragraph --><p>If you were able to log into your account using SSH without a password, you have successfully configured SSH-key-based authentication to your account. However, your password-based authentication mechanism is still active, meaning that your server is still exposed to brute-force attacks.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>Before completing the steps in this section, make sure that you either have SSH-key-based authentication configured for the root account on this server, or preferably, that you have SSH-key-based authentication configured for a non-root account on this server with <code>sudo</code> privileges. This step will lock down password-based logins, so ensuring that you will still be able to get administrative access is crucial.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>Once you've confirmed that your remote account has administrative privileges, log into your remote server with SSH keys, either as root or with an account with <code>sudo</code> privileges. Then, open up the SSH daemon's configuration file:</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">sudo nano /etc/ssh/sshd_config
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>Inside the file, search for a directive called <code>PasswordAuthentication</code>. This may be commented out. Uncomment the line and set the value to \"no\". This will disable your ability to log in via SSH using account passwords:/etc/ssh/sshd_config</p><!-- /wp:paragraph -->

<!-- wp:code --><pre class=\"wp-block-code\"><code>...
PasswordAuthentication no
...
</code></pre><!-- /wp:code -->

<!-- wp:paragraph --><p>Save and close the file when you are finished by pressing <code>CTRL</code> + <code>X</code>, then <code>Y</code> to confirm saving the file, and finally <code>ENTER</code> to exit nano. To actually implement these changes, we need to restart the <code>sshd</code>service:</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">sudo systemctl restart ssh
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>As a precaution, open up a new terminal window and test that the SSH service is functioning correctly before closing this session:</p><!-- /wp:paragraph -->

<!-- wp:preformatted --><pre class=\"wp-block-preformatted\">ssh username@remote_host
</pre><!-- /wp:preformatted -->

<!-- wp:paragraph --><p>Once you have verified your SSH service, you can safely close all current server sessions.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>The SSH daemon on your Ubuntu server now only responds to SSH keys. Password-based authentication has successfully been disabled.</p><!-- /wp:paragraph -->

<!-- wp:heading --><h2 id=\"conclusion\">Conclusion</h2><!-- /wp:heading -->

<!-- wp:paragraph --><p>You should now have SSH-key-based authentication configured on your server, allowing you to sign in without providing an account password.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>If you'd like to learn more about working with SSH, take a look at our <a href=\"https://www.digitalocean.com/community/tutorials/ssh-essentials-working-with-ssh-servers-clients-and-keys\">SSH Essentials Guide</a>.</p><!-- /wp:paragraph -->","How To Set Up SSH Keys on Ubuntu 16.04","SSH, or secure shell, is an encrypted protocol used to administer and communicate with servers. When working with an Ubuntu server, chances are you will spend most of your time in a terminal session connected to your server through SSH.

In this guide, we'll focus on setting up SSH keys for a vanilla Ubuntu 16.04 installation. SSH keys provide an easy, secure way of logging into your server and are recommended for all users","publish","open","open","","how-to-set-up-ssh-keys-on-ubuntu-16-04","","","2018-12-20 15:31:34","2018-12-20 15:31:34","",0,"https://www.lifelongfamilies.com/?p=2521",0,"post","",0
2538,2,"2018-12-20 19:59:32","2018-12-20 19:59:32","<!-- wp:paragraph -->
<p>AMP is an acronym for&nbsp;Linux (Ubuntu),&nbsp;Apache2 HTTP Server,&nbsp;MariaDB or&nbsp;MySQL Database Server and&nbsp;PHP Scripting Language… It is&nbsp;a group of open source software and building block of many of the web applications and majoriy of the content management systems (CMS) in use today…</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Content Management Systems like WordPress, Joomla, Drupal and others, they all use the LAMP Stack…</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you’re going to be developing any PHP based applications or websites, then you’re probably going to be using the LAMP Stack as well…</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This brief tutorial is going to show students and new users how to install Apache2, MariaDB and PHP on Ubuntu Linux 16.04 / 18.04 and 18.10 servers…</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To get started with installing the LAMP Stack, follow the steps below:</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":4} -->
<h4>Step 1: Prepare Ubuntu Linux</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The LAMP stack includes the Linux machine… in this case, Ubuntu… To get LAMP you must first install a Linux machine… this post assumes you’ve already install Ubuntu server..</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>After installing Ubuntu server, run the commands below to update the server…</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>sudo apt update &amp;&amp; sudo apt dist-upgrade &amp;&amp; sudo apt autoremove</code></p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":4} -->
<h4>Step 2: Install Apache2 HTTP Server</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Apache2 HTTP Server represents the A in the LAMP stack… It’s the most popular web server installed today… way ahead of other popular web servers…</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To install Apache2 HTTP on Ubuntu server, run the commands below…</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">sudo apt update
sudo apt install apache2</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>After installing Apache2, the commands below can be used to stop, start and enable Apache2 service to always start up with the server boots.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">sudo systemctl stop apache2.service
sudo systemctl start apache2.service
sudo systemctl enable apache2.service
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>To test Apache2 setup, open your browser and browse to the server hostname or IP address and you should see Apache2 default test page as shown below.. When you see that, then Apache2 is working as expected..</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>ex..&nbsp;<strong>http://localhost</strong></p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":17012} -->
<figure class=\"wp-block-image\"><img src=\"https://i0.wp.com/websiteforstudents.com/wp-content/uploads/2017/10/apache2_ubuntu_install.png?resize=640%2C236&amp;ssl=1\" alt=\"apache2 ubuntu install\" class=\"wp-image-17012\"/></figure>
<!-- /wp:image -->

<!-- wp:heading {\"level\":4} -->
<h4>Step 3: Install MariaDB Database Server</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>MariaDB stands for M in LAMP and it’s a great place to start when looking at open source database server… Although MySQL was originally the default database server among Linux systems, MariaDB has taken over.. To install it run the commands below.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>sudo apt-get install mariadb-server mariadb-client</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>After installing MariaDB database server, the commands below can be used to stop, start and enable MariaDB service to always start up when the server boots..</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>On Ubuntu&nbsp;16.04&nbsp;LTS</strong></p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">sudo systemctl stop mysql.service
sudo systemctl start mysql.service
sudo systemctl enable mysql.service
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p><strong>On Ubuntu&nbsp;18.04&nbsp;LTS and&nbsp;18.10&nbsp;</strong></p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">sudo systemctl stop mariadb.service
sudo systemctl start mariadb.service
sudo systemctl enable mariadb.service
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>After that, run the commands below to secure MariaDB server by creating a root password and disallowing remote root access.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>sudo mysql_secure_installation</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>When prompted, answer the questions below by following the guide.</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Enter current password for root (enter for none): Just press the&nbsp;Enter</li><li>Set root password? [Y/n]:&nbsp;Y</li><li>New password:&nbsp;Enter password</li><li>Re-enter new password:&nbsp;Repeat password</li><li>Remove anonymous users? [Y/n]:&nbsp;Y</li><li>Disallow root login remotely? [Y/n]:&nbsp;Y</li><li>Remove test database and access to it? [Y/n]: &nbsp;Y</li><li>Reload privilege tables now? [Y/n]: &nbsp;Y</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Restart MariaDB server</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To test if MariaDB is installed, type the commands below to logon to MariaDB server</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>sudo mysql -u root -p</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Then type the password you created above to sign on… if successful, you should see MariaDB welcome message</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":17576} -->
<figure class=\"wp-block-image\"><img src=\"https://i0.wp.com/websiteforstudents.com/wp-content/uploads/2018/01/mariadb_ubuntu_1604.png?resize=640%2C233&amp;ssl=1\" alt=\"mariadb welcome\" class=\"wp-image-17576\"/></figure>
<!-- /wp:image -->

<!-- wp:heading {\"level\":4} -->
<h4>Step 4: Install PHP And Related Modules</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The last component of the LAMP stack is PHP… It’s the P in the LAMP stack… To install PHP and related PHP modules, run the commands below…</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>sudo apt install php libapache2-mod-php php-common php-mbstring php-xmlrpc php-soap php-gd php-xml php-intl php-mysql php-cli php-zip php-curl</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>After installing PHP, run the commands below to find the version installed on the server…</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>php -v</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>You should see an output like the one below:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">PHP 7.2.10-0ubuntu0.18.04.1 (cli) (built: Sep 13 2018 13:45:02) ( NTS )
Copyright (c) 1997-2018 The PHP Group
Zend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies
    with Zend OPcache v7.2.10-0ubuntu0.18.04.1, Copyright (c) 1999-2018, by Zend Technologies
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>The version number determines the location of PHP default configuration file… For PHP&nbsp;7.2, the location is as shown below:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">sudo nano /etc/php/7.2/apache2/php.ini
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Replace the&nbsp;version number&nbsp;above with the version of PHP installed..,..</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>When the file opens, make the changes on the following lines below in the file and save.&nbsp;The value below are great settings to apply in your environments.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">file_uploads = On
allow_url_fopen = On
memory_limit = 256M
upload_max_filesize = 100M
max_execution_time = 360
date.timezone = America/Chicago</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>After making the change above, save the file and close out.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":4} -->
<h4>Step 4: Restart Apache2</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>When you’re done making PHP changes above, run the commands below to restart Apache2 HTTP server for PHP settings to apply…</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>sudo systemctl restart apache2.service</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To test PHP settings with Apache2, create a&nbsp;<strong>phpinfo.php</strong>&nbsp;file in Apache2 root directory by running the commands below</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>sudo nano /var/www/html/phpinfo.php</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Then type the content below and save the file.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>&lt;?php phpinfo( ); ?&gt;</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Save the file.. then browse to your server hostname followed by&nbsp;<strong>phpinfo.php</strong></p>
<!-- /wp:paragraph -->

<!-- wp:embed {\"url\":\"http://localhost/phpinfo.php\"} -->
<figure class=\"wp-block-embed\"><div class=\"wp-block-embed__wrapper\">
http://localhost/phpinfo.php
</div></figure>
<!-- /wp:embed -->

<!-- wp:paragraph -->
<p>You should see PHP default test page…</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":17973} -->
<figure class=\"wp-block-image\"><img src=\"https://i1.wp.com/websiteforstudents.com/wp-content/uploads/2018/02/php_ubuntu_test_nginx.png?resize=640%2C409&amp;ssl=1\" alt=\"PHP 7.2 ubuntu nginx\" class=\"wp-image-17973\"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Congratulations! You’re successfully installed the LAMP Stack on Ubuntu 16.04 / 18.04 / 18.10…</p>
<!-- /wp:paragraph -->","How To Install The LAMP Stack On Ubuntu 16.04 / 18.04 / 18.10","","publish","closed","closed","","how-to-install-the-lamp-stack-on-ubuntu-16-04-18-04-18-10","","","2018-12-20 19:59:32","2018-12-20 19:59:32","",0,"https://www.lifelongfamilies.com/?p=2538",0,"post","",0
2542,2,"2018-12-23 10:09:46","2018-12-23 10:09:46","<h1 class=\"ui_qtext_para u-ltr u-text-align--start\">What is WordPress Hosting</h1>
<p class=\"ui_qtext_para u-ltr u-text-align--start\"><a href=\"https://innoxwebhost.com/wordpress-hosting.php\" target=\"_blank\" rel=\"noopener noreferrer\">WordPress hosting</a> is an optimized shared web hosting for running WordPress sites particularly.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">As the overall high performance including loading speed, security, reliability, etc, it has the own characteristics, and is favored by more and more WordPress users.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">Besides, some web hosts provide many custom features such as marketplace integration of themes &amp; plugins.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">sFTP access to WordPress platforms, automatic WordPress backup, WordPress file update versioning, and so on.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">As generally accepted, there are 4 types of WordPress hosting including free, shared, VPS, dedicated and managed hosting.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">In this following chapters, you will learn the gist of each type to choose the most right solution.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\"><b>Free WordPress Hosting</b></p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">Some companies offer WordPress hosting for free, which is attractive but seldom good.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">We never recommend free WordPress hosting to anyone looking for a real online presence due to numerous drawbacks of this kind of hosting.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">For example, users have to put up with pop-up banners, ads or frequent shut-downs; users are not allowed to place their own ads, to access their files, or to have their own domains for free;</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">and they’ll eventually be converted into paying customers or just leave their sites. Remember, there is always a price to pay for something free.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\"><b>Shared WordPress Hosting</b></p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">Shared WordPress hosting means many users host their sites on a single server, which is administered by the hosting provider.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">The advantage of shared hosting is its low cost because all users share the total cost of the server.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">Shared hosting plans are often claimed to offer unlimited bandwidth and space, but in fact the resources for each account are limited and unevenly distributed.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">Useful tools, such as cPanel and one-click installer, are available for users to set up and manage their sites easily.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">Basically, shared WordPress hosting is a good point for anyone to start their hosting adventure.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">However, it works better with light-traffic websites owned by bloggers or start-up companies because an average plan can handle no more than 300 visits per day.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\"><b>VPS WordPress Hosting</b></p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">VPS hosting providers offer dedicated resources to all users by allocating a fixed portion of server resources to each account.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">Compared with shared hosting, it is more expensive as a physical server is shared by less users.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">VPS offers more privileges which allow users to run multiple WordPress sites and make more profits.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">Besides, the performance of VPS hosting is faster and more stable because of more advanced technologies and better monitoring methods.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">VPS can be used to host traffic-extensive WordPress websites such as popular blogs or medium-sized enterprises with thousands of visits per day.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\"><b>Managed WordPress Hosting</b></p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">Managing a big WordPress site can be a very complex task, that’s why managed WordPress hosting exists.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">The benefit of managed WordPress hosting is that users don’t need to worry about anything.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">It is the provider that deals with all the technical stuffs including server activation, site backup, security, monitoring, maintenance, and continuous optimization.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">So, managed hosting is more expensive than the same level of other hosting services.</p>
<p class=\"ui_qtext_para u-ltr u-text-align--start\">It's recommended to those who are well-off but have no time or skill to manage their sites. E.G. The <a href=\"https://innoxwebhost.com/wordpress-hosting.php\" target=\"_blank\" rel=\"noopener noreferrer\">InnoxWebHost</a> managed WordPress hosting is a good choice, starting at $5.49/mo only. They take over all the difficult stuffs that you only need to focus on content and internet business.</p>
<p> </p>

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->","What is WordPress Hosting","","publish","open","closed","","what-is-wordpress-hosting","","","2018-12-23 10:09:46","2018-12-23 10:09:46","",0,"https://www.lifelongfamilies.com/?p=2542",0,"post","",0
830,2,"2018-12-27 09:43:58","2018-12-27 09:43:58","<!-- wp:spacer {\"height\":50} -->
<div style=\"height:50px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:paragraph {\"dropCap\":true} -->
<p class=\"has-drop-cap\">Duis iaculis mattis rutrum. Sed iaculis magna sit amet suscipit ornare. Nulla ornare leo a tortor aliquam, quis interdum ex tempor. Quisque ultricies consequat suscipit. Donec tincidunt tempor ornare. Praesent a enim vel augue suscipit auctor in gravida augue. Suspendisse ut libero sit amet augue molestie fringilla. Fusce molestie, velit a finibus eleifend, nibh odio sagittis est, id aliquet turpis orci quis nibh. Donec tincidunt tempor ornare. Praesent a enim vel augue suscipit auctor in gravida augue. Suspendisse ut libero sit amet augue molestie fringilla. Fusce molestie, velit a finibus eleifend, nibh odio sagittis est, id aliquet turpis orci quis nibh. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper.<br></p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class=\"wp-block-quote\"><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:spacer {\"height\":60} -->
<div style=\"height:60px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:image {\"id\":890} -->
<figure class=\"wp-block-image\"><img src=\"https://websitedemos.net/agency-02/wp-content/uploads/sites/30/2018/12/pic03-free-img-1024x427.jpg\" alt=\"\" class=\"wp-image-890\"/></figure>
<!-- /wp:image -->

<!-- wp:uagb/section {\"align\":\"right\",\"block_id\":\"bfb2c916-f8e7-469b-ad04-e756ce35871e\",\"topPadding\":0,\"bottomPadding\":15,\"leftPadding\":50,\"topMargin\":-100,\"backgroundType\":\"color\",\"backgroundColor\":\"#313131\"} -->
<section class=\"wp-block-uagb-section uagb-section__wrap uagb-section__background-color\" id=\"uagb-section-bfb2c916-f8e7-469b-ad04-e756ce35871e\"><div class=\"uagb-section__overlay\"></div><div class=\"uagb-section__inner-wrap\"><!-- wp:uagb/advanced-heading {\"block_id\":\"dbce6c5f-3d3e-4580-bb4c-dd5fcf8cd271\",\"headingAlign\":\"left\",\"headingColor\":\"#ffffff\",\"separatorHeight\":0,\"subHeadFontSize\":0} -->
<div class=\"wp-block-uagb-advanced-heading\" id=\"uagb-adv-heading-dbce6c5f-3d3e-4580-bb4c-dd5fcf8cd271\"><h2 class=\"uagb-heading-text\"> <br>Animated logos is an obvious trend </h2><div class=\"uagb-separator-wrap\"><div class=\"uagb-separator\"></div></div><p class=\"uagb-desc-text\"></p></div>
<!-- /wp:uagb/advanced-heading --></div></section>
<!-- /wp:uagb/section -->

<!-- wp:spacer {\"height\":80} -->
<div style=\"height:80px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:columns -->
<div class=\"wp-block-columns has-2-columns\"><!-- wp:column -->
<div class=\"wp-block-column\"><!-- wp:paragraph -->
<p><strong> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo</strong>.&nbsp;<br><br>Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Ut elit tellus, luctus nec ullamcorper mattis. </p>
<!-- /wp:paragraph --></div>
<!-- /wp:column -->

<!-- wp:column -->
<div class=\"wp-block-column\"><!-- wp:paragraph -->
<p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp; . </p>
<!-- /wp:paragraph --></div>
<!-- /wp:column --></div>
<!-- /wp:columns -->","Web animation","","publish","open","open","","web-animation-3","","","2018-12-27 09:43:58","2018-12-27 09:43:58","",0,"https://websitedemos.net/agency-02/?p=830",0,"post","",0
887,2,"2018-12-27 10:39:40","2018-12-27 10:39:40","<!-- wp:spacer {\"height\":50} -->
<div style=\"height:50px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:paragraph {\"dropCap\":true} -->
<p class=\"has-drop-cap\">Duis iaculis mattis rutrum. Sed iaculis magna sit amet suscipit ornare. Nulla ornare leo a tortor aliquam, quis interdum ex tempor. Quisque ultricies consequat suscipit. Donec tincidunt tempor ornare. Praesent a enim vel augue suscipit auctor in gravida augue. Suspendisse ut libero sit amet augue molestie fringilla. Fusce molestie, velit a finibus eleifend, nibh odio sagittis est, id aliquet turpis orci quis nibh. Donec tincidunt tempor ornare. Praesent a enim vel augue suscipit auctor in gravida augue. Suspendisse ut libero sit amet augue molestie fringilla. Fusce molestie, velit a finibus eleifend, nibh odio sagittis est, id aliquet turpis orci quis nibh. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper.<br></p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class=\"wp-block-quote\"><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:spacer {\"height\":60} -->
<div style=\"height:60px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:image {\"id\":890} -->
<figure class=\"wp-block-image\"><img src=\"https://websitedemos.net/agency-02/wp-content/uploads/sites/30/2018/12/pic03-free-img-1024x427.jpg\" alt=\"\" class=\"wp-image-890\"/></figure>
<!-- /wp:image -->

<!-- wp:uagb/section {\"align\":\"right\",\"block_id\":\"5ff25d18-7567-4192-8ef5-e1179d9ef521\",\"topPadding\":0,\"bottomPadding\":15,\"leftPadding\":50,\"topMargin\":-100,\"backgroundType\":\"color\",\"backgroundColor\":\"#313131\"} -->
<section class=\"wp-block-uagb-section uagb-section__wrap uagb-section__background-color\" id=\"uagb-section-5ff25d18-7567-4192-8ef5-e1179d9ef521\"><div class=\"uagb-section__overlay\"></div><div class=\"uagb-section__inner-wrap\"><!-- wp:uagb/advanced-heading {\"block_id\":\"5b1d7209-03b4-4e95-b6ba-d064d178e844\",\"headingAlign\":\"left\",\"headingColor\":\"#ffffff\",\"separatorHeight\":0,\"subHeadFontSize\":0} -->
<div class=\"wp-block-uagb-advanced-heading\" id=\"uagb-adv-heading-5b1d7209-03b4-4e95-b6ba-d064d178e844\"><h2 class=\"uagb-heading-text\"> <br> U<g class=\"gr_ gr_11 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace\" id=\"11\" data-gr-id=\"11\">nique</g> experiences for consumers   </h2><div class=\"uagb-separator-wrap\"><div class=\"uagb-separator\"></div></div><p class=\"uagb-desc-text\"></p></div>
<!-- /wp:uagb/advanced-heading --></div></section>
<!-- /wp:uagb/section -->

<!-- wp:spacer {\"height\":80} -->
<div style=\"height:80px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:columns -->
<div class=\"wp-block-columns has-2-columns\"><!-- wp:column -->
<div class=\"wp-block-column\"><!-- wp:paragraph -->
<p><strong> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo</strong>.&nbsp;<br><br>Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Ut elit tellus, luctus nec ullamcorper mattis. </p>
<!-- /wp:paragraph --></div>
<!-- /wp:column -->

<!-- wp:column -->
<div class=\"wp-block-column\"><!-- wp:paragraph -->
<p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp; . </p>
<!-- /wp:paragraph --></div>
<!-- /wp:column --></div>
<!-- /wp:columns -->","More adventurous colours","Duis iaculis mattis rutrum. Sed iaculis magna sit amet suscipit ornare. Nulla ornare leo a tortor aliquam, quis interdum ex tempor. Quisque ultricies consequat suscipit. Donec tincidunt tempor ornare. Praesent a enim vel augue suscipit auctor in gravida augue. Suspendisse ut libero sit amet augue molestie fringilla. Fusce molestie, velit a finibus eleifend, nibh odio&hellip;","publish","open","open","","web-animation-2","","","2018-12-27 10:39:40","2018-12-27 10:39:40","",0,"https://websitedemos.net/agency-02/?p=887",0,"post","",0
895,2,"2018-12-27 10:47:27","2018-12-27 10:47:27","<!-- wp:spacer {\"height\":50} -->
<div style=\"height:50px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:paragraph {\"dropCap\":true} -->
<p class=\"has-drop-cap\">Duis iaculis mattis rutrum. Sed iaculis magna sit amet suscipit ornare. Nulla ornare leo a tortor aliquam, quis interdum ex tempor. Quisque ultricies consequat suscipit. Donec tincidunt tempor ornare. Praesent a enim vel augue suscipit auctor in gravida augue. Suspendisse ut libero sit amet augue molestie fringilla. Fusce molestie, velit a finibus eleifend, nibh odio sagittis est, id aliquet turpis orci quis nibh. Donec tincidunt tempor ornare. Praesent a enim vel augue suscipit auctor in gravida augue. Suspendisse ut libero sit amet augue molestie fringilla. Fusce molestie, velit a finibus eleifend, nibh odio sagittis est, id aliquet turpis orci quis nibh. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper.<br></p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class=\"wp-block-quote\"><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:spacer {\"height\":60} -->
<div style=\"height:60px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:image {\"id\":901} -->
<figure class=\"wp-block-image\"><img src=\"https://websitedemos.net/agency-02/wp-content/uploads/sites/30/2018/12/pic04-free-img-1024x427.jpg\" alt=\"\" class=\"wp-image-901\"/></figure>
<!-- /wp:image -->

<!-- wp:uagb/section {\"align\":\"right\",\"block_id\":\"b9238a10-201b-464f-8ec2-a523387a40f8\",\"topPadding\":0,\"bottomPadding\":15,\"leftPadding\":50,\"topMargin\":-100,\"backgroundType\":\"color\",\"backgroundColor\":\"#313131\"} -->
<section class=\"wp-block-uagb-section uagb-section__wrap uagb-section__background-color\" id=\"uagb-section-b9238a10-201b-464f-8ec2-a523387a40f8\"><div class=\"uagb-section__overlay\"></div><div class=\"uagb-section__inner-wrap\"><!-- wp:uagb/advanced-heading {\"block_id\":\"2f590278-956f-474f-b528-3ba8c712bddb\",\"headingAlign\":\"left\",\"headingColor\":\"#ffffff\",\"separatorHeight\":0,\"subHeadFontSize\":0} -->
<div class=\"wp-block-uagb-advanced-heading\" id=\"uagb-adv-heading-2f590278-956f-474f-b528-3ba8c712bddb\"><h2 class=\"uagb-heading-text\">  <br>Collaborative platform to finally bring a standardisation to the design  </h2><div class=\"uagb-separator-wrap\"><div class=\"uagb-separator\"></div></div><p class=\"uagb-desc-text\"></p></div>
<!-- /wp:uagb/advanced-heading --></div></section>
<!-- /wp:uagb/section -->

<!-- wp:spacer {\"height\":80} -->
<div style=\"height:80px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:columns -->
<div class=\"wp-block-columns has-2-columns\"><!-- wp:column -->
<div class=\"wp-block-column\"><!-- wp:paragraph -->
<p><strong> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo</strong>.&nbsp;<br><br>Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Ut elit tellus, luctus nec ullamcorper mattis. </p>
<!-- /wp:paragraph --></div>
<!-- /wp:column -->

<!-- wp:column -->
<div class=\"wp-block-column\"><!-- wp:paragraph -->
<p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp; . </p>
<!-- /wp:paragraph --></div>
<!-- /wp:column --></div>
<!-- /wp:columns -->","Standardisation between design tools","Duis iaculis mattis rutrum. Sed iaculis magna sit amet suscipit ornare. Nulla ornare leo a tortor aliquam, quis interdum ex tempor. Quisque ultricies consequat suscipit. Donec tincidunt tempor ornare. Praesent a enim vel augue suscipit auctor in gravida augue. Suspendisse ut libero sit amet augue molestie fringilla. Fusce molestie, velit a finibus eleifend, nibh odio&hellip;","publish","open","open","","web-animation-3-2","","","2018-12-27 10:47:27","2018-12-27 10:47:27","",0,"https://websitedemos.net/agency-02/?p=895",0,"post","",0
905,2,"2018-12-27 11:06:55","2018-12-27 11:06:55","<!-- wp:spacer {\"height\":50} -->
<div style=\"height:50px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:paragraph {\"dropCap\":true} -->
<p class=\"has-drop-cap\">Duis iaculis mattis rutrum. Sed iaculis magna sit amet suscipit ornare. Nulla ornare leo a tortor aliquam, quis interdum ex tempor. Quisque ultricies consequat suscipit. Donec tincidunt tempor ornare. Praesent a enim vel augue suscipit auctor in gravida augue. Suspendisse ut libero sit amet augue molestie fringilla. Fusce molestie, velit a finibus eleifend, nibh odio sagittis est, id aliquet turpis orci quis nibh. Donec tincidunt tempor ornare. Praesent a enim vel augue suscipit auctor in gravida augue. Suspendisse ut libero sit amet augue molestie fringilla. Fusce molestie, velit a finibus eleifend, nibh odio sagittis est, id aliquet turpis orci quis nibh. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper.<br></p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class=\"wp-block-quote\"><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:spacer {\"height\":60} -->
<div style=\"height:60px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:image {\"id\":907} -->
<figure class=\"wp-block-image\"><img src=\"https://websitedemos.net/agency-02/wp-content/uploads/sites/30/2018/12/pic05-free-img-1024x427.jpg\" alt=\"\" class=\"wp-image-907\"/></figure>
<!-- /wp:image -->

<!-- wp:uagb/section {\"align\":\"right\",\"block_id\":\"ca6a8de2-2297-4d4b-8682-3e9083276bd4\",\"topPadding\":0,\"bottomPadding\":15,\"leftPadding\":50,\"topMargin\":-100,\"backgroundType\":\"color\",\"backgroundColor\":\"#313131\"} -->
<section class=\"wp-block-uagb-section uagb-section__wrap uagb-section__background-color\" id=\"uagb-section-ca6a8de2-2297-4d4b-8682-3e9083276bd4\"><div class=\"uagb-section__overlay\"></div><div class=\"uagb-section__inner-wrap\"><!-- wp:uagb/advanced-heading {\"block_id\":\"234c1c21-eef6-4ce6-846f-66e0f7dcdb9f\",\"headingAlign\":\"left\",\"headingColor\":\"#ffffff\",\"separatorHeight\":0,\"subHeadFontSize\":0} -->
<div class=\"wp-block-uagb-advanced-heading\" id=\"uagb-adv-heading-234c1c21-eef6-4ce6-846f-66e0f7dcdb9f\"><h2 class=\"uagb-heading-text\"> <br> Illustrations can be extremely practical ways of presenting or explaining information  </h2><div class=\"uagb-separator-wrap\"><div class=\"uagb-separator\"></div></div><p class=\"uagb-desc-text\"></p></div>
<!-- /wp:uagb/advanced-heading --></div></section>
<!-- /wp:uagb/section -->

<!-- wp:spacer {\"height\":80} -->
<div style=\"height:80px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:columns -->
<div class=\"wp-block-columns has-2-columns\"><!-- wp:column -->
<div class=\"wp-block-column\"><!-- wp:paragraph -->
<p><strong> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo</strong>.&nbsp;<br><br>Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Ut elit tellus, luctus nec ullamcorper mattis. </p>
<!-- /wp:paragraph --></div>
<!-- /wp:column -->

<!-- wp:column -->
<div class=\"wp-block-column\"><!-- wp:paragraph -->
<p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp; . </p>
<!-- /wp:paragraph --></div>
<!-- /wp:column --></div>
<!-- /wp:columns -->","Playful illustration","Duis iaculis mattis rutrum. Sed iaculis magna sit amet suscipit ornare. Nulla ornare leo a tortor aliquam, quis interdum ex tempor. Quisque ultricies consequat suscipit. Donec tincidunt tempor ornare. Praesent a enim vel augue suscipit auctor in gravida augue. Suspendisse ut libero sit amet augue molestie fringilla. Fusce molestie, velit a finibus eleifend, nibh odio&hellip;","publish","open","open","","web-animation-3-3","","","2018-12-27 11:06:55","2018-12-27 11:06:55","",0,"https://websitedemos.net/agency-02/?p=905",0,"post","",0
909,2,"2018-12-27 11:15:21","2018-12-27 11:15:21","<!-- wp:spacer {\"height\":50} -->
<div style=\"height:50px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:paragraph {\"dropCap\":true} -->
<p class=\"has-drop-cap\">Duis iaculis mattis rutrum. Sed iaculis magna sit amet suscipit ornare. Nulla ornare leo a tortor aliquam, quis interdum ex tempor. Quisque ultricies consequat suscipit. Donec tincidunt tempor ornare. Praesent a enim vel augue suscipit auctor in gravida augue. Suspendisse ut libero sit amet augue molestie fringilla. Fusce molestie, velit a finibus eleifend, nibh odio sagittis est, id aliquet turpis orci quis nibh. Donec tincidunt tempor ornare. Praesent a enim vel augue suscipit auctor in gravida augue. Suspendisse ut libero sit amet augue molestie fringilla. Fusce molestie, velit a finibus eleifend, nibh odio sagittis est, id aliquet turpis orci quis nibh. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper.<br></p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class=\"wp-block-quote\"><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:spacer {\"height\":60} -->
<div style=\"height:60px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:image {\"id\":911} -->
<figure class=\"wp-block-image\"><img src=\"https://websitedemos.net/agency-02/wp-content/uploads/sites/30/2018/12/pic06-free-img-1024x427.jpg\" alt=\"\" class=\"wp-image-911\"/></figure>
<!-- /wp:image -->

<!-- wp:uagb/section {\"align\":\"right\",\"block_id\":\"f383cb12-e0cf-4798-8018-24b169a8d8c4\",\"topPadding\":0,\"bottomPadding\":15,\"leftPadding\":50,\"topMargin\":-100,\"backgroundType\":\"color\",\"backgroundColor\":\"#313131\"} -->
<section class=\"wp-block-uagb-section uagb-section__wrap uagb-section__background-color\" id=\"uagb-section-f383cb12-e0cf-4798-8018-24b169a8d8c4\"><div class=\"uagb-section__overlay\"></div><div class=\"uagb-section__inner-wrap\"><!-- wp:uagb/advanced-heading {\"block_id\":\"1bdc722e-181e-4cae-a988-cb43e8a82381\",\"headingAlign\":\"left\",\"headingColor\":\"#ffffff\",\"separatorHeight\":0,\"subHeadFontSize\":0} -->
<div class=\"wp-block-uagb-advanced-heading\" id=\"uagb-adv-heading-1bdc722e-181e-4cae-a988-cb43e8a82381\"><h2 class=\"uagb-heading-text\"> <br>The Biggest Marketing Challenges for Small Businesses   </h2><div class=\"uagb-separator-wrap\"><div class=\"uagb-separator\"></div></div><p class=\"uagb-desc-text\"></p></div>
<!-- /wp:uagb/advanced-heading --></div></section>
<!-- /wp:uagb/section -->

<!-- wp:spacer {\"height\":80} -->
<div style=\"height:80px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:columns -->
<div class=\"wp-block-columns has-2-columns\"><!-- wp:column -->
<div class=\"wp-block-column\"><!-- wp:paragraph -->
<p><strong> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo</strong>.&nbsp;<br><br>Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Ut elit tellus, luctus nec ullamcorper mattis. </p>
<!-- /wp:paragraph --></div>
<!-- /wp:column -->

<!-- wp:column -->
<div class=\"wp-block-column\"><!-- wp:paragraph -->
<p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp; . </p>
<!-- /wp:paragraph --></div>
<!-- /wp:column --></div>
<!-- /wp:columns -->","Marketing","Duis iaculis mattis rutrum. Sed iaculis magna sit amet suscipit ornare. Nulla ornare leo a tortor aliquam, quis interdum ex tempor. Quisque ultricies consequat suscipit. Donec tincidunt tempor ornare. Praesent a enim vel augue suscipit auctor in gravida augue. Suspendisse ut libero sit amet augue molestie fringilla. Fusce molestie, velit a finibus eleifend, nibh odio&hellip;","publish","open","open","","web-animation-3-3-2","","","2018-12-27 11:15:21","2018-12-27 11:15:21","",0,"https://websitedemos.net/agency-02/?p=909",0,"post","",0
913,2,"2018-12-27 11:22:23","2018-12-27 11:22:23","<!-- wp:spacer {\"height\":50} -->
<div style=\"height:50px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:paragraph {\"dropCap\":true} -->
<p class=\"has-drop-cap\">Duis iaculis mattis rutrum. Sed iaculis magna sit amet suscipit ornare. Nulla ornare leo a tortor aliquam, quis interdum ex tempor. Quisque ultricies consequat suscipit. Donec tincidunt tempor ornare. Praesent a enim vel augue suscipit auctor in gravida augue. Suspendisse ut libero sit amet augue molestie fringilla. Fusce molestie, velit a finibus eleifend, nibh odio sagittis est, id aliquet turpis orci quis nibh. Donec tincidunt tempor ornare. Praesent a enim vel augue suscipit auctor in gravida augue. Suspendisse ut libero sit amet augue molestie fringilla. Fusce molestie, velit a finibus eleifend, nibh odio sagittis est, id aliquet turpis orci quis nibh. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper.<br></p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class=\"wp-block-quote\"><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:spacer {\"height\":60} -->
<div style=\"height:60px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:image {\"id\":915} -->
<figure class=\"wp-block-image\"><img src=\"https://websitedemos.net/agency-02/wp-content/uploads/sites/30/2018/12/pic07-free-img-1024x427.jpg\" alt=\"\" class=\"wp-image-915\"/></figure>
<!-- /wp:image -->

<!-- wp:uagb/section {\"align\":\"right\",\"block_id\":\"a2d30912-c9ed-4b5e-8201-f07999938ca8\",\"topPadding\":0,\"bottomPadding\":15,\"leftPadding\":50,\"topMargin\":-100,\"backgroundType\":\"color\",\"backgroundColor\":\"#313131\"} -->
<section class=\"wp-block-uagb-section uagb-section__wrap uagb-section__background-color\" id=\"uagb-section-a2d30912-c9ed-4b5e-8201-f07999938ca8\"><div class=\"uagb-section__overlay\"></div><div class=\"uagb-section__inner-wrap\"><!-- wp:uagb/advanced-heading {\"block_id\":\"af45342e-90c6-4d7c-810c-c0c22eb17b79\",\"headingAlign\":\"left\",\"headingColor\":\"#ffffff\",\"separatorHeight\":0,\"subHeadFontSize\":0} -->
<div class=\"wp-block-uagb-advanced-heading\" id=\"uagb-adv-heading-af45342e-90c6-4d7c-810c-c0c22eb17b79\"><h2 class=\"uagb-heading-text\"> <br>Animated logos is an obvious trend </h2><div class=\"uagb-separator-wrap\"><div class=\"uagb-separator\"></div></div><p class=\"uagb-desc-text\"></p></div>
<!-- /wp:uagb/advanced-heading --></div></section>
<!-- /wp:uagb/section -->

<!-- wp:spacer {\"height\":80} -->
<div style=\"height:80px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>
<!-- /wp:spacer -->

<!-- wp:columns -->
<div class=\"wp-block-columns has-2-columns\"><!-- wp:column -->
<div class=\"wp-block-column\"><!-- wp:paragraph -->
<p><strong> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo</strong>.&nbsp;<br><br>Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Ut elit tellus, luctus nec ullamcorper mattis. </p>
<!-- /wp:paragraph --></div>
<!-- /wp:column -->

<!-- wp:column -->
<div class=\"wp-block-column\"><!-- wp:paragraph -->
<p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp;Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo luctus nec ullamcorper mattis, pulvinar dapibus leo.&nbsp; . </p>
<!-- /wp:paragraph --></div>
<!-- /wp:column --></div>
<!-- /wp:columns -->","Clean Coder Blog","Duis iaculis mattis rutrum. Sed iaculis magna sit amet suscipit ornare. Nulla ornare leo a tortor aliquam, quis interdum ex tempor. Quisque ultricies consequat suscipit. Donec tincidunt tempor ornare. Praesent a enim vel augue suscipit auctor in gravida augue. Suspendisse ut libero sit amet augue molestie fringilla. Fusce molestie, velit a finibus eleifend, nibh odio&hellip;","publish","open","open","","web-animation-3-4","","","2018-12-27 11:22:23","2018-12-27 11:22:23","",0,"https://websitedemos.net/agency-02/?p=913",0,"post","",0
2549,2,"2018-12-28 07:32:53","2018-12-28 07:32:53","<!-- wp:paragraph -->
<p><strong>Domain name registration</strong>&nbsp;is the act of reserving a name on the Internet for a certain period, usually one year. It is important to know that this domain will remain yours for as long as you renew it and there is no way to purchase a domain name forever.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Domain name registration is necessary for a website, an email or another web service. However you don't have to always register a new domain name. Many companies allow you to use subdomains of&nbsp;their domain names for a website, or you can have an email with their primary domain (ex. yahoo.com, gmail.com).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The most important thing about a domain name registration is that it gives you personality and recognized identity. Once you register a domain name, the information about its owner is publicly available.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The price for a domain name registration varies greatly on its extension. For example, the most common .com is the most affordable one, while some country-specific domain name extensions are 5 times more expensive.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>What Is Domain Name Backordering</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Domain name backordering is a service that allows anyone to reserve a domain name in the event that the name is not yet available to the public.&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If there is a domain name you wish to use, but is currently owned by another party, you can submit a domain name backorder request to the registrar. The registrar will notify you when that domain expires and becomes publicly available again.&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>However, this could also work on your domain name, if someone else should have interest in it.&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you are looking for a domain name backordering service, you should look for a backorder serving that works with a few registrars. The more registrars mean better odds of a successful backorder.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Which TLD should I choose?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>TLD, or Top-Level Domain, is the part of the domain name on the right of the dot (\".\"). The most common TLDs are .com, .net, .org.&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>There are the various types:&nbsp;<br>gTLD - generic top level domain</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>.com</li><li>.org - typically for organizations</li><li>.net</li><li>.edu - restricted for post-secondary educational establishments</li><li>.mil - restricted for US military</li><li>.gov - restricted for US governments and agencies</li><li>.int - restricted for international organizations established by treaty</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>uTLD - unsponsored top level domains</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>.info - for informational sites</li><li>.name - for families and individuals</li><li>.biz - for businesses</li><li>.mobi - reserved for websites catering to mobile devices</li><li>.travel - reserved for travel agents, airlines, tourism bureaus and hoteliers</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>ccTLD - country code top level domains</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>.ca - for Canada</li><li>.uk - for the UK</li><li>.fr - for France</li><li>Almost every country has a country domain</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>When choosing your domain extension, decide if you are targeting a local country or if you are planning to go international. ccTLDs are an excellent choice if you need to market your business to a certain geographic region.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Domain Name Transfer</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>There may be many reasons why you want to transfer your domain name registration from one registrar to another: pricing, domain management and administration, services, customer support, etc.&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>All domain name transfer requests must be initiated by the registrant or the Administrative Contact of the domain, and processed by the gaining registrar, the registrar whom you are transferring your domain to.&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The gaining registrar is required to obtain expressed authorization from the registrant or the Administrative Contact of the domain name. A transfer can only proceed upon the receipt of confirmation of transfer. This confirmation of transfer can be a physical authorization process or an electronic process. Regardless of the process, the confirmation of transfer needs to be validated with the domain's \"AuthInfo\" code.&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The domain \"AuthInfo\" code is a unique code generated on a per-domain basis and is used for authorization or confirmation of a transfer request.&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The registrant can obtain the domain's \"AuthInfo\" code from the losing registrar (the registrar whom you are transferring the domain away from).&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Before you proceed with a domain name transfer request, make sure:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>The domain has been registered for at least 60 days with your current registrar. If you just recently registered or transferred your domain name, you will need to wait 60 days before applying for transfer.</li><li>The admin contact e-mail is valid, as this is where most registrars will send the confirmation of transfer and the domain \"AuthInfo\" code.</li><li>Domain name is not in protected/locked status.</li><li>Domain name is not in redemption status.</li><li>Domain name is not locked for either non-payment or at the owner's request.</li><li>Domain name is not currently in dispute.</li><li>Domain name has not been deleted.</li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>Does it matter where I purchase my domain name?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Once you have decided on the domain name you want to use, your next step is to choose a registrar for your domain name registration.&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Registrars vary in price, services offered, ease of use, management system, and more.&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>A registrar is the company that takes your domain name registration information and reserves your domain from the main registry.&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>When looking for a domain registrar, you should keep in mind:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong>Price</strong>The price you pay for your domain can vary greatly between registrars. When comparing prices, take into account the other services included by the registrar, their customer support, testimonies, etc.</li><li><strong>Accreditation</strong>Your chosen registrar should be ICANN accredited. ICANN maintains a list of accredited domain registrars. If the domain you have chosen is a reseller of an accredited registrar, they should let you know which registrar they represent.</li><li><strong>Terms</strong>Take the time to read and understand your domain registration terms. Pay attention to ownership clause and other terms of condition.</li><li><strong>Duration</strong>Do not register your domain for more than one year in the beginning. That give you time to evaluation your registrar before further commitment, as well, allowing you time to evaluate your domain name in case you wish to use a different domain name.</li><li><strong>Delay</strong>A domain name registration generally takes no more than 48 hours.</li><li><strong>Transfer Policy</strong>You should be able to transfer your domain to another registrar without any restriction other than those enforced by ICANN. Check the registrar for other restrictions and curbs.</li><li><strong>Customer Support</strong>Check if phone, chat or email support is available.</li><li><strong>Management</strong>Does the registrar provide a domain name management panel for you to manage your own domain name? Or do all changes have to go through them?</li></ul>
<!-- /wp:list -->","Domain Name Registration Process","","publish","closed","closed","","domain-name-registration-process","","","2018-12-28 07:32:53","2018-12-28 07:32:53","",0,"https://www.lifelongfamilies.com/?p=2549",0,"post","",0
2554,2,"2018-12-31 15:46:35","2018-12-31 15:46:35","<!-- wp:paragraph -->
<p>LAMP is an acronym for Linux, Apache2, MariaDB or MySQL and PHP… It’s the building block for majority of the content management systems in use today, like WordPress, Joomla, Drupal and many more…</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you’re going to be developing any PHP based applications or websites with support for Apache2 and MariaDB, then you’re going to probably need the latest version of PHP installed…</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>With PHP 7.2 released, you can now include the latest PHP version with your stack to improve the performance of the sites and applications… This brief tutorial is going to show students and new users how to install Apache2, MariaDB and PHP 7.2 on Ubuntu Linux 16.04, 17.10 and 18.04 LTS server.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To get started with install LAMP with PHP 7.2 support, follow the steps below:</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":4} -->
<h4>Step 1: Install Apache2 HTTP Server on Ubuntu</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Apache2 HTTP Server represents the A in the LAMP stack… It’s the most popular web server installed today ahead of all the other webservers…</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To install Apache2 HTTP on Ubuntu server, run the commands below…</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">sudo apt update
sudo apt install apache2</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>After installing Apache2, the commands below can be used to stop, start and enable Apache2 service to always start up with the server boots.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">sudo systemctl stop apache2.service
sudo systemctl start apache2.service
sudo systemctl enable apache2.service
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>To test Apache2 setup, open your browser and browse to the server hostname or IP address and you should see Apache2 default test page as shown below.. When you see that, then Apache2 is working as expected..</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>ex.. <strong>http://localhost</strong></p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":2556} -->
<figure class=\"wp-block-image\"><img src=\"https://www.lifelongfamilies.com/wp-content/uploads/2018/12/Screenshot-from-2018-12-31-18-48-52-1024x505.png\" alt=\"\" class=\"wp-image-2556\"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>then sudo nano /etc/apache2/apache2.conf</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>find </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>&lt;Directory /srv/>#    </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>   Options Indexes FollowSymLinks</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>    AllowOverride None    </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>  Require all granted</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>&lt;/Directory></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>replace with</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":2558} -->
<figure class=\"wp-block-image\"><img src=\"https://www.lifelongfamilies.com/wp-content/uploads/2018/12/image.png\" alt=\"\" class=\"wp-image-2558\"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>write  sudo a2enmod rewrite</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":2561} -->
<figure class=\"wp-block-image\"><img src=\"https://i1.wp.com/innoxafrica.com/wp-content/uploads/2018/12/image-1.png?fit=1024%2C176&amp;ssl=1\" alt=\"\" class=\"wp-image-2561\"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":4} -->
<h4>Step 2: Install MariaDB Database Server</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>MariaDB database server is a great place to start when looking at open source database server… Although MySQL was originally the default database server, MariaDB has taken over.. To install it run the commands below.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>sudo apt-get install mariadb-server mariadb-client</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>After installing MariaDB, the commands below can be used to stop, start and enable MariaDB service to always start up when the server boots..</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>On Ubuntu&nbsp;16.04&nbsp;LTS</strong></p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">sudo systemctl stop mysql.service
sudo systemctl start mysql.service
sudo systemctl enable mysql.service
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p><strong>On Ubuntu&nbsp;17.10&nbsp;and&nbsp;18.04&nbsp;LTS</strong></p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">sudo systemctl stop mariadb.service
sudo systemctl start mariadb.service
sudo systemctl enable mariadb.service
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>After that, run the commands below to secure MariaDB server by creating a root password and disallowing remote root access.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>sudo mysql_secure_installation</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>When prompted, answer the questions below by following the guide.</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Enter current password for root (enter for none): Just press the&nbsp;Enter</li><li>Set root password? [Y/n]:&nbsp;Y</li><li>New password:&nbsp;Enter password</li><li>Re-enter new password:&nbsp;Repeat password</li><li>Remove anonymous users? [Y/n]:&nbsp;Y</li><li>Disallow root login remotely? [Y/n]:&nbsp;Y</li><li>Remove test database and access to it? [Y/n]: &nbsp;Y</li><li>Reload privilege tables now? [Y/n]: &nbsp;Y</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Restart MariaDB server</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To test if MariaDB is installed, type the commands below to logon to MariaDB server</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>sudo mysql -u root -p</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Then type the password you created above to sign on… if successful, you should see MariaDB welcome message</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":17576} -->
<figure class=\"wp-block-image\"><img src=\"https://i0.wp.com/websiteforstudents.com/wp-content/uploads/2018/01/mariadb_ubuntu_1604.png?resize=658%2C240&amp;ssl=1\" alt=\"mariadb welcome\" class=\"wp-image-17576\"/></figure>
<!-- /wp:image -->

<!-- wp:heading {\"level\":4} -->
<h4>Step 3: Install PHP 7.2 and Related Modules</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>PHP 7.2 isn’t available on Ubuntu default repositories… in order to install it, you will have to get it from third-party repositories.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Run the commands below to add the below third party repository to upgrade to PHP 7.2</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">sudo apt-get install software-properties-common
sudo add-apt-repository ppa:ondrej/php</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Then update and upgrade to PHP 7.2</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>sudo apt update</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Run the commands below to install PHP 7.2 FPM and related modules.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>sudo apt install php7.2 libapache2-mod-php7.2 php7.2-common php7.2-mbstring php7.2-xmlrpc php7.2-soap php7.2-gd php7.2-xml php7.2-intl php7.2-mysql php7.2-cli php7.2-zip php7.2-curl</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>After install PHP 7.2, run the commands below to open PHP-FPM default file.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">sudo nano /etc/php/7.2/apache2/php.ini
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Then make the changes on the following lines below in the file and save.&nbsp;The value below are great settings to apply in your environments.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">file_uploads = On
allow_url_fopen = On
memory_limit = 256M
upload_max_filesize = 100M
max_execution_time = 360
date.timezone = America/Chicago</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>After making the change above, save the file and close out.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":4} -->
<h4>Step 4: Restart Apache2</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Unlike Nginx, there’s nothing to configure.. after install PHP and related modules, all you have to do is restart Apache2 to reload PHP configurations…</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Re restart Apache2, run the commands below</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>sudo systemctl restart apache2.service</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To test PHP 7.2 settings with Apache2, create a&nbsp;<strong>phpinfo.php</strong>&nbsp;file in Apache2 root directory by running the commands below</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>sudo nano /var/www/html/phpinfo.php</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Then type the content below and save the file.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>&lt;?php phpinfo( ); ?&gt;</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Save the file.. then browse to your server hostname followed by phpinfo.php</p>
<!-- /wp:paragraph -->

<!-- wp:embed {\"url\":\"http://localhost/phpinfo.php\"} -->
<figure class=\"wp-block-embed\"><div class=\"wp-block-embed__wrapper\">
http://localhost/phpinfo.php
</div></figure>
<!-- /wp:embed -->

<!-- wp:paragraph -->
<p>You should see PHP default test page…</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":17973} -->
<figure class=\"wp-block-image\"><img src=\"https://i1.wp.com/websiteforstudents.com/wp-content/uploads/2018/02/php_ubuntu_test_nginx.png?resize=950%2C607&amp;ssl=1\" alt=\"PHP 7.2 ubuntu nginx\" class=\"wp-image-17973\"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>That’s it! This is how to install LAMP with the latest PHP 7.2 Support on Ubuntu</p>
<!-- /wp:paragraph -->","Step by step installing apache2 into ubuntu 16.04","","publish","open","open","","step-by-step-installing-apache2-into-ubuntu-16-04","","","2018-12-31 15:46:35","2018-12-31 15:46:35","",0,"https://www.lifelongfamilies.com/?p=2554",0,"post","",0
2860,2,"2018-12-31 19:16:46","2018-12-31 19:16:46","<!-- wp:paragraph --><p>It's one of life's great mysteries.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>After debating whether Snapchat is a viable marketing platform, you'll want to know how often you should be posting on social media.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>As a social media manager, you want to achieve the best result from each social media post. There has to be a good time and a bad time to post, right?</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>In this guide, we'll answer this proverbial question so that your content can reach a wider audience.</p><!-- /wp:paragraph -->

<!-- wp:heading --><h2>How often should I post on social media?</h2><!-- /wp:heading -->

<!-- wp:paragraph --><p>Over the years I've read countless articles regarding the optimal posting frequency on social media networks. And I've reached the conclusion that they're all flawed.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>One article suggests posting no more than twice a day on Facebook. The next one says you should post to LinkedIn on weekdays only, preferably between 4 pm and 6 pm.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>But, in reality, <strong>there is no magic formula</strong>.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>Because what works for one brand, doesn't work for another. Sure you can read case studies of what has worked for others, but don't make their solution your solution.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>So, instead of seeking magic formulas, let's focus on these proven posting strategies:</p><!-- /wp:paragraph -->

<!-- wp:list --><ul><li>Posting consistency is more important than posting frequency.</li><li>Content quality is more important than content quantity (and social media networks are letting us know with all the changes).</li><li>Without having an objective for social media, you won't know if your posts are successful or not.</li></ul><!-- /wp:list -->

<!-- wp:heading {\"level\":3} --><h3>Aim for consistency, not frequency</h3><!-- /wp:heading -->

<!-- wp:paragraph --><p>The problem with suggested posting frequencies is the skewed data. It's okay to say, \"We analyzed thousands of posts and this is what we found...\", but this is still a 'mish-mash' of data. For instance, how does the location of you and your audience affect posting, and how do different industries react to the number of posts shared?</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>One of the most baffling suggestions is that you should post at a specific time of day. For example:</p><!-- /wp:paragraph -->

<!-- wp:list --><ul><li><em>\"For best results on Facebook, post once a day between 1 pm and 4 pm.\"</em></li></ul><!-- /wp:list -->

<!-- wp:paragraph --><p>That's crazy and ambiguous. For a start, does it mean 1 pm Sydney, 1 pm London or 1 pm New York? Or does it mean the equivalent of 1 pm CST in your local time, so for example, 1 pm CST would be 7 pm GMT. That's quite relevant, isn’t it?</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>Imagine everyone heeded this advice and posted at 1 pm EST (New York). For 23 hours, Facebook would remain dormant before exploding with thousands of posts at the allotted time.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>A better alternative is to <strong>aim for posting consistency</strong>. Create a plan and stick to it.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>For example, if you decide you'll post twice a day on Facebook, you know you need to create or curate content to fill that schedule. Your audience will know that they can visit your page at any given time and expect two fresh posts every 24 hours.</p><!-- /wp:paragraph -->

<!-- wp:paragraph --><p>The chances of your content being pushed to someone's newsfeed have been reduced following changes to the social media algorithms. You need people to start coming to you. And the best way to attract them is to have something worthwhile for them to digest.</p><!-- /wp:paragraph -->","How Often Should You Post on Social Media in 2019?","How Often Should you Post? Aim to post on Instagram between one to three times per day. Major brands post on average of 1.5 times per day, so if you aim to follow the same rule you should do well. While this is a general rule to follow, it may not work best for you.","publish","open","open","","how-often-should-you-post-to-social-media","","","2018-12-31 19:16:46","2018-12-31 19:16:46","",0,"https://www.lifelongfamilies.com/?p=2566",0,"post","",0
2552,2,"2019-01-05 14:23:42","2019-01-05 14:23:42","Moving your WordPress site from one hosting provider can be a long, tedious, annoying process, but what if it didn’t need to be?

Many people are faced with the daunting task of host service migration due to problems with their current provider that just have them fed up. The problem is that many people push off migrating, because they’re afraid of losing time or making a mistake that will damage their site.

Most people will either hire a professional, find a hosting service that does the migration for them, or just do it themselves to get around the problem.<span id=\"more-751\"></span>

If you spend a little time preparing your own site, migrating is nothing to be worried about. It can be a very straightforward process if approached correctly and can easily be backed out of if any problems occur.
<h3>Back Up and Transfer Your Website Files</h3>
&nbsp;

ven if you don’t know what the backup means or its exact contents, you’ll have it on hand in the event of an unexpected error that makes you wish you could travel back in time.

&nbsp;

<img class=\"alignnone size-full wp-image-2587\" src=\"https://www.lifelongfamilies.com/wp-content/uploads/2019/01/IMAGE-1-download-backup-site-cpanel.png\" alt=\"IMAGE-1-download-backup-site-cpanel.png\" width=\"694\" height=\"270\" />

<strong>If you’re using a free migration host</strong>, now’s the time to request a transfer service! A quick Google search for “HostName website transfer request” will guide you to the appropriate form and migration instructions.

You’ll get a confirmation email that says your new host is working on your project, and it will likely include a contact person to stay in touch with. Stay up to date with the transfer by emailing your contact at the new host.

<strong>If you’re handling the migration yourself</strong>, this guide sums up the steps well:
<ol>
	<li>Backup your WordPress site files using an FTP program.</li>
	<li>Export your WordPress database within the phpMyAdmin program in your control panel.</li>
	<li>Create a new WordPress database on your new host server.</li>
	<li>Edit the wp-config.php file to reflect the new database name and user info.</li>
	<li>Import your saved database and upload your WordPress files to your new host.</li>
</ol>
And, voila! Your WordPress site has a new home. The final step is to point your WordPress site’s domain name to your new host’s nameservers.
<h3>3A. Switch Your DNS Record Settings</h3>
Once your site transfer is complete, you’ll need to change the DNS of the domain name to point to the new host. To do this, simply log into the original domain registrar of the WordPress site, navigate to the DNS section, and change the two name servers to those given to you by your new web host.

For example, if you’re switching your DNS from GoDaddy, your nameservers might be:

<em>NS41.DOMAINCONTROL.COM
NS42.DOMAINCONTROL.COM</em>

To point your domain to InMotion’s nameservers instead, you would change them to:

<em>NS.INMOTIONHOSTING.COM
NS2.INMOTIONHOSTING.COM</em>

That’s it, except for that slightly annoying propagation time your domain might experience!

Your website will now live on a new web host, and you can explore the tools your new host offers. At the same time, you should click around your site to test any broken links or images. Never underestimate the importance of QA!
<div class=\"h2-header\">
<h2 id=\"switch-domains\">B. How to Move Your WordPress Site to a New Domain</h2>
<div class=\"ret-sprite watermark\"></div>
</div>
Moving a WordPress site to a new domain is actually a bit trickier than moving to a new host. But, as with most tasks in WordPress, where there’s a will, there’s a way!

Think back to when Mark Zuckerberg decided to change TheFacebook.com to Facebook.com. Unfortunately, he couldn’t just delete the “the” and call it a day. Changing domain names isn’t as simple as adding or deleting characters. You have to move files and change some database information. Let’s take a look at how to do this.

Note: I strongly recommend pulling up the live chat support to guide you through this process, because, depending on the web host, there may be additional steps required.
<h3>1B. Purchase a New Domain Name Registration</h3>
First, create a new domain name in your hosting account. You can browse available domains and purchase the one you want from a third-party registrar, or you can skip the middleman by selecting a hosting provider that lets you handle your domain registration at signup (often covering the initial year’s registration fees!). Make sure your new domain is pointed to the host that is or will be supporting your WordPress site.
<h3>2B. Migrate Your WordPress Site Files</h3>
Next, log into your cPanel file manager and copy the entire set of public_html files from the site you’d like to move.

<img class=\"alignnone size-full wp-image-2588\" src=\"https://www.lifelongfamilies.com/wp-content/uploads/2019/01/IMAGE-2-click-public-html.png\" alt=\"IMAGE-2-click-public-html\" width=\"694\" height=\"282\" />

Head to the new file manager file of your new domain name. Paste the previously copied files there. You’ll now have two copies of the same site in two separate locations. Next, head to your phpMyAdmin account.

<img class=\"alignnone size-full wp-image-2589\" src=\"https://www.lifelongfamilies.com/wp-content/uploads/2019/01/IMAGE-3-php-my-admin-button.png\" alt=\"IMAGE-3-php-my-admin-button.png\" width=\"694\" height=\"358\" />

Find the directory labeled “wrdp” associated with your old domain name on the left. If you own and operate several domains, this can be a bit challenging at first.

<img class=\"alignnone size-full wp-image-2590\" src=\"https://www.lifelongfamilies.com/wp-content/uploads/2019/01/IMAGE-4-php-my-admin-change-siteurl.png\" alt=\"IMAGE-4-php-my-admin-change-siteurl.png\" width=\"694\" height=\"360\" />

Click the plus sign next to your domain to expand options. Click “wp_options,” and in the section labeled “siteurl” at the top, click on the pencil icon to edit. In the middle box, change the old URL to your new URL, then click “Save” or “Go.”
<h3>3B. De-Index URLs of the Old Domain Site</h3>
You’ve now moved your WordPress site to a new domain name, but people can still access your WordPress site at your old domain name. It would be wise to install a plugin, such as Yoast SEO, on the old site, and have search engines de-index any/all URLs of the old site you’d rather people not use or find.
<div class=\"h2-header\">
<h2 id=\"switch-servers\">C. How to Move Your WordPress Site to a New Server</h2>
<div class=\"ret-sprite watermark\"></div>
</div>
If you strictly want to move your WordPress site or blog to a new (upgraded) server, there’s good news and bad news.

The bad news is that your current server isn’t getting the job done. It’s too slow, too expensive, or too cheap. Or perhaps it won’t let you host multiple domains or isn’t equipped with cPanel — or maybe it got hacked by foreign robot spies. That’s a lot of potentially bad news, so, hopefully, it doesn’t all apply to you.

The good news: It’s easy to move a site to a new server. In fact, most hosts will upgrade servers for you and move everything as well. You’ll simply pay them the difference. Of course, if you need to migrate to a new host altogether as part of your server migration, see above first. To recap, here are the steps to migrate your WordPress site itself:

<strong>Step 1C:</strong> Log into your control panel, back up your site files via the file manager, and export your site database via phpMyAdmin.

<strong>Step 2C:</strong> Create a new database on your new host server, and edit the wp-config file to include the new database name and login credentials. Import your saved database, and upload your WordPress files.

<strong>Step 3C:</strong> Ensure your DNS settings are in place, and conduct a final QA before shutting down your old server or canceling your shared hosting account.
<div class=\"h2-header\">
<h2>You Can be Moved Into Your WordPress Site’s New Home in an Afternoon</h2>
<div class=\"ret-sprite watermark\"></div>
</div>
In short, by using the free resources at your disposal, you (or your client) can be moved into your WordPress site’s new home in about a day. You don’t need to be a tech expert, but do take notes on what your live chat helpers tell you for future migrations. Now, go impress your clients and have fun in your new hosting environment!

&nbsp;

&nbsp;","2019 GUIDE : Step By Step Guide to Migrating Your WordPress Website to a New Web Host","","publish","open","open","","step-by-step-guide-to-migrating-your-wordpress-website-to-a-new-web-host","","","2019-01-05 14:23:42","2019-01-05 14:23:42","",0,"https://www.lifelongfamilies.com/?p=2552",0,"post","",0
2862,2,"2019-01-11 19:22:54","2019-01-11 19:22:54","Node.js is a JavaScript runtime built on Chrome’s V8 JavaScript engine…..  Chrome V8 engine is a Google’s open source high-performance JavaScript engine written in C++ and used in Google Chrome, the open source projects….

V8 engine works on Windows and Linux systems… and can be used to build fast and scalable applications…

This brief tutorial is going to show students and new users how to easily install the latest Node.js and NPM packages on Ubuntu 16.04 / 18.04 LTS servers… Although Node.js comes in Ubuntu default repositories, if you want to get the latest version, you’ll have to add its official PPA…

For more about Node.js, please visit the project’s <a href=\"https://nodejs.org/en/\">homepage</a>…

<span id=\"more-19184\"></span>To get started with install Node.js and NPM, follow the steps below:
<h4>Step 1: Add Node.js PPA</h4>
Before installing the latest version of Node.js, you must add its PPA to Ubuntu… This repository is provided by the official package mainterner… To add the repository, run the commands below….

<code>sudo apt install curl</code>

There are two repositories you can install… one repository contains the latest Node.js packages and the other has the LTS or (Long Term Support) packages…. if you need the latest and greatest, then install the first repository…

On the other hand, if you need a more stable and tested Node.js packages, then install the LTS repository….

Then for the <strong>Latest</strong> release, add this PPA..

<code>curl -sL https://deb.nodesource.com/setup_10.x | sudo bash -</code>

To install the <strong>LTS</strong> release, use this PPA

<code>curl -sL https://deb.nodesource.com/setup_8.x | sudo bash -</code>

After that, you can now install latest version of Node.js from the particular repository you choose… If you add both repositories, the latest version of Node.js will be installed and not the LTS…
<h4>Step 2: Install Node.js and NPM</h4>
To install, run the commands below

<code>sudo apt install nodejs</code>

After installing, both Node.js and NPM modules should be installed and ready to use….

You can use the commands below to view the version number installed….
<pre>node -v
npm -v
</pre>
To test whether the web server is properly installed, run the commands below to create a test file called <strong>http_server.js </strong>in your home folder…
<pre>cd ~/
nano http_server.js</pre>
Then copy and paste the content below into the file and save….
<pre>const http = require('http');

const hostname = '127.0.0.1';
const port = 3000;

const server = http.createServer((req, res) =&gt; {
  res.statusCode = 200;
  res.setHeader('Content-Type', 'text/plain');
  res.end('Hello World\\n');
});

server.listen(port, hostname, () =&gt; {
  console.log(`Server running at http://${hostname}:${port}/`);
});
</pre>
After that save the file and run the commands below to start the server….

<code>node http_server.js</code>

You should see an output that reads:

<em>Server running at http://127.0.0.1:3000/</em>

Now open your browser and browse to the server hostname or IP address followed by port <strong>3000</strong>… and you should see a default page with Hello World

<strong>http://localhost:3000</strong>

<img class=\"alignnone size-full wp-image-19185 jetpack-lazy-image jetpack-lazy-image--handled\" src=\"https://i0.wp.com/websiteforstudents.com/wp-content/uploads/2018/07/nodejs_ubuntu_install.png?resize=544%2C233&amp;ssl=1\" sizes=\"(max-width: 544px) 100vw, 544px\" srcset=\"https://i0.wp.com/websiteforstudents.com/wp-content/uploads/2018/07/nodejs_ubuntu_install.png?w=544&amp;ssl=1 544w, https://i0.wp.com/websiteforstudents.com/wp-content/uploads/2018/07/nodejs_ubuntu_install.png?resize=300%2C128&amp;ssl=1 300w\" alt=\"Node.js ubuntu install\" width=\"544\" height=\"233\" data-recalc-dims=\"1\" data-lazy-loaded=\"1\" />","How Install The Latest Node.Js And NPM Packages On Ubuntu 16.04 / 18.04 LTS","This brief tutorial is going to show students and new users how to easily install the latest Node.js and NPM packages on Ubuntu 16.04 / 18.04 LTS servers… Although Node.js comes in Ubuntu default repositories, if you want to get the latest version, you’ll have to add its official PPA","publish","open","open","","how-install-the-latest-node-js-and-npm-packages-on-ubuntu-16-04-18-04-lts","","","2019-01-11 19:22:54","2019-01-11 19:22:54","",0,"https://www.lifelongfamilies.com/?p=2609",0,"post","",0
2863,2,"2019-01-13 09:06:32","2019-01-13 09:06:32","Whether you want to promote your business, design a portfolio, or are looking for the perfect creative outlet, you may be wondering how to create a blog. Fortunately, starting a blog isn’t that complicated

&nbsp;
<h2><strong>1. Find Your Niche and Decide What to Blog About</strong></h2>
<h3><strong>What is a niche? And why does your blog need one?</strong></h3>
A niche is more than just a topic. It’s the approach you’re going to take, the audience you want to go after, and the way you’re going to talk to them and position yourself as an expert.

A niche doesn’t <em>have</em> to be your passion (although it’s definitely easier to stay committed to starting your blog when you’re passionate about it). But it does have to be an interest of yours. The best niches are exciting enough that you’ll be motivated to continually post about it, and accessible enough that you can build an audience.

So, whether that means Medieval history, traditional Mexican cooking, starting a drop-shipping business, or knitting tips, is up to you.

<strong>The reason your blog needs a niche is that it gives it focus.</strong> Your niche is how you’ll plan your content calendar, decide on design, and know where (and how) to market your blog. It’s also how your audience will find you and how you’ll make connections with other bloggers.

Remember, when you write to everyone. You’re writing to no one.

<strong> 2. Pick A domain</strong>

When you type Google.com (or <em>innoxafrica.com</em>) into your browser in order to visit a site, that’s the website’s domain name. In a nutshell, a domain name is like your address. It tells people (and web browsers) where to find your site. A good example is your home address.

If you’re using a free blogging service, you'll most likely get to pick your own domain name with it. However, it will almost always have the company’s name attached to it.

So, if you use something like a free Wix site to make your blog, your domain name will look like this:

<strong>Yoursitename.wixsite.com</strong>

Ugh. Not very nice, right? If you’re trying to build a business around your blog, or want other people to take it seriously, this isn’t a great start.

Instead, when you buy an affordable domain name, you get to choose exactly what you want it to be as long as it’s available. That way, it'll look like this:

<strong>Yoursitename.com  (learn more about domain  <a href=\"https://www.lifelongfamilies.com/domain-name-registration-process/\">here</a>)</strong>

Much cleaner right? Head over to Bluehost and get <strong>65% off</strong> on both your domain name and hosting plan<strong> <a href=\"http://&lt;a href=&quot;https://www.bluehost.com/track/innoxafrica/&quot; target=&quot;_blank&quot;&gt;  &lt;/a&gt;\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">right here on Bluehost</a></strong> and you'll be able to quickly search to see if your domain name idea is available—and get smart suggestions on a second best domain name if your first choice is already taken.

&nbsp;

<a href=\"https://www.bluehost.com/track/innoxafrica/\" target=\"_blank\" rel=\"noopener noreferrer\"><img class=\"alignnone size-full wp-image-2623\" src=\"https://www.lifelongfamilies.com/wp-content/uploads/2019/01/488x160BW.png\" alt=\"488x160BW\" width=\"488\" height=\"160\" /></a>

&nbsp;

<strong>Now, put yourself in your reader’s shoes.</strong>

You’ve laid some good groundwork, but now it’s time to get serious. Think about your future blog's general topic area and who your ideal reader is. What do they want to read? What’s going to grab their attention? What’s going to tell them they <em>have</em> to read your blog?

Start with a list of everything you want your blog to be about. Go deep. There are no bad ideas here.

Once you’ve got a massive list, start to look for connections and combinations that might work. Try to keep them simple and memorable.

Some great blog name examples are:
<ul>
	<li>Art of Manliness</li>
	<li>Smart Passive Income</li>
	<li>Epicurious</li>
	<li>The Huffington Post</li>
	<li>Learn to Code with Me</li>
</ul>
<strong>Finally, say it out loud and tell it to people.</strong>

It’s easy to get wrapped up in some fun wordplay when it comes to picking a blog name.

But it still needs to be easy enough that people will remember it and be able to tell their friends about you. To practice, say the name out loud and to friends and family. What do they think about it? What emotions does it bring up for them?

They might not be your ideal reader, but they can still give you a good outsider’s perspective either way.

<img class=\"alignnone size-full wp-image-2625\" src=\"https://www.lifelongfamilies.com/wp-content/uploads/2019/01/How-to-Start-a-Blog-and-Make-Money-Blogging-Ultimate-Guide-Ryan-Robinson-snacks-768x457.jpg\" alt=\"How-to-Start-a-Blog-and-Make-Money-Blogging-Ultimate-Guide-Ryan-Robinson-snacks-768x457\" width=\"768\" height=\"457\" />

&nbsp;
<h2><strong>3. Find a Hosting Provider for Your Blog</strong></h2>
The last of the technical parts of learning <strong>how to start a blog</strong>, is what’s called... finding a blog hosting service. If you’ve gone the free route, you can skip this step, although I highly recommend reading through it and making a decision at the end.

Again, I don’t want this to feel overwhelming, so let’s get the basics out of the way:
<h3><strong>What is website hosting?</strong></h3>
I touched on this a bit above, but to make your website accessible to other people on the Internet, you need a “host.” The host keeps all your website files safe, secure and makes sure that people can access your site when they click on a link or type in your URL.

I use and recommend <a href=\"https://www.bluehost.com/track/innoxafrica/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">Bluehost</a> to every blogger, because it acts as a one-stop shop for great (affordable) hosting and quick &amp; easy registration of your domain name in one swoop.

Think of hosting like being your home. When someone comes over (types in your URL), they’ll be able to see all the things you’ve been keeping inside. Yes, it comes at a cost you don't have if you're on one of the free blogging platforms, but having a proper website host is one of the most important investments in starting a successful blog.

When my friend, Michelle Schroeder started her personal finance blog, Making Sense of Cents, she started by using a free blogging platform called Blogger to host her site. This choice ended up costing her more than she’d saved:

<em>“My biggest mistake was probably starting on Blogger, because you don’t own it. At one point Google deleted my blog with no notice. I finally begged them and they gave it back to me, but that was the moment I decided to move over to self-hosted WordPress.”</em>

<strong>Michelle’s gone on to grow her blog revenue well into the millions of dollars a year</strong>—something she says never would have happened if she hadn’t switched over to a paid hosting provider.

In fact, her number one piece of advice for new bloggers is to start on a self-hosted WordPress site and <a href=\"https://www.bluehost.com/track/innoxafrica/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">use Bluehost</a> as your host.

&nbsp;

<a href=\"https://www.bluehost.com/track/innoxafrica\"><img class=\"alignnone size-full wp-image-2624\" src=\"https://www.lifelongfamilies.com/wp-content/uploads/2019/01/728x90BW.png\" alt=\"728x90BW\" width=\"728\" height=\"90\" /></a>
<h3><strong>What are the best blog hosting services?</strong></h3>
There are tons of great website hosting services out there for your blog.

But what you should be looking for in all of them is:
<ul>
	<li>Speed</li>
	<li>Features</li>
	<li>Security</li>
	<li>Support</li>
	<li>Track record</li>
</ul>
The one service I’ve found that checks all of these boxes (and more) for just getting started is <a href=\"https://www.bluehost.com/track/innoxafrica/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">Bluehost</a>. Yes, I know I’ve mentioned them several times already in this guide, and that’s for very good reason.

&nbsp;

<img class=\"alignnone size-full wp-image-2626\" src=\"https://www.lifelongfamilies.com/wp-content/uploads/2019/01/How-to-Start-a-Blog-and-Make-Money-Online-on-the-Side-Bluehost-Hosting-Offer-for-ryrob-768x405.png\" alt=\"How-to-Start-a-Blog-and-Make-Money-Online-on-the-Side-Bluehost-Hosting-Offer-for-ryrob-768x405\" width=\"768\" height=\"405\" />

For one, <a href=\"https://www.bluehost.com/track/innoxafrica/\">Bluehost</a> offers an incredibly simple <a href=\"https://www.bluehost.com/track/innoxafrica/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">1-click WordPress install</a>,

&nbsp;

[youtube https://www.youtube.com/watch?v=PHgcjleEYoE&amp;w=756&amp;h=425]

&nbsp;

which makes starting a self-hosted WordPress blog super easy. It also comes with a free domain name (if your desired URL is available) and offers 24/7 support to answer all of your questions and help with troubleshooting (which is fantastic when you’re just getting started).

&nbsp;

4.<strong>Install WordPress</strong>

&nbsp;

<img class=\"alignnone size-full wp-image-2627\" src=\"https://www.lifelongfamilies.com/wp-content/uploads/2019/01/wpdashbaord.png\" alt=\"wpdashbaord\" width=\"550\" height=\"344\" />

There are other CMS <em>(A Content Management System (or CMS) is where you'll be writing, designing, and publishing your blog posts. A good CMS is easy to use, let’s you organize your content, upload images and videos, and have control over how your entire blog looks using themes or custom design elements.)</em> options you can look at, such as Squarespace, Ghost, and Wix when learning how to start a blog. However, <strong>I strongly recommend setting up a self-hosted WordPress site for your blog</strong> as it’s the most sustainable, long-term solution—and really the only option worth considering if you're starting a blog with the eventual goal of making money from your website in some way, shape or form.

Since I learned how to start a blog, I’ve been running my blog on WordPress (hosted with <a href=\"https://www.bluehost.com/track/innoxafrica/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">Bluehost</a> for the first few years) and I couldn’t be happier with the amount of flexibility, control and long-term growth potential I have over my site.

Now, one thing you need to be careful of is that WordPress comes in two very different platforms. <em>WordPress.com</em> and <em>WordPress.org</em>. They have almost the same name, but there are very big differences between the two.

<img class=\"alignnone size-full wp-image-2628\" src=\"https://www.lifelongfamilies.com/wp-content/uploads/2019/01/How-to-Start-a-Blog-Wordpress-dot-com-vs-Wordpress-dot-org-ryrob-768x551.png\" alt=\"How-to-Start-a-Blog-Wordpress-dot-com-vs-Wordpress-dot-org-ryrob-768x551\" width=\"768\" height=\"551\" />

&nbsp;

<strong>5. Choose a theme.</strong>

Picking a blog theme can be a lot of fun. But it can also take up a ton of time that you could otherwise be using to write and promote your posts (and thus getting to your first blog income faster).

There are so many themes to check out, that it’s easy to get swept away by the ones that look awesome, but might not be functionally great.

Remember, design isn’t just about how your blog looks. It’s about how it works. And the easier it is to navigate and read, the better.
<div class=\"tm-click-to-tweet\">
<div class=\"tm-ctt-tip\"></div>
</div>
Here are a few suggestions of what to look for when checking out themes:
<ul>
	<li><strong>Keep it simple:</strong> At the end of the day, the goal of starting a blog is to share content that can be easily consumed (read, watched, experienced). And unfortunately, a lot of fancy blog themes get in the way of that. Don’t get too drawn in by crazy looking themes that compromise on legibility and usability. If a theme looks good, but doesn’t help you share your thoughts and engage with readers, it’s not a good theme.</li>
	<li><strong>Responsiveness is a must:</strong> Responsiveness refers to themes that make sure your blog looks as good on a laptop, as it does on someone’s smartphone. Today, more and more people use their phones to read blogs and depending on your audience, that number could be 50% or higher (like mine is). Google also favors mobile-friendly websites and ranks them at the top of their organic search results. If you’re not totally sure whether a theme is mobile friendly or not, copy and paste the URL of the theme’s demo page into Google’s <a href=\"https://search.google.com/test/mobile-friendly\" target=\"_blank\" rel=\"noopener noreferrer\">Mobile Friendly Test</a> page. (This test will almost always show <em>some</em> warnings. But major red flags to watch out for are text too small or content wider than screen.)</li>
	<li><strong>Does it work in different browsers?</strong> Your readers won’t just be using different devices, but different browsers. Most theme developers rigorously test their themes across browsers, but sometimes mistakes slip through. Try testing on a couple different browsers just to make sure.</li>
	<li><strong>Supported plugins:</strong> If you’re using WordPress, the real power of your blog comes from plugins. These are “Add-ons” to your blog that give you extra functionality. Make sure the theme you’re choosing supports all popular plugins. If you’re unsure, ask the developer.</li>
	<li><strong>SEO friendliness:</strong> SEO, or search engine optimization, refers to how well Google and other search engines can find your information when people search for it. Some themes use bulky code that makes it difficult for search engines to read. And while no one expects you to inspect a theme’s code you should see if the developer has said it is optimized for SEO.</li>
	<li><strong>Support:</strong> Problems happen. And when they do, you want to be able to ask for help. Lots of free theme developers won’t offer support for their products. So that’s one thing to be aware of when making your choice.</li>
	<li><strong>Ratings and reviews:</strong> Look for themes with a good track record. If the theme is sold on a third-party marketplace you should be able to see reviews no problem. For free WordPress theme, you’ll see the ratings just below the download button.</li>
</ul>
&nbsp;

<strong>6. Delete default posts and Page</strong>s

Your WordPress site is made up of Posts and Pages.

Posts are what we commonly think about when we think of a blog. These are individual articles on specific topics. For example, if you have a recipe blog, you might have posts like “The Best Chocolate Chip Cookies,” “Rosemary Meat Loaf” and “Raspberry Lemonade.” Each post would feature one recipe.

When we talk about adding new content to our blogs, we are usually referring to publishing a new <em>post</em>. And when we scroll through a blog, we are usually scrolling through the <em>posts</em>.

Pages, on the other hand, contain more permanent or unchanging information. Pages don’t show up in the blog portion of the site alongside the posts. Instead, they are usually accessed through direct links in the the navigation bar, sidebar or footer.

Some Pages are common on all blogs, like a contact page and an about page, but some bloggers include other pages as well.

<strong>Check your permalink</strong>

Before publishing your post (not after, otherwise you may break your link!), check and edit the permalink if you’d like.

Use keywords and make it as close to the way someone would search for your content on Google.

If you want to change the permalink structure of a post or page, simply click the “Edit” button next to the automatically generated permalink on your post or page and change it to what you want.

&nbsp;

<b>7. Create Essential Pages And Publish Your First Page.</b>

Every blog needs to showcase some basic, foundational information. Who you are. Why people should listen to you. How they can get in touch with you if they have questions or want to work with you.

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;","How To Start A blog (And Make Money) in 2019","Whether you want to promote your business, design a portfolio, or are looking for the perfect creative outlet, you may be wondering how to create a blog. Fortunately, starting a blog isn’t that complicated","publish","open","open","","how-to-start-a-blog-and-make-money-in-2019","","","2019-01-13 09:06:32","2019-01-13 09:06:32","",0,"https://www.lifelongfamilies.com/?p=2622",0,"post","",0
2861,2,"2019-01-13 15:59:48","2019-01-13 15:59:48","WordPress was originally built as a blogging platform, but is now what is known as a <a href=\"https://en.wikipedia.org/wiki/Content_management_system\">CMS</a> – Content Management System.

Any website that you intend to make updates to can benefit from a CMS. If it’s a blog, you want to be able to add posts. If it’s a restaurant website, you want to be able to add and update menus. If it’s a company website, you want to be able to update prices, packages, and so on. This website is a custom theme running on WordPress. (Open source, too!)

If someone is paying you to make a website, it’s because they don’t know how or don’t have time to deal with code. It needs to be as simple as possible for the client. WordPress can help with all this and more.

<strong>Getting started: The design</strong>

I can’t stress enough how much it doesn’t matter what you use for your design – Bootstrap, Foundation, Skeleton, custom CSS. The point is that you have a website and you like how it looks.

I’m going to take an existing simple starter template and convert it into WordPress for this article.

<img class=\"alignnone size-full wp-image-2595\" src=\"https://www.lifelongfamilies.com/wp-content/uploads/2019/01/Screen-Shot-2016-04-06-at-9.27.33-AM.png\" alt=\"Screen-Shot-2016-04-06-at-9.27.33-AM.png\" width=\"1023\" height=\"710\" />

<a class=\"button\" href=\"http://getbootstrap.com/examples/blog/\">Bootstrap Blog Template</a>
<h2>Installing WordPress</h2>
There are plenty of articles out there about how to install WordPress. They make the process seem long and scary, and the first time you do it, it can definitely be a bit confusing. <a href=\"http://codex.wordpress.org/Installing_WordPress\">Here is the official guide to getting set up</a>.

Since we’re using a local server and MAMP, I already know you have all the prerequisites to installation, and FTP is not necessary

<strong>Create a place for WordPress to live</strong>

Make an empty directory on your computer somewhere, and point your localhost or virtual host to that directory.

<strong>Download WordPress</strong>

Go to <a href=\"https://wordpress.org/download/\">the WordPress download page</a> and download the latest version of WordPress.

<strong>Unzip WordPress</strong>

Unzip WordPress and place the contents of the folder into your directory.

<strong>Create a database</strong>

<em>The latest versions of MAMP do not come with phpMyAdmin preinstalled. Instead, you’ll download <a href=\"https://www.sequelpro.com/\">SequelPro</a> on a Mac, or <a href=\"https://github.com/webyog/sqlyog-community/wiki/Downloads\">SQLYog</a> on Windows, both free programs. To enter the database after downloading, login to the host <code>locahost</code> (or 127.0.0.1), with username <code>root</code> and password <code>root</code>. The rest of the instructions will be the same.</em>
<h2>Getting Started - A Step By Step Guide for WordPress Theme Development</h2>
<div class=\"divider-15\"></div>
You might have understood what exactly the <a href=\"https://theme.wordpress.com/\" target=\"_blank\" rel=\"noopener noreferrer\">WP theme development</a> is? Now it’s time to get started. You need to set up your local development environment. You need to check out some WordPress theme examples before start creating a new theme. So dive into creating a new theme.
<div class=\"divider-15\"></div>
First of all, you need to create a subfolder in WP-content/themes/directory in your WordPress folder. Before you start creating the theme, you should decide how the layout of your website will look like. In this tutorial, we will build a WordPress theme that consists of a header, sidebar, content area and footer. Learn how you can create such theme.
<div class=\"divider-15\"></div>
Your new WordPress theme that is going to be built in this guide would have:
<div class=\"divider-15\"><img class=\"alignnone size-full wp-image-2640\" src=\"https://www.lifelongfamilies.com/wp-content/uploads/2019/01/Screenshot-2014-01-05-20.50.26.png\" alt=\"Screenshot-2014-01-05-20.50.26\" width=\"826\" height=\"419\" /></div>
<ul class=\"sf-list list-dot\">
 	<li>1 stylesheet</li>
 	<li>1 functions file</li>
 	<li>1 comments file</li>
 	<li>Some template files (index, header, footer, sidebar, single and page)</li>
</ul>
<div class=\"divider-15\"></div>
These files make the outline of the website’s overall look. This is the main part of our WordPress theme customization tutorial.
<div class=\"divider-15\"></div>
<h3>DIV tags</h3>
<div class=\"divider-15\"></div>
These tags are used to format and define values of the template file (each template file like index, header, footer, sidebar, single and page). Div tag is also used to define these values and structure its element and content.
<div class=\"divider-15\"></div>
DIV tags that will be used in this WordPress theme development are:
<div class=\"divider-15\"></div>
<ul class=\"sf-list list-dot\">
 	<li><em>&lt;div id=\"header\"&gt;&lt;/div&gt;</em></li>
 	<li><em>&lt;div id=\"footer\"&gt;&lt;/div&gt;</em></li>
 	<li><em>&lt;div class=\"post\"&gt;&lt;/div&gt;</em></li>
 	<li><em>&lt;div class=\"navigation\"&gt;&lt;/div&gt;</em></li>
 	<li><em>&lt;div class=\"entry\"&gt;&lt;/div&gt;</em></li>
 	<li><em>&lt;div class=\"sidebar\"&gt;&lt;/div&gt;</em></li>
 	<li><em>&lt;div id=\"wrapper\"&gt;&lt;/div&gt;</em></li>
 	<li><em>&lt;div id=\"container\"&gt;&lt;/div&gt;</em></li>
</ul>
<div class=\"divider-15\"></div>
There is a difference between div id and div class. Div IDs are used to define unique site features while Div Class is used to define values that are used to define several elements. In the stylesheet, div id is identified with a # and div class with a . (dot).
<h3> Create Template Files</h3>
<div class=\"divider-15\"></div>
You need to install WordPress on your local computer before you start creating your theme. You can save your changes on a local server rather than deal with uploading and remote server access. You can also install WordPress via your hosting provider. Many hosts offer WordPress hosting. Follow the given instructions:
<div class=\"divider-15\"></div>
<ul class=\"sf-list list-dot\">
 	<li>Create theme folder under directory <em>/wp-content/themes/your own theme</em></li>
 	<li>Create the template files (index, header, footer, sidebar, single and page)</li>
 	<li>Create function files</li>
 	<li>Save these files as.php in your theme folder</li>
</ul>
<div class=\"divider-15\"></div>
<h3>Index.php</h3>
<div class=\"divider-15\"></div>
Open this file and add the given code and save it again:
<pre>&lt;?php

get_header();

?&gt;

    &lt;main class=\"content\"&gt;

        &lt;div class=\"inner-content\"&gt;
            &lt;div class=\"container\"&gt;
                &lt;div class=\"row\"&gt;
                    &lt;div class=\"col-md-8\"&gt;
                    &lt;?php if (have_posts()) : ?&gt;
                        &lt;?php while (have_posts()) : the_post(); ?&gt;

                                &lt;article class=\"post hentry wow fadeInUp\"&gt;
                                    &lt;h1 class=\"entry-title\"&gt;&lt;a href=\"&lt;?= get_the_permalink() ?&gt;\"&gt;
                                            &lt;?= the_title() ?&gt;
                                        &lt;/a&gt;&lt;/h1&gt;
                                    &lt;figure class=\"featured-image\"&gt;
                                        &lt;?php  the_post_thumbnail()?&gt;
                                    &lt;/figure&gt;
                                    &lt;div class=\"entry-summary\"&gt;
                                        &lt;?php the_excerpt() ?&gt;
                                    &lt;/div&gt;

                                    &lt;a href=\"&lt;?= get_the_permalink() ?&gt;\" class=\"more-link button\"&gt;Read more&lt;/a&gt;
                                &lt;/article&gt;

                            &lt;p class=\"postmetadata\"&gt;
                                &lt;?php _e('Filed under&amp;#58;'); ?&gt; &lt;?php the_category(', ') ?&gt; &lt;?php _e('by'); ?&gt;
                                &lt;?php  the_author(); ?&gt;&lt;br /&gt;
                                &lt;?php comments_popup_link('No Comments &amp;#187;', '1 Comment &amp;#187;', '% Comments &amp;#187;'); ?&gt;
                                &lt;?php edit_post_link('Edit', ' &amp;#124; ', ''); ?&gt;
                            &lt;/p&gt;

                            &lt;?php

                            ?&gt;

                        &lt;?php endwhile; ?&gt;


                        &lt;div class=\"navigation\"&gt;
                            &lt;?php posts_nav_link(); ?&gt;
                        &lt;/div&gt;



                    &lt;?php else : ?&gt;

                        &lt;?php _e('Sorry, no posts matched your criteria.'); ?&gt;

                    &lt;?php endif; ?&gt;

                &lt;/div&gt;
                    &lt;?php get_sidebar() ?&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/main&gt;


&lt;?php


get_footer();</pre>
The code of index file calls the footer, header and sidebar template file. It is the web browser call when requesting your site.
<div class=\"divider-15\"></div>
Index file defines the FrontPage of your site. It includes DIV classes “entry” and “post,” and DIV tags “container.” If you want to display short length of your front page post, you can insert a page break to display ‘read more’ link.
<div class=\"divider-15\"></div>
<h3>Create Header.php</h3>
<div class=\"divider-15\"></div>
Add the given code to header.php and save this template file:
<pre>&lt;!DOCTYPE html&gt;
&lt;html lang=\"en\"&gt;
&lt;head&gt;
    &lt;meta charset=\"UTF-8\"&gt;
    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;
    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0,maximum-scale=1\"&gt;

        &lt;!-- Loading third party fonts --&gt;
    &lt;link href=\"http://fonts.googleapis.com/css?family=Roboto+Slab:300,400,700\" rel=\"stylesheet\" type=\"text/css\"&gt;
   
    &lt;?php

    wp_head();

    ?&gt;



&lt;/head&gt;
&lt;body&gt;

&lt;div id=\"site-content\"&gt;

&lt;header class=\"site-header\"&gt;
&lt;div class=\"top-header\"&gt;
&lt;div class=\"container\"&gt;

&lt;?php if ( is_active_sidebar( 'top_phone_number_1' ) ) : ?&gt;
&lt;?php dynamic_sidebar( 'top_phone_number_1' ); ?&gt;

&lt;?php endif; ?&gt;


&lt;nav class=\"member-navigation pull-right\"&gt;


&lt;/nav&gt; &lt;!-- .member-navigation --&gt;
&lt;/div&gt; &lt;!-- .container --&gt;
&lt;/div&gt; &lt;!-- .top-header --&gt;

&lt;div class=\"bottom-header\"&gt;
&lt;div class=\"container\"&gt;
&lt;a href=\"&lt;?php bloginfo('url') ?&gt;\" class=\"branding pull-left\"&gt;
&lt;img src=\"&lt;?php echo get_template_directory_uri() ?&gt;/images/logo-icon.png\" alt=\"Site title\" class=\"logo-icon\"&gt;
&lt;h1 class=\"site-title\"&gt;&lt;?php bloginfo('name')?&gt;&lt;/h1&gt;
&lt;/a&gt; &lt;!-- #branding --&gt;

&lt;nav class=\"main-navigation pull-right \" id=\"myHeader\"&gt;
&lt;button type=\"button\" class=\"menu-toggle\" id=\"myDIV\" onclick=\"toggleMyMenu()\"&gt;&lt;i class=\"fa fa-bars\"&gt;&lt;/i&gt;&lt;/button&gt;
&lt;ul class=\"menu\"&gt;
&lt;?php
wp_nav_menu( array( 'theme_location' =&gt; 'primary-menu' ) );
?&gt;
&lt;/ul&gt;
&lt;/nav&gt; &lt;!-- .main-navigation --&gt;
&lt;/div&gt; &lt;!-- .container --&gt;
&lt;/div&gt; &lt;!-- .bottom-header --&gt;
&lt;/header&gt; &lt;!-- .site-header --&gt;
&lt;/div&gt;</pre>
This file has opening head and body tag. Included in HTML tag is a head tag (holds stylesheet and Meta tags links). Div tags hold the header content and overall site position.
<div class=\"divider-15\"></div>
<h3>Footer.php</h3>
<div class=\"divider-15\"></div>
Add below code to footer.php and save file:
<pre class=\"EnlighterJSRAW\">&lt;div id=\"footer\"&gt;
  &lt;p&gt;
&lt;?php echo Date('Y') ?&gt; &lt;a href=\"&lt;?php bloginfo('url'); ?&gt;\"&gt;&lt;?php bloginfo('name'); ?&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;?php wp_footer() ; ?&gt;


&lt;/body&gt;
&lt;/html&gt;</pre>
Footer defines the bottom part of the site. This theme has copyright announcement now. It adds a permalink of the blog. This is last template file that is called for the site and it closes HTML and body tags.
<div class=\"divider-15\"></div>
<h3>Sidebar.php</h3>
<div class=\"divider-15\"></div>
Add the below code to <em>sidebar.php</em> and save the file:
<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">&lt;div class=\"sidebar\"&gt;

&lt;ul&gt;

&lt;?php if ( function_exists('dynamic_sidebar') &amp;&amp; dynamic_sidebar() ) : else : ?&gt;

  &lt;?php wp_list_pages('depth=3&amp;title_li=&lt;h2&gt;Pages&lt;/h2&gt;'); ?&gt;

  &lt;li&gt;&lt;h2&gt;&lt;?php _e('Categories'); ?&gt;&lt;/h2&gt;
    &lt;ul&gt;
      &lt;?php wp_list_cats('sort_column=name&amp;optioncount=1&amp;hierarchical=0'); ?&gt;
    &lt;/ul&gt;
  &lt;/li&gt;

  &lt;li&gt;&lt;h2&gt;&lt;?php _e('Archives'); ?&gt;&lt;/h2&gt;
    &lt;ul&gt;
      &lt;?php wp_get_archives('type=monthly'); ?&gt;
    &lt;/ul&gt;
  &lt;/li&gt;

  &lt;?php get_links_list(); ?&gt;

  

&lt;?php endif; ?&gt;

&lt;/ul&gt;

&lt;/div&gt;</pre>
This code is to define and include sidebars like blogroll, archive, category and pages.
<h3>Single.php</h3>
Add the below code to <em>single.php</em>, and save the file:
<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">&lt;?php get_header(); ?&gt;

&lt;div id=\"container\"&gt;

  &lt;?php if(have_posts()) : ?&gt;&lt;?php while(have_posts()) : the_post(); ?&gt;

    &lt;div class=\"post\" id=\"post-&lt;?php the_ID(); ?&gt;\"&gt;

      &lt;h2&gt;&lt;a href=\"&lt;?php the_permalink(); ?&gt;\" title=\"&lt;?php the_title(); ?&gt;\"&gt;
                        &lt;?php the_title(); ?&gt;&lt;/a&gt;&lt;/h2&gt;

      &lt;div class=\"entry\"&gt;

        &lt;?php the_content(); ?&gt;

        &lt;p class=\"postmetadata\"&gt;
&lt;?php _e('Filed under&amp;#58;'); ?&gt; &lt;?php the_category(', ') ?&gt; &lt;?php _e('by'); ?&gt; 
&lt;?php  the_author(); ?&gt;&lt;br /&gt;
&lt;?php comments_popup_link('No Comments &amp;#187;', '1 Comment &amp;#187;', '% Comments &amp;#187;'); ?&gt; 
&lt;?php edit_post_link('Edit', ' &amp;#124; ', ''); ?&gt;
        &lt;/p&gt;

      &lt;/div&gt;
      &lt;div class=\"comments-template\"&gt;
&lt;?php comments_template(); ?&gt;
&lt;/div&gt;
    &lt;/div&gt;

&lt;?php 
innox_set_post_views(get_the_ID()); 
endwhile; 
?&gt; &lt;div class=\"navigation\"&gt; &lt;?php previous_post_link('%link') ?&gt; &lt;?php next_post_link(' %link') ?&gt; &lt;/div&gt; &lt;?php endif; ?&gt; &lt;/div&gt; &lt;?php get_sidebar(); ?&gt; &lt;?php get_footer(); ?&gt;</pre>
The code above is to define elements on the single post that differ from front-page post listing and pages.
<div class=\"divider-15\"></div>
<h3>Page.php</h3>
<div class=\"divider-15\"></div>
Add the below code to <em>page.php</em> and save the file:
<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">&lt;?php get_header(); ?&gt;

&lt;div id=\"box\"

  &lt;?php if(have_posts()) : ?&gt;&lt;?php while(have_posts()) : the_post(); ?&gt;

  &lt;div class=\"post\"&gt;

    &lt;h3&gt;&lt;a href=\"&lt;?php the_permalink(); ?&gt;\"&gt;&lt;?php the_title(); ?&gt;&lt;/a&gt;&lt;/h3&gt;

  &lt;div class=\"entry\"&gt;

    &lt;?php the_content(); ?&gt;


  &lt;/div&gt;
&lt;/div&gt;

&lt;?php endwhile; ?&gt;
  
&lt;/div&gt;
&lt;?php endif; ?&gt;

&lt;/div&gt;

&lt;?php get_sidebar(); ?&gt;
&lt;?php get_footer(); ?&gt;</pre>
This code would define how the publish pages are presented. In WordPress theme, pages and posts display differently. Pages are static in nature, but posts contain some dynamic elements like post navigation, comments or much more.
<div class=\"divider-15\"></div>
The entire template file is now created and is ready to use. Now, it’s time to create functional files. It is a standard component in WordPress themes.
<div class=\"divider-15\"></div>
<h3>Functions Files</h3>
<div class=\"divider-15\"></div>
Your site will include the widget-ready sidebar and comments sidebar after creating functional files. We will create the stylesheet in next step.
<div class=\"divider-15\"></div>
functions.php
<div class=\"divider-15\"></div>
Add the below code to <em>functions.php</em> and save the file:
<pre>&lt;?php

include_once 'inc/widget/TopBarWidget.php';
include_once 'inc/customize/InnoxCustomermize.php';

add_theme_support('post-thumbnails');
add_theme_support('title-tag');


function innox_register_styles()
{

     wp_enqueue_style('style_css', get_template_directory_uri() . '/style.css');
    //Add you css here 
     //wp_enqueue_script('jquery_js', get_template_directory_uri() . '/js/jquery-1.11.1.min.js', '', null, true);
    //wp_enqueue_script('plugins_js', get_template_directory_uri() . '/js/plugins.js', ['jquery'], null, true);
   //wp_enqueue_script('app_js', get_template_directory_uri() . '/js/app.js', ['jquery'], null, true);
}

add_action('wp_enqueue_scripts', 'innox_register_styles');


function innox_register_my_menus()
{
    register_nav_menus(
        array(
            'header-menu' =&gt; __('Header Menu'),
            'extra-menu' =&gt; __('Extra Menu')
        )
    );
    register_nav_menus(
        array(
            'primary-menu' =&gt; __('Primary Menu'),

        )
    );
}

add_action('init', 'innox_register_my_menus');

/*
* Creating a function to create our CPT
*/

function innox_custom_post_type()
{


    $pricing =
        array('name' =&gt; _x('Pricing', 'Post typegeneral name', 'textdomain'),
            'singular_name' =&gt; _x('Pricing', 'Post type singular name', 'textdomain'),
            'menu_name' =&gt; _x('Pricing', 'Admin Menu text', 'textdomain'),
            'name_admin_bar' =&gt; _x('Pricing', 'Add New on Toolbar', 'textdomain'),
            'add_new' =&gt; __('Add New', 'textdomain'),
            'add_new_item' =&gt; __('Add New Pricing', 'textdomain'),
            'new_item' =&gt; __('New Pricing', 'textdomain'),
        );

    $args_pricing = array(
        'labels' =&gt; $pricing,
        'public' =&gt; true,
        'publicly_queryable' =&gt; true,
        'show_ui' =&gt; true,
        'show_in_menu' =&gt; true,
        'query_var' =&gt; true,
        'rewrite' =&gt; array('slug' =&gt; 'pricing'),
        'capability_type' =&gt; 'post',
        'has_archive' =&gt; true,
        'hierarchical' =&gt; false,
        'menu_position' =&gt; null,
        'supports' =&gt; array('title', 'editor', 'author', 'thumbnail', 'excerpt', 'comments'),
    );
    register_post_type('pricing', $args_pricing);


    $team =
        array('name' =&gt; _x('Team', 'Post typegeneral name', 'textdomain'),
            'singular_name' =&gt; _x('Team', 'Post type singular name', 'textdomain'),
            'menu_name' =&gt; _x('Team', 'Admin Menu text', 'textdomain'),
            'name_admin_bar' =&gt; _x('Team', 'Add New on Toolbar', 'textdomain'),
            'add_new' =&gt; __('Add New', 'textdomain'),
            'add_new_item' =&gt; __('Add New Team', 'textdomain'),
            'new_item' =&gt; __('New Team', 'textdomain'),
        );

    $args_team = array(
        'labels' =&gt; $team,
        'public' =&gt; true,
        'publicly_queryable' =&gt; true,
        'show_ui' =&gt; true,
        'show_in_menu' =&gt; true,
        'query_var' =&gt; true,
        'rewrite' =&gt; array('slug' =&gt; 'team'),
        'capability_type' =&gt; 'post',
        'has_archive' =&gt; true,
        'hierarchical' =&gt; false,
        'menu_position' =&gt; null,
        'supports' =&gt; array('title', 'editor', 'author', 'thumbnail', 'excerpt', 'comments'),
    );
    register_post_type('team', $args_team);


}

add_action('init', 'innox_custom_post_type');

function innox_arphabet_widgets_init()
{

    register_sidebar(array(
        'name' =&gt; 'Top Phone Number',
        'id' =&gt; 'top_phone_number_1',
        'before_widget' =&gt; '&lt;div&gt;',
        'after_widget' =&gt; '&lt;/div&gt;',
        'before_title' =&gt; '&lt;a&gt;',
        'after_title' =&gt; '&lt;/a&gt;',
    ));

    register_sidebar(array(
        'name' =&gt; 'Side Bar 1',
        'id' =&gt; 'side_bar_1',
        'before_widget' =&gt; '&lt;ul class=\"list-fa\"&gt;',
        'after_widget' =&gt; '&lt;/lu&gt;',
        // 'before_title'  =&gt; '&lt;li&gt;&lt;i class=\"fa fa-long-arrow-right\"&gt;&lt;/i&gt;',
        // 'after_title'  =&gt; '&lt;/li&gt;',
    ));


    register_widget('TopBarWidget');

}

add_action('widgets_init', 'innox_arphabet_widgets_init');


function innox_listTeamShortCode($atts)
{

    ob_start();

    // define attributes and their defaults
    extract(shortcode_atts(array(
        'type' =&gt; 'post',
        'order' =&gt; 'date',
        'orderby' =&gt; 'title',
        'posts' =&gt; -1,
        'category' =&gt; '',
        'cols' =&gt; ''

    ), $atts));


    // define query parameters based on attributes
    $options = array(
        'post_type' =&gt; $type,
        'order' =&gt; $order,
        'orderby' =&gt; $orderby,
        'posts_per_page' =&gt; $posts,
        'category_name' =&gt; $category,
        'cols' =&gt; $cols,
    );

    $cols = ($options['cols']) ?: 4;


    $query = new WP_Query($options);

    if ($query-&gt;have_posts()) { ?&gt;

        &lt;main class=\"content\"&gt;

            &lt;div class=\"inner-content\"&gt;
                &lt;div class=\"container\"&gt;
                    &lt;div class=\"row\"&gt;

                        &lt;?php while ($query-&gt;have_posts()) : $query-&gt;the_post(); ?&gt;
                            &lt;div class=\"col-md-&lt;?php echo $cols ?&gt;\"&gt;

                                &lt;article class=\"post hentry wow fadeInUp\"&gt;
                                    &lt;h1 class=\"entry-title\"&gt;&lt;a href=\"&lt;?= get_the_permalink() ?&gt;\"&gt;
                                            &lt;?= the_title() ?&gt;
                                        &lt;/a&gt;&lt;/h1&gt;
                                    &lt;figure class=\"featured-image\"&gt;
                                        &lt;?php the_post_thumbnail() ?&gt;
                                    &lt;/figure&gt;
                                    &lt;div class=\"entry-summary\"&gt;
                                        &lt;?php the_excerpt() ?&gt;
                                    &lt;/div&gt;

                                    &lt;a href=\"&lt;?= get_the_permalink() ?&gt;\" class=\"more-link button\"&gt;Read more&lt;/a&gt;
                                &lt;/article&gt;


                            &lt;/div&gt;


                        &lt;?php endwhile; ?&gt;
                        &lt;div class=\"pagination\"&gt;
                            &lt;a href=\"&lt;?php  next_posts_link( 'Older posts' ); ?&gt;\" class=\"button secondary\"&gt;&amp;larr; Older &lt;/a&gt;
                            &lt;a href=\"&lt;?php  previous_posts_link( 'Newer posts' ); ?&gt;\" class=\"button secondary\"&gt;Newer  &amp;rarr;&lt;/a&gt;
                        &lt;/div&gt; &lt;!-- .pagination --&gt;

                        &lt;?php
                        wp_reset_postdata();
                        ?&gt;

                               
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/main&gt;


        &lt;?php $myvariable = ob_get_clean();
        return $myvariable;
    }


}

add_shortcode('innox_team', 'innox_listTeamShortCode');

//customizer


// Setup the Theme Customizer settings and controls...
add_action('customize_register', array('InnoxCustomer', 'register'));

// Output custom CSS to live site
add_action('wp_head', array('InnoxCustomer', 'header_output'));

// Enqueue live preview javascript in Theme Customizer admin screen
add_action('customize_preview_init', array('InnoxCustomer', 'live_preview'));

function innox_set_post_views($postID)
{

    $countKey = 'post_views_count';
    $count = get_post_meta($postID, $countKey, true);
    if ($count == '') {
        $count = 0;
        delete_post_meta($postID, $countKey);
        add_post_meta($postID, $countKey, '1');
    } else {
        $count++;
        update_post_meta($postID, $countKey, $count);
    }
}


</pre>
Certain theme specific functions can be added by creating these functional files. The above code ensures that sidebar is widget-ready. You can login into WordPress as admin to see the options of the widget (category, pages, posts, polls) in the sidebar.
<pre>TopBarWidget.php

THis will create awidget  where we can put our header info like phone
numbers

</pre>
<pre>&lt;?php

class TopBarWidget extends WP_Widget
{
    function __construct() {
        parent::__construct(
            'top_bar_widget', // Base ID
            esc_html__( 'A Top Bar Widget', 'text_domain' ), // Name
            array( 'description' =&gt; esc_html__( 'A Top Bar Widget', 'text_domain' ), ) // Args
        );
    }

    /**
     * Front-end display of widget.
     *
     * @see WP_Widget::widget()
     *
     * @param array $args     Widget arguments.
     * @param array $instance Saved values from database.
     */
    public function widget( $args, $instance ) {
        echo $args['before_widget'];

        echo esc_html__( 'Call Us. ', 'text_domain' );
        if ( ! empty( $instance['title'] ) ) {
            echo $args['before_title'] . apply_filters( 'A Top Bar Widget', $instance['title'] ) . $args['after_title'];
        }
        echo $args['after_widget'];
    }

    /**
     * Back-end widget form.
     *
     * @see WP_Widget::form()
     *
     * @param array $instance Previously saved values from database.
     */
    public function form( $instance ) {
        $title = ! empty( $instance['title'] ) ? $instance['title'] : esc_html__( 'New title', 'text_domain' );
        ?&gt;
        &lt;p&gt;
            &lt;label for=\"&lt;?php echo esc_attr( $this-&gt;get_field_id( 'title' ) ); ?&gt;\"&gt;&lt;?php esc_attr_e( 'Phone Number:', 'text_domain' ); ?&gt;&lt;/label&gt;
            &lt;input class=\"widefat\" id=\"&lt;?php echo esc_attr( $this-&gt;get_field_id( 'title' ) ); ?&gt;\" name=\"&lt;?php echo esc_attr( $this-&gt;get_field_name( 'title' ) ); ?&gt;\" type=\"text\" value=\"&lt;?php echo esc_attr( $title ); ?&gt;\"&gt;
        &lt;/p&gt;
        &lt;?php
    }

    /**
     * Sanitize widget form values as they are saved.
     *
     * @see WP_Widget::update()
     *
     * @param array $new_instance Values just sent to be saved.
     * @param array $old_instance Previously saved values from database.
     *
     * @return array Updated safe values to be saved.
     */
    public function update( $new_instance, $old_instance ) {
        $instance = array();
        $instance['title'] = ( ! empty( $new_instance['title'] ) ) ? sanitize_text_field( $new_instance['title'] ) : '';

        return $instance;
    }

}</pre>
<div class=\"divider-15\"></div>
<div></div>
<div></div>
<div></div>
<div>InnoxCustomermize.php</div>
<div></div>
<div>This will enable us to customize our theme . Just as you know wordpress enables us to visually customize theme , but this cannot be possible if not for this class.</div>
<div></div>
<div>
<pre>&lt;?php


class InnoxCustomermize
{

    public static function register ( $wp_customize ) {
        //1. Define a new section (if desired) to the Theme Customizer
        $wp_customize-&gt;add_section( 'mytheme_options',
            array(
                'title'       =&gt; __( 'MyTheme Options', 'mytheme' ), //Visible title of section
                'priority'    =&gt; 35, //Determines what order this appears in
                'capability'  =&gt; 'edit_theme_options', //Capability needed to tweak
                'description' =&gt; __('Allows you to customize some example settings for MyTheme.', 'mytheme'), //Descriptive tooltip
            )
        );

        //2. Register new settings to the WP database...
        $wp_customize-&gt;add_setting( 'link_textcolor', //No need to use a SERIALIZED name, as `theme_mod` settings already live under one db record
            array(
                'default'    =&gt; '#2BA6CB', //Default setting/value to save
                'type'       =&gt; 'theme_mod', //Is this an 'option' or a 'theme_mod'?
                'capability' =&gt; 'edit_theme_options', //Optional. Special permissions for accessing this setting.
                'transport'  =&gt; 'postMessage', //What triggers a refresh of the setting? 'refresh' or 'postMessage' (instant)?
            )
        );

        //3. Finally, we define the control itself (which links a setting to a section and renders the HTML controls)...
        $wp_customize-&gt;add_control( new WP_Customize_Color_Control( //Instantiate the color control class
            $wp_customize, //Pass the $wp_customize object (required)
            'mytheme_link_textcolor', //Set a unique ID for the control
            array(
                'label'      =&gt; __( 'Link Color', 'mytheme' ), //Admin-visible name of the control
                'settings'   =&gt; 'link_textcolor', //Which setting to load and manipulate (serialized is okay)
                'priority'   =&gt; 10, //Determines the order this control appears in for the specified section
                'section'    =&gt; 'colors', //ID of the section this control should render in (can be one of yours, or a WordPress default section)
            )
        ) );

        //4. We can also change built-in settings by modifying properties. For instance, let's make some stuff use live preview JS...
        $wp_customize-&gt;get_setting( 'blogname' )-&gt;transport = 'postMessage';
        $wp_customize-&gt;get_setting( 'blogdescription' )-&gt;transport = 'postMessage';
        $wp_customize-&gt;get_setting( 'header_textcolor' )-&gt;transport = 'postMessage';
        $wp_customize-&gt;get_setting( 'background_color' )-&gt;transport = 'postMessage';
    }

    /**
     * This will output the custom WordPress settings to the live theme's WP head.
     *
     * Used by hook: 'wp_head'
     *
     * @see add_action('wp_head',$func)
     * @since MyTheme 1.0
     */
    public static function header_output() {
        ?&gt;
        &lt;!--Customizer CSS--&gt;
        &lt;style type=\"text/css\"&gt;
            &lt;?php self::generate_css('#site-title a', 'color', 'header_textcolor', '#'); ?&gt;
            &lt;?php self::generate_css('body', 'background-color', 'background_color', '#'); ?&gt;
            &lt;?php self::generate_css('a', 'color', 'link_textcolor'); ?&gt;
        &lt;/style&gt;
        &lt;!--/Customizer CSS--&gt;
        &lt;?php
    }


    public static function live_preview() {
        wp_enqueue_script(
            'mytheme-themecustomizer', // Give the script a unique ID
            get_template_directory_uri() . '/assets/js/theme-customizer.js', // Define the path to the JS file
            array(  'jquery', 'customize-preview' ), // Define dependencies
            '', // Define a version (optional)
            true // Specify whether to put in footer (leave this true)
        );
    }


    public static function generate_css( $selector, $style, $mod_name, $prefix='', $postfix='', $echo=true ) {
        $return = '';
        $mod = get_theme_mod($mod_name);
        if ( ! empty( $mod ) ) {
            $return = sprintf('%s { %s:%s; }',
                $selector,
                $style,
                $prefix.$mod.$postfix
            );
            if ( $echo ) {
                echo $return;
            }
        }
        return $return;
    }

}</pre>
</div>
<h3>Comments.php</h3>
<div class=\"divider-15\"></div>
Add the below code to <em>comments.php</em> and save the file:
<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">&lt;?php 
if ('comments.php' == basename($_SERVER['SCRIPT_FILENAME'])) 
die ('Please do not load this page directly. Thanks!');
if (!empty($post-&gt;post_password)) { // if there's a password
  if ($_COOKIE['wp-postpass_' . COOKIEHASH] != $post-&gt;post_password) 
{  // and it doesn't match the cookie
?&gt;

&lt;h2&gt;&lt;?php _e('Password Protected'); ?&gt;&lt;/h2&gt;
&lt;p&gt;&lt;?php _e('Enter the password to view comments.'); ?&gt;&lt;/p&gt;

&lt;?php return;
  }
}

  

$oddcomment = 'alt';

?&gt;



&lt;?php if ($comments) : ?&gt;
  &lt;h3 id=\"comments\"&gt;&lt;?php comments_number('No Responses', 'One Response', '% Responses' );?&gt; 
        to &amp;#8220;&lt;?php the_title(); ?&gt;&amp;#8221;&lt;/h3&gt;

&lt;ol class=\"commentlist\"&gt;
&lt;?php foreach ($comments as $comment) : ?&gt;

  &lt;li class=\"&lt;?php echo $oddcomment; ?&gt;\" id=\"comment-&lt;?php comment_ID() ?&gt;\"&gt;

&lt;div class=\"commentmetadata\"&gt;
&lt;strong&gt;&lt;?php comment_author_link() ?&gt;&lt;/strong&gt;, &lt;?php _e('on'); ?&gt; 
&lt;a href=\"#comment-&lt;?php comment_ID() ?&gt;\" 
title=\"\"&gt;&lt;?php comment_date('F jS, Y') ?&gt; &lt;?php _e('at');?&gt; 
&lt;?php comment_time() ?&gt;&lt;/a&gt; &lt;?php _e('Said&amp;#58;'); ?&gt; 
&lt;?php edit_comment_link('Edit Comment','',''); ?&gt;
 		&lt;?php if ($comment-&gt;comment_approved == '0') : ?&gt;
    &lt;em&gt;&lt;?php _e('Your comment is awaiting moderation.'); ?&gt;&lt;/em&gt;
 		&lt;?php endif; ?&gt;
&lt;/div&gt;

&lt;?php comment_text() ?&gt;
  &lt;/li&gt;

&lt;?php /* Changes every other comment to a different class */
  if ('alt' == $oddcomment) $oddcomment = '';
  else $oddcomment = 'alt';
?&gt;

&lt;?php endforeach; ?&gt;
  &lt;/ol&gt;

&lt;?php else : ?&gt;

&lt;?php if ('open' == $post-&gt;comment_status) : ?&gt;
  &lt;!-- If comments are open, but there are no comments. --&gt;
  &lt;?php else : // comments are closed ?&gt;

  
&lt;p class=\"nocomments\"&gt;Comments are closed.&lt;/p&gt;

  &lt;?php endif; ?&gt;
&lt;?php endif; ?&gt;


&lt;?php if ('open' == $post-&gt;comment_status) : ?&gt;

    &lt;h3 id=\"respond\"&gt;Leave a Reply&lt;/h3&gt;

&lt;?php if ( get_option('comment_registration') &amp;&amp; !$user_ID ) : ?&gt;
&lt;p&gt;You must be &lt;a href=\"&lt;?php echo get_option('siteurl'); ?&gt;
/wp-login.php?redirect_to=&lt;?php the_permalink(); ?&gt;\"&gt;
logged in&lt;/a&gt; to post a comment.&lt;/p&gt;

&lt;?php else : ?&gt;

&lt;form action=\"&lt;?php echo get_option('siteurl'); ?&gt;
/wp-comments-post.php\" method=\"post\" id=\"commentform\"&gt;
&lt;?php if ( $user_ID ) : ?&gt;

&lt;p&gt;Logged in as &lt;a href=\"&lt;?php echo get_option('siteurl'); ?&gt;/wp-admin/profile.php\"&gt;
&lt;?php echo $user_identity; ?&gt;&lt;/a&gt;. &lt;a href=\"&lt;?php echo get_option('siteurl'); ?&gt;
/wp-login.php?action=logout\" 
title=\"Log out of this account\"&gt;Logout &amp;raquo;&lt;/a&gt;&lt;/p&gt;

&lt;?php else : ?&gt;

&lt;p&gt;&lt;input type=\"text\" name=\"author\" id=\"author\" value=\"&lt;?php echo $comment_author; ?&gt;\" 
size=\"40\" tabindex=\"1\" /&gt;
&lt;label for=\"author\"&gt;&lt;small&gt;Name &lt;?php if ($req) echo \"(required)\"; ?&gt;&lt;/small&gt;&lt;/label&gt;&lt;/p&gt;

&lt;p&gt;&lt;input type=\"text\" name=\"email\" id=\"email\" value=\"&lt;?php echo $comment_author_email; ?&gt;\" 
size=\"40\" tabindex=\"2\" /&gt;
&lt;label for=\"email\"&gt;&lt;small&gt;Mail (will not be published) &lt;?php if ($req) echo \"(required)\"; ?&gt;
&lt;/small&gt;&lt;/label&gt;&lt;/p&gt;

&lt;p&gt;&lt;input type=\"text\" name=\"url\" id=\"url\" value=\"&lt;?php echo $comment_author_url; ?&gt;\" 
size=\"40\" tabindex=\"3\" /&gt;
&lt;label for=\"url\"&gt;&lt;small&gt;Website&lt;/small&gt;&lt;/label&gt;&lt;/p&gt;

&lt;?php endif; ?&gt;

&lt;!--&lt;p&gt;&lt;small&gt;&lt;strong&gt;XHTML:&lt;/strong&gt; &lt;?php _e('You can use these tags&amp;#58;'); ?&gt; 
&lt;?php echo allowed_tags(); ?&gt;&lt;/small&gt;&lt;/p&gt;--&gt;

&lt;p&gt;&lt;textarea name=\"comment\" id=\"comment\" cols=\"60\" rows=\"10\" tabindex=\"4\"&gt;&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;&lt;input name=\"submit\" type=\"submit\" id=\"submit\" tabindex=\"5\" value=\"Submit Comment\" /&gt;
&lt;input type=\"hidden\" name=\"comment_post_ID\" value=\"&lt;?php echo $id; ?&gt;\" /&gt;
&lt;/p&gt;

&lt;?php do_action('comment_form', $post-&gt;ID); ?&gt;

&lt;/form&gt;

&lt;?php endif; ?&gt;

&lt;?php endif; ?&gt;</pre>
This standard code is used to enable comments in WordPress site or blog.
<div class=\"divider-15\"></div>
Now, the template and functional files have been created and located in the theme folder. CSS Stylesheet is the last remaining file that we need to create.
<div class=\"divider-15\"></div>
<h3>Stylesheet</h3>
<div class=\"divider-15\"></div>
The theme design is defined in CSS stylesheet. So open your editor and create a document and add the following code to it. Save it as style.css. WP theme development would become quite interesting after creating a stylesheet.
<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">/*  
Theme Name: Innox Africa Theme
Theme URI: https://www.lifelongfamilies.com
Description: My Custom Theme
Version: 1.0
Author: Philip Njuguna
Author URI: https://www.lifelongfamilies.com

*/


body{
  margin: 0;
  font-family: Arial, Helvetica, Georgia, Sans-serif;
  font-size: 12px;
  text-align: center;
  vertical-align: top;
  background: #ffffff;
  color: #000000;
}

h2{
  
  font-family: Rockwell, Arial, Sans-serif;
  font-size: 30px;
  color: #000000;
  
}

a:link, a:visited{
  text-decoration: underline;
  color: #000000;
}

a:hover{
  text-decoration: none;
}

#wrapper{
  margin: 0 auto 0 auto;
  width: 750px;
  text-align: left;
}

#header{
  float: left;
  width: 750px;
}

#container{
  float: left;
  width: 400px;
}

.sidebar{
  float: left;
  width: 240px;
  background: #ffffff;
  margin: 0 0 0 10px;
  display: inline;
}

.sidebar h2{
  font-size: 20px;
}

#footer{
  clear: both;
  float: left;
  width: 750px;
}

.comments-template{
  margin: 10px 0 0;
  border-top: 1px solid #ccc;
  padding: 10px 0 0;
}

.comments-template ol{
  margin: 0;
  padding: 0 0 15px;
  list-style: none;
}

.comments-template ol li{
  margin: 10px 0 0;
  line-height: 18px;
  padding: 0 0 10px;
  border-bottom: 1px solid #ccc;
}

.comments-template h2, .comments-template h3{
  font-family: Georgia, Sans-serif;
  font-size: 16px;
}

.commentmetadata{
  font-size: 12px;
}

.comments-template p.nocomments{
  padding: 0;
}

.comments-template textarea{
  font-family: Arial, Helvetica, Georgia, Sans-serif;
  font-size: 12px;
}</pre>
<strong>404.php</strong>

This will handle for pages ro post that are not found. Instaed of showing user 404 error we shall instead show the pos with more views.
<pre>&lt;?php
get_header();

query_posts('meta_key=post_views_count&amp;posts_per_page=1&amp;orderby=meta_value_num&amp;order=DESC');

?&gt;
    &lt;main class=\"content\"&gt;

        &lt;div class=\"inner-content\"&gt;
            &lt;div class=\"container\"&gt;
                &lt;div class=\"row\"&gt;
                    &lt;div class=\"col-md-8\"&gt;
                        &lt;?php if (have_posts()) : ?&gt;
                            &lt;?php while (have_posts()) : the_post(); ?&gt;

                                &lt;article class=\"post hentry wow fadeInUp\"&gt;
                                    &lt;h1 class=\"entry-title\"&gt;

                                            &lt;?= the_title() ?&gt;
                                    &lt;/h1&gt;
                                    &lt;figure class=\"featured-image\"&gt;
                                        &lt;?php  the_post_thumbnail()?&gt;
                                    &lt;/figure&gt;
                                    &lt;div class=\"entry-summary\"&gt;
                                        &lt;?php the_content() ?&gt;
                                    &lt;/div&gt;

                                &lt;/article&gt;


                                &lt;?php wp_reset_postdata(); ?&gt;
                            &lt;?php endwhile; ?&gt;




                        &lt;?php else : ?&gt;

                            &lt;?php _e('Sorry, no posts matched your criteria.'); ?&gt;

                        &lt;?php endif; ?&gt;



                    &lt;/div&gt;
                    &lt;?php get_sidebar() ?&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/main&gt;





&lt;?php
get_footer();</pre>
<h3>WordPress Theme</h3>
<div class=\"divider-15\"></div>
Your theme is designed with the stylesheet. The CSS stylesheet file would add shape and color to your blog. You can do some CSS tweaking by defining all DIV classes and ids of template files in style.
<div class=\"divider-15\"></div>
You can locate all the template files in the stylesheet to change the design and add other values to them. Stay with us, to get all the designs value you desire. Congratulations your theme design is done with the help of our WordPress theme development guide.
<div class=\"divider-15\"></div>
This guide is all about WordPress theme development from scratch. Whether you are a beginner or experienced WordPress theme developer, you would find the answer of your theme related query here.","Developing a WordPress Theme from Scratch","WordPress was originally built as a blogging platform, but is now what is known as a CMS – Content Management System.

Any website that you intend to make updates to can benefit from a CMS. If it’s a blog, you want to be able to add posts. If it’s a restaurant website, you want to be able to add and update menus. If it’s a company website, you want to be able to update prices, packages, and so on. This website is a custom theme running on WordPress. (Open source, too!)

If someone is paying you to make a website, it’s because they don’t know how or don’t have time to deal with code. It needs to be as simple as possible for the client. WordPress can help with all this and more.","publish","open","open","","developing-a-wordpress-theme-from-scratch","","","2019-01-13 15:59:48","2019-01-13 15:59:48","",0,"https://www.lifelongfamilies.com/?p=2594",0,"post","",0
2818,2,"2019-02-18 12:10:42","2019-02-18 12:10:42","<!-- wp:paragraph -->
<p><a href=\"https://tecadmin.net/tag/virtualization/\">n</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>Oracle VirtualBox 5.2.8</strong>&nbsp;has been released on&nbsp;<strong>February 27th, 2018</strong>. Oracle VirtualBox 5.2 is the latest major release after launched by Oracle team. This version has the new feature to export VM to Oracle Cloud, Unattended guest installation, improved tools handling with more attractive icons. Oracle team also added an experimental feature for audio support for video recording. See the&nbsp;<a href=\"https://www.virtualbox.org/wiki/Changelog\" target=\"_blank\" rel=\"noreferrer noopener\">ChangeLog</a>&nbsp;for more details.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This article helps you to install VirtualBox on&nbsp;<strong>Ubuntu 16.04 LTS</strong>&nbsp;systems.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Step 1 – Prerequsities</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>You must have logged in to your server using root or sudo privileged user. After login to your system update current packages of the system to the latest version.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">sudo apt-get update
sudo apt-get upgrade
</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Step 2 – Configure Apt Repository</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Let’s import the Oracle public key to your system signed the Debian packages using the following commands.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Now, you need to add Oracle VirtualBox PPA to Ubuntu system. You can do this by running the below command on your system.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">sudo add-apt-repository \"deb http://download.virtualbox.org/virtualbox/debian xenial contrib\"
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>This command will add an entry to /etc/apt/sources.list at end of the file.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Step 3 – Install Oracle VirtualBox</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>After completing the above steps, let’s install VirtualBox using the following commands. If you have already installed an older version of VirtualBox, Below command will update it automatically.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">sudo apt-get update
sudo apt-get install virtualbox-5.2
</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Step 4 – Launch VirtualBox</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>We can use dashboard shortcuts to start VirtualBox or simply run following command from a terminal.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">virtualbox
</pre>
<!-- /wp:preformatted -->

<!-- wp:image {\"id\":2819} -->
<figure class=\"wp-block-image\"><img src=\"https://www.lifelongfamilies.com/wp-content/uploads/2019/02/Screenshot-from-2019-02-18-15-04-53.png\" alt=\"\" class=\"wp-image-2819\"/></figure>
<!-- /wp:image -->","How to Install VirtualBox 5.2 on Ubuntu 16.04 LTS","","publish","open","open","","install-oracle-virtualbox-on-ubuntu","","","2019-02-18 12:10:42","2019-02-18 12:10:42","",0,"https://www.lifelongfamilies.com/?p=2818",0,"post","",0
2864,2,"2019-04-05 17:27:41","2019-04-05 17:27:41","<!-- wp:heading {\"level\":3} -->
<h3>Introduction</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In many VPS environments, it is often the case that you will have a number of small programs that you want to run persistently, whether these be small shell scripts, Node.js apps, or any large-sized packages.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Conventionally, you may write a init script for each of these programs, but this can quickly become time consuming to manage and isn't always particularly transparent for newer users.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a href=\"http://supervisord.org/#\">Supervisor</a>&nbsp;is a process manager which makes managing a number of long-running programs a trivial task by providing a consistent interface through which they can be monitored and controlled.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This tutorial assumes that you are familiar with the command line, installing packages, and basic server management.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Installation</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Installation of Supervisor on both Ubuntu and Debian is incredibly simple, as prebuilt packages already exist within both distributions' repositories.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>As the root user, run the following command to install the Supervisor package:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">apt-get install supervisor</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Once this has completed, the supervisor daemon should already be started, as the prebuilt packages come with an init script that will also ensure the Supervisor is restarted after a system reboot. You can ensure this is the case by running:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">service supervisor restart</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Now that we have Supervisor installed, we can look at adding our first programs.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Adding a Program</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>New programs are given to Supervisor through configuration files, which inform it of the executable to run, any environmental variables, and how output should be handled.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>Note:</strong>&nbsp;All programs run under Supervisor must be run in a&nbsp;<a href=\"http://supervisord.org/subprocess.html#nondaemonizing-of-subprocesses\">non-daemonising mode</a>&nbsp;(sometimes also called 'foreground mode'). If, by default, the program forks and returns on startup, then you may need to consult the program's manual to find the option to enable this mode, otherwise Supervisor will not be able to properly determine the status of the program.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For the sake of this article, we'll assume we have a shell script we wish to keep persistently running that we have saved at&nbsp;<strong>/usr/local/bin/long.sh</strong>&nbsp;and looks like the following:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">#!/bin/bash
while true
do 
	# Echo current date to stdout
	echo `date`
	# Echo 'error!' to stderr
	echo 'error!' &gt;&amp;2
	sleep 1
done</pre>
<!-- /wp:preformatted -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">chmod +x /usr/local/bin/long.sh</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>In a practical sense, this script is clearly rather pointless, but it will allow us to cover the fundamentals of Supervisor configuration.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The program configuration files for Supervisor programs are found in the&nbsp;<strong>/etc/supervisor/conf.d</strong>&nbsp;directory, normally with one program per file and a .conf extension. A simple configuration for our script, saved at&nbsp;<strong>/etc/supervisor/conf.d/long_script.conf</strong>, would look like so:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">[program:long_script]
command=/usr/local/bin/long.sh
autostart=true
autorestart=true
stderr_logfile=/var/log/long.err.log
stdout_logfile=/var/log/long.out.log
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>We'll look at the significance of each line and some of the tweaks that may be desirable for your program below:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">[program:long_script]
command=/usr/local/bin/long.sh</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>The configuration begins by defining a program with the name 'long_script' and the full path to the program:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">autostart=true
autorestart=true</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>The next two lines define the basic automatic behaviour of the script under certain conditions.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The&nbsp;<strong>autostart</strong>&nbsp;option tells Supervisor that this program should be started when the system boots. Setting this to false will require a manual start command following any system shutdown.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>autorestart</strong>&nbsp;defines how Supervisor should manage the program in the event it exits and has three options:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>false' tells Supervisor not to ever restart the program after it exits</li><li>'true' tells Supervisor to always restart the program after it exits</li><li>'unexpected' tells Supervisor to only restart the program if it exits with an unexpected error code (by default anything other than codes 0 or 2).</li></ul>
<!-- /wp:list -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">stderr_logfile=/var/log/long.err.log
stdout_logfile=/var/log/long.out.log</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>The final two lines define the locations of the two main log files for the program. As suggested by the option names, stdout and stderr will be directed to the&nbsp;<strong>stdout_logfile</strong>&nbsp;and&nbsp;<strong>stderr_logfile</strong>&nbsp;locations respectively. The specified directory specified must exist before we start the program, as Supervisor will not attempt to create any missing directories.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The configuration we have created here is a minimal reasonable template for a Supervisor program.&nbsp;<a href=\"http://supervisord.org/configuration.html#program-x-section-settings\">The documentation</a>&nbsp;lists many more optional configuration options that are available to fine tune how the program is executed.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Once our configuration file is created and saved, we can inform Supervisor of our new program through the&nbsp;<strong>supervisorctl</strong>&nbsp;command. First we tell Supervisor to look for any new or changed program configurations in the&nbsp;<strong>/etc/supervisor/conf.d</strong>&nbsp;directory with:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">supervisorctl reread</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Followed by telling it to enact any changes with:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">supervisorctl update</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Any time you make a change to any program configuration file, running the two previous commands will bring the changes into effect.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>At this point our program should now be running and we can check this is the case by looking at the output log file:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">$ tail /var/log/long.out.log
Sat Jul 20 22:21:22 UTC 2013
Sat Jul 20 22:21:23 UTC 2013
Sat Jul 20 22:21:24 UTC 2013
Sat Jul 20 22:21:25 UTC 2013
Sat Jul 20 22:21:26 UTC 2013
Sat Jul 20 22:21:27 UTC 2013
Sat Jul 20 22:21:28 UTC 2013
Sat Jul 20 22:21:29 UTC 2013
Sat Jul 20 22:21:30 UTC 2013
Sat Jul 20 22:21:31 UTC 2013
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Success!</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Managing Programs</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Once our programs are running, there will undoubtedly be a time when we want to stop, restart, or see their status. The supervisorctl program, which we first used above, also has an interactive mode through which we can issue commands to control our programs.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To enter the interactive mode, start supervisorctl with no arguments:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">$ supervisorctl
long_script                      RUNNING    pid 12614, uptime 1:49:37
supervisor&gt;
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>When started, supervisorctl will initially print the status and uptime of all programs, followed by showing a command prompt. Entering&nbsp;<strong>help</strong>&nbsp;will reveal all of the available commands that we can use:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">supervisor&gt; help

default commands (type help ):
=====================================
add    clear  fg        open  quit    remove  restart   start   stop  update
avail  exit   maintail  pid   reload  reread  shutdown  status  tail  version
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>To start in a simple manner, we can&nbsp;<strong>start</strong>,&nbsp;<strong>stop</strong>&nbsp;and&nbsp;<strong>restart</strong>&nbsp;a program with the associated commands followed by the program name:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">supervisor&gt; stop long_script
long_script: stopped
supervisor&gt; start long_script
long_script: started
supervisor&gt; restart long_script
long_script: stopped
long_script: started
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Using the&nbsp;<strong>tail</strong>&nbsp;command, we can view the most recent entries in the stdout and stderr logs for our program:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">supervisor&gt; tail long_script
Sun Jul 21 00:36:10 UTC 2013
Sun Jul 21 00:36:11 UTC 2013
Sun Jul 21 00:36:12 UTC 2013
Sun Jul 21 00:36:13 UTC 2013
Sun Jul 21 00:36:14 UTC 2013
Sun Jul 21 00:36:15 UTC 2013
Sun Jul 21 00:36:17 UTC 2013

supervisor&gt; tail long_script stderr
error!
error!
error!
error!
error!
error!
error!
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Using&nbsp;<strong>status</strong>&nbsp;we can view again the current execution state of each program after making any changes:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">supervisor&gt; status
long_script                      STOPPED    Jul 21 01:07 AM</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Finally, once we are finished, we can exit supervisorctl with Ctrl-C or by entering&nbsp;<strong>quit</strong>&nbsp;into the prompt:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=\"wp-block-preformatted\">supervisor&gt; quit</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>And that's it! You've mastered the basics of managing persistent programs through Supervisor and extending this to your own programs should be a relatively simple task. If you have any questions or further advice, be sure to leave it in the comments section.</p>
<!-- /wp:paragraph -->","How To Install and Manage Supervisor on Ubuntu and Debian VPS","","publish","open","open","","how-to-install-and-manage-supervisor-on-ubuntu-and-debian-vps","","","2019-04-05 17:27:41","2019-04-05 17:27:41","",0,"https://www.lifelongfamilies.com/?p=2845",0,"post","",0
2873,2,"2019-04-26 13:46:53","2019-04-26 13:46:53","<!-- wp:paragraph -->
<p><a href=\"https://ionicframework.com/docs/api/util/Events/\">Events in Ionic</a> is a pub-sub system that can be used to pass messages across</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p> different components and pages. Here we’ll go over a simple example </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>where a page publishes an event and a second page subscribes to that </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>event. This way, data can easily be passed between the two.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id=\"injecting-the-events-service\">Injecting the Events Service</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The first step in getting the event system to work is to import and inject </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>the <em>Events</em> service into both the sending and the receiving pages:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>page1.ts</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class=\"wp-block-code\"><code>import { Component, Events } from 'ionic-angular';

@Component({
  selector: 'page-page1',
  templateUrl: 'page1.html'
})
export class Page1Page {
  constructor(public events1: Events) {}
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>page2.ts</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class=\"wp-block-code\"><code>import { Component, Events } from 'ionic-angular';

@Component({
  selector: 'page-page2',
  templateUrl: 'page2.html'
})
export class Page2Page {
  constructor(public events2: Events) {}
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Here we named the injected instances <em>events1</em> and <em>events2</em> for clarity, but </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>they can both be injected using the same name since each instance is part of</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p> a different page class.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id=\"publishing--subscribing-to-events\">Publishing &amp; Subscribing to Events</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Now that we have imported and injected the <em>Events</em> service into both pages </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>we can start publishing and subscribing to events using the </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>service’s <em>publish</em> and <em>subscribe</em> methods.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>On&nbsp;<em>Page1</em>, we’ll publish a message when a button is pressed:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>page1.ts</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class=\"wp-block-code\"><code>handleClick(){
  this.events1.publish('my-message', '👋 Hello from page1!');
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Then on page 2 we’ll subscribe to receive messages published using the&nbsp;<em>my-message</em>&nbsp;key (called a&nbsp;<code>topic</code>&nbsp;in Ionic):</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>page2.ts</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class=\"wp-block-code\"><code>constructor(public events2: Events){
  this.events2.subscribe('my-message', (data) =>{
    console.log(data); // 👋 Hello from page1!
  });
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As soon as the event is published and <em>page2</em> is initialized, the subscribe </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>event will be triggered and execute the code with the data being passed.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Note that the data sent using <em>publish</em> doesn't have to be a string and can just </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>a well be an object.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id=\"practical-application\">Practical Application</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>There are many practical applications to use the event system. For example,</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p> I’ve used it to pop back to a page using the <a href=\"https://alligator.io/ionic/navigating-passing-data-ionic/\">navController</a> while also </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>updating some information on the page that gets popped into.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Normally, when navigating to a page using navController’s <em>push</em> method, </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>we can pass data as <em>navParams</em>, but the <em>pop</em> method doesn’t have such </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>capability, so the event pub-sub service comes-in really handy.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Take a look at this mini application for instance:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>game.ts</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class=\"wp-block-code\"><code>import { Component, Events } from 'ionic-angular';
import { NavController } from 'ionic-angular';

@Component({
  selector: 'page-game',
  templateUrl: 'game.html'
})
export class GamePage {
  constructor(
    public events: Events,
    public navController: NavController
  ) {
    this.events.subscribe('stats', statsData => {
      console.log(statsData);
    });
  }

  gameEnded() {
    this.navController.push(ShowWinnerPage);
  }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>show-winner.ts</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class=\"wp-block-code\"><code>import { Component, Events } from 'ionic-angular';
import { NavController } from 'ionic-angular';

@Component({
  selector: 'page-show-winner',
  templateUrl: 'show-winner.html'
})
export class ShowWinnerPage {
  constructor(
    public events: Events,
    public navController: NavController
  ) {}

  backButtonPressed(someData) {
    this.events.publish('stats', someData);
    this.navController.pop();
  }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2 id=\"unsubscribing\">Unsubscribing</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The <em>events</em> service in the <em>GamePage</em> class will continue to be subscribed to </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>receive messages for the life of the application unless it is unsubscribed </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>using something like this:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>game.ts</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class=\"wp-block-code\"><code>private unsubscribeToEvents() {
  this.events.unsubscribe('stats', () => {
    console.log('Unsubscribed!');
  });
}</code></pre>
<!-- /wp:code -->","Using Events in Ionic to Pass Data & Messages Between Pages","","publish","open","open","","events-in-ionic","","","2019-04-26 13:46:53","2019-04-26 13:46:53","",0,"https://www.lifelongfamilies.com/?p=2873",0,"post","",0
2105,2,"2019-10-21 07:22:36","2019-10-21 07:22:36","<!-- wp:heading -->
<h2>What is PPC?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href=\"https://www.wordstream.com/ppc\" target=\"_blank\" rel=\"noreferrer noopener\"><strong>PPC</strong>&nbsp;stands for&nbsp;<em>pay-per-click</em></a>, a model of internet marketing in which advertisers pay a fee each time one of their ads is clicked. Essentially, it’s a way of buying visits to your site, rather than attempting to “earn” those visits organically.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Search engine advertising is one of the most popular forms of PPC. It allows advertisers to bid for ad placement in a search engine's sponsored links.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p> when someone searches on a keyword that is related to their business offering. For example, if we bid on the keyword “PPC software,” our ad might show up in the very top spot on the Google results page.</p>
<!-- /wp:paragraph -->

<!-- wp:image -->
<figure class=\"wp-block-image\"><img src=\"https://wordstream-files-prod.s3.amazonaws.com/s3fs-public/styles/simple_image/public/images/what-is-ppc-ppc-software-ads.png?x6txHZYcigallD2t0CbTjv45yAhgi0jC&amp;itok=7-1IdgJB\" alt=\"What is PPC\"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>What is Google Ads?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Google Ads (formerly known as Google AdWords) is the single most popular PPC advertising system in the world.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p> The Ads platform enables businesses to create ads that appear on Google’s search engine and other Google properties.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a href=\"https://www.digitalmarketingkenya.com/\">Google Ad</a>s operates on a pay-per-click model, in which users bid on keywords and pay for each click on their advertisements.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p> Every time a search is initiated, Google digs into the pool of Ads advertisers and chooses a set of winners to appear in the valuable ad space on its search results page. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The “winners” are chosen based on a combination of factors, including the quality and relevance of their keywords and ad campaigns, as well as the size of their keyword bids.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Every time our ad is clicked, sending a visitor to our website, we have to pay the search engine a small fee. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>When PPC is working correctly, the fee is trivial, because <em>the visit is worth more than what you pay for it</em>. In other words, if we pay $3 for a click, but the click results in a $300 sale, then we’ve made a hefty profit.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":5} -->
<h5>Internet Marketing Ninjas capabilities include:</h5>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>Search Marketing – Identifying and eliminating poor-performing key phrase variants and identification of new high-performing phrases for use in Google Adwords and Bing Ads.</li><li>Display Advertising and Remarketing - Reaching high value audiences using geographic, behavioral, and contextual targeting, as well as recapturing lost visitors using remarketing.</li><li>Ecommerce and Product Listing Ads (PLA) – Ability to execute seasonal and long term strategies, shopping campaigns and comparison shopping campaigns.</li><li>Social Media Advertising – Ability to target audiences on all major social platforms, including<ul><li>Social Media PPC</li><li>Facebook</li><li>LinkedIn</li><li>Twitter, and more!</li></ul></li><li>Conversion Optimization – Extensive usability services spanning heuristic/cognitive analysis, user testing, functional testing, landing page optimization, and more.</li><li>Analytics and Attribution Support – Troubleshooting and identifying digital measurement opportunities.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>PPC Management Services</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Paid search services include:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Discovery process, account audit, and development of campaign strategy</li><li>Targeting using audience segmentation and persona data, social listening, key phrase insights, and more</li><li>Competitive research</li><li>Account structuring</li><li>Continuous creative development and testing</li><li>Location targeting and mobile targeting</li><li>Bid management</li><li>Monthly calls and reporting on campaign performancePPC Evaluation</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>If you have an established PPC presence that is managed in-house and want an expert review of your strategy, a PPC evaluation from Internet Marketing Ninjas will:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Conduct a comprehensive audit of your accounts</li><li>Conduct competitive research</li><li>Review and recommend creative ads</li><li>Review analytics to ensure proper goal and/or ecommerce configuration</li><li>Provide ready-to-implement actionable recommendations for execution as part of ongoing PPC management.</li></ul>
<!-- /wp:list -->

<!-- wp:heading {\"level\":5} -->
<h5>Pay Per Click Management And Search Engine Optimization</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>A PPC campaign offers more control over results than organic Search Engine Optimization (SEO). </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>With effective Pay Per Click management, you have the ability to compete relatively quickly for phrases that will take much more time to secure using earned media methods such as SEO. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>While a new website sometimes takes a lot of time to rank well on search engine result pages (SERPs), solid Pay Per Click campaign management can create traffic almost instantly through use of Google Adwords, Bing Ads and more. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Leveraging Paid Search and <a rel=\"noreferrer noopener\" href=\"https://www.digitalmarketingkenya.com/\" target=\"_blank\">SEO</a> together helps create synergy and can create a ‘halo effect’ that improves the performance of both channels.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":5} -->
<h5>PPC Management And Content Marketing</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Social media platforms and new display advertising networks centered around sharable content provide an exciting opportunity to help get the right assets in front of your target audience, to attract referrals and citations. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>However, if executed with the wrong assets or on the wrong platform, these campaigns can be very costly with a very low return</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>. Internet Marketing Ninjas has extensive experience leveraging advertising platforms to support and improve return on content marketing efforts.</p>
<!-- /wp:paragraph -->","What is PPC","","publish","open","open","","what-is-ppc","","","2019-10-21 07:24:03","2019-10-21 07:24:03","",0,"https://www.digitalmarketingkenya.com/?p=2105",0,"post","",0
2204,2,"2019-10-21 16:20:14","2019-10-21 16:20:14","<!-- wp:heading {\"level\":1} -->
<h1>YOU SEARCHED FOR \"Nairobi SEO\" AND WE SHOWED UP FIRST&nbsp;</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Turn Your Website Into A Full-Time Sales Person Leveraging The #1 Nairobi SEO Agency and find new customers local to you!</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>building a predictable system to get new customers. Traditionally, you have two marketing options for growing your business. The first option is to spend money on <a href=\"http://www.google.com\">advertising,</a> but that could potentially cheapen your brand with paid ads. You may even attract the wrong customer base. Your second option is to hire an employee, and you and your team understand how expensive that can be. We believe in a third option: the most powerful salesperson in the world – your website.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Did you know <a href=\"http://neilpatel.com\">that 70% </a>of search engine browsers click on non-paid (organic) listings instead of the ads at the top of the page?&nbsp; Digital Marketing Kenya specializes in creating digital marketing campaigns for small businesses and enterprise businesses that <a href=\"https://www.digitalmarketingkenya.com/what-is-ppc/\">consist</a> of organic traffic from Google’s search engine. Digital Marketing Kenya also assists clients with social media management, PPC advertising, video production, graphic design, and marketing consulting. Read more about our services by clicking here.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>MORE ABOUT OUR SEO APPROACH</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you landed on this page it means that you searched into Google for a Nairobi SEO – you found us because of Google’s search engine. We can do the same thing for your business with your target search phrases by engaging in a competitive search engine optimization campaign.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>About Our SEO &amp; Digital Marketing Agency</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>We are a digital marketing agency offering search engine optimization, graphic design, website development, and social media marketing services. Our digital agency is cultured in the fact that we are a handpicked search engine marketing team with results that speak for themselves. Managing over 25 monthly clients, we’re proud to claim that we carry a 90% retention rate with our monthly clients.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>Top 6 Reasons Why You Should Hire Digital Marketing Kenya</h3>
<!-- /wp:heading -->

<!-- wp:list {\"ordered\":true} -->
<ol><li>Ranked #1 for “Nairobi SEO” organically in the search</li><li>Measurable campaign tracking so you can see where you are</li><li>Long tail keyword targeting to avoid competition</li><li>Aggressive content marketing strategy for longevity in Google</li><li>We never outsource to cheap laborers</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Your business gets a custom digital marketing strategy</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Our business is in business to grow your traffic and conversions. We use white hat SEO process gives your website a sustainable ranking over time without having to risk raking penalties from Google’s ever-changing algorithm. Digital Marketing Kenya, practices an SEO approach that leverages your brand for more earned clicks and higher search engine visibility. T</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>Our Nairobi SEO Process</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Nairobi is a competitive area for SEO, and we understand that. Our team starts every search engine campaign by identifying the competitors of our clients. This market research phase allows us to figure out the domain ratings of your competitors to see how much we have to do to beat them. Once we have good competitive data, we can begin the SEO campaign by following our SEO process:</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>Fixing On-Site Technical Issues:</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>When we onboard a new client, we adhere to a technical SEO process where we analyze your website and search for common issues detected that holds back a website’s rankings. These issues include domain redirects, site security, site speed, site structure, schema mark up, thin content, and much more. Once we have the website in a good technical standing we can continue our SEO process.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>Adding SEO Content To The Website:&nbsp;</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The Digital Marketing Kenya team will then add content to your website – content that targets specific keywords that your customers are searching into the Google Search Engine. The content we write on our client’s website tends to be in a longer format to ensure that we get the rankings. In 2019 SEO is all about adding good content to your website that is evergreen to Google’s random algorithm update.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>Create a Link Building Campaign:&nbsp;</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Your content is great to have but you’re going to need to power up the domain rating of your website. First, by increasing your domain rating all of the golden content that you have written will rank higher in the search engines. In addition adding backlinks to your website will result in a higher search engine ranking. Backlinks can be acquired through our partner networks. Or even by prospecting for links in your local area. Your business can also be featured on several websites where they will place a link back to your website.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>How Much Does SEO Cost In Nairobi&nbsp;</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>You may be wondering, how much does SEO cost in Nairobi? After all, each and every business is different with their own challenges in the search engines. But for us to determine the price for a business in Nairobi engaging in SEO we must first do a comprehensive competitor analysis.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Our SEO campaigns are for a period of time with one total cost. Your investment is then broken down into monthly payments. For example, if after competitor analysis we determine that we will need 300 hours to complete service of the campaign and we bill art $100. Furthermore, you can clearly guess that you’re going to be paying $30,000 for the SEO campaign. This total campaign cost is broken down into monthly payments.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>We will be monitoring your SEO campaign and have monthly reporting on your most important KPI metrics. Usually, for clients, Our team will monitor things such as:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Google analytics data</li><li>Google my business data</li><li>Data about Google search console</li><li>And other webmaster tools that are important to an SEO campaign</li><li>Get Your Custom SEO Strategy Today&nbsp;</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>If you’re ready to add a custom digital marketing strategy to your business in Nairobi. Start by contacting us today to learn more about what we can do for you. Our digital marketing agency specializes in marketing for dentists, home services, legal firms, and professionals in the medical field. Certainly, we have solid client rankings all throughout Nairobi. It wouldn’t be much for us to rank your website at the top of the search engine using our unique process.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>How to connect Google Search Console to Any Website&nbsp;</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>It is straightforward to add your website to Google Search Console — it just takes a couple of steps. Here, we’ll guide you through the process. First, you need to have a Google Search Console account. Don’t have an account? Sign up now for Google Search Console. Once you’ve done that, you can follow the steps below:</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>1. Go to Google Search Console.</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Login or click ‘Start Now’, if needed.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>2. Click ‘Add a property’ under the search drop-down.</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>You can add up to 1000 properties to your Google Search Console account.</p>
<!-- /wp:paragraph -->

<!-- wp:image -->
<figure class=\"wp-block-image\"><img src=\"https://www.digitalmarketingkenya.com/storage/pages/October2019/Screen Shot 2019-10-01 at 20.15.131.png\" alt=\"Submit Url to google search console\"/></figure>
<!-- /wp:image -->

<!-- wp:heading {\"level\":3} -->
<h3>3. Enter your website URL in the box and click ‘Continue’.</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Please make sure you enter your complete URL. For example, if your site is https://yourdomain.com/ it needs to be that exact URL. Don’t forget the / at the end of the URL. If your site uses WWW or is using HTTP you need to add properties for those as well. If you are not sure what your site has, please speak with your host provider.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>4. Click the arrow next to ‘HTML tag’ to expand the option.</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>There are several ways to verify your site, but we’ve made it easy for you. We only need to get the authorization code so we can paste it in Yoast SEO.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>5. Copy the meta tag.</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Highlight the entire meta tag code. Right click on the highlighted tag and click on ‘Copy’ or use the copy shortcuts ctrl-c on Windows or cmd-c on Mac.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>6. Paste the Meta Tag&nbsp;</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Paste the meta tag between the &lt;head&gt; &lt;/head&gt; tags</p>
<!-- /wp:paragraph -->","Nairobi SEO","","publish","closed","closed","","nairobi-seo","","
https://www.digitalmarketingkenya.com/what-is-ppc/","2020-01-23 09:19:17","2020-01-23 09:19:17","",0,"https://www.digitalmarketingkenya.com/?p=2204",0,"post","",0
2206,2,"2019-10-21 16:25:59","2019-10-21 16:25:59","<!-- wp:paragraph -->
<p>Our Digital Marketing Services include social media marketing this is the use of Social Platforms i.e. <a href=\"http://facebook.com\">Facebook</a>, Twitter, Google+, LinkedIn, Instagram and many more.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>Search Engine Optimization (SEO)</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>You’ve Got your site &amp; yet don’t rank on the first page on search results, Our <a href=\"https://www.digitalmarketingkenya.com/\">Digital Marketing Service</a>s seek to make your site rank higher than your competitor.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>Website Analytics &amp; Audit</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Track your <a href=\"https://www.digitalmarketingkenya.com/what-is-ppc/\">website</a> performance, Top selling content in your site and make it easy to tweak your content. with our website audit, you get to know what sections of your website need improvement to help you rank better.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>E-mail Marketing</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>E-mail marketing provides a great platform to reach your clients, nearly everyone owns an E-mail. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p> With our Digital Marketing Services in Kenya, Our team of experts will ensure more opens on emails sent to your clients.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>Search Engine Marketing (SEM)</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Search Engine Marketing includes paid advertising, this includes; Google Adwords. Adwords. Quickly Get into the first page of google by running Paid Google Search Adwords.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>Content Marketing</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Your clients would like to hear about your brand, This is an effective way to generate leads you don’t have to worry about it, our digital marketing services in Kenya includes content strategy.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Increase leads and grows revenue by outranking your competitors on google. Complete the form below to get started.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you landed on this page it means that you searched into Google for a Mombasa SEO – you found us because we show up on the Google search engine. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>We can do the same thing for your business with your target search phrases by engaging in a competitive search engine optimization campaign.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>A Unique SEO Approach.</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Digital Marketing Kenya takes a multi-platform approach to achieve SEO excellence. Starting with your website, we build a 98/100 page speed website built for conversions. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>With a speedy design, we then optimize and add content to your website based on what your customers are searching for. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p> With Google's algorithms constantly changing day by day, it is critical that your brand is built for longevity.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p> We can help you do that because our team keeps a close eye on the Google changes. If your website is not seeing the customers you need to hit your goals, schedule a call with us today to receive a free strategy session.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>Transparent Reporting</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Our digital products come with a suite of tracking and reporting tools tailored to your goals. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>We take tracking to the next level by showing you where your visitors click from, what they saw on the website, the reason they called, and we even give you the ability to listen to leads generated from our service.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p> Digital Marketing Kenya is focused on transparent reporting that will help you make more informed marketing decisions in the future.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3>OMNI APPROACH SEO</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Our SEO approach starts with Google but takes an Omni approach meaning your brand is displayed in various places to help with SEO.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p> We manage your social media, post content to your local listings, place you on 200+ web directories and provide industry-leading recommendations to improve SEO performance. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In today's age, Google is looking at more than just your website for SEO rankings. Take hold of your digital marketing and work with an SEO agency that can improve your marketing and sales with proven results.</p>
<!-- /wp:paragraph -->","SOCIAL MEDIA MARKETING","","publish","open","open","","social-media-marketing","","","2019-10-21 16:26:01","2019-10-21 16:26:01","",0,"https://www.digitalmarketingkenya.com/?p=2206",0,"post","",0
2244,2,"2019-10-23 14:15:28","2019-10-23 14:15:28","We understand the reasons why you might resist building a website for on of your business: “I’m not tech-savvy”, “they’re too expensive”, “I don’t have the time”, or the infamous “I have enough business and I don’t need one”. <strong>The reality is, you don’t need to be tech-savvy, getting a professional website for your business can be cheap and easy, and to make it even simpler for you – not having a website is costing you time and money.</strong>

Check this out… 81% of people research a business or service on the internet before making a purchase decision. That’s 25.92 million people searching for businesses online. Yet, 46% of business owners listed “<a href=\"https://www.entrepreneur.com/article/271068\">Business currently doesn’t need one</a>” as their #1 reason for not having a website. We’re not statisticians, but we can see that there’s a glaring disconnect here.
<h2>Why You Need a Website No Matter Your Industry.</h2>
<h4>1. Having a website will attract new customers to your business and make you more money.</h4>
Your website is your number one marketing asset because we live in a digital age. People spend on average <a href=\"http://www.digitalcenter.org/wp-content/uploads/2013/10/2017-Digital-Future-Report.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">23.6 hours</a> online per week and are on their mobile devices for up to <a href=\"https://techcrunch.com/2017/03/03/u-s-consumers-now-spend-5-hours-per-day-on-mobile-devices/\" target=\"_blank\" rel=\"noopener noreferrer\">five hours</a> per day. By now, consumers expect companies to have an online presence (including a website) and will consider a company that DOESN’T have one as less professional.

We like this stat so much, we’re mentioning it twice:  <strong><a href=\"http://www.adweek.com/socialtimes/81-shoppers-conduct-online-research-making-purchase-infographic/208527\">81% of people research a business or service online</a></strong><strong> before making a purchase decision.</strong> If you don’t have a website, you have no chance of capturing a share of this market.

<strong>Your website can be available 24/7/365 even when you’re not.</strong> A website acts as your “always-on” business advocate during and outside of office hours.

<strong>Websites help you convert more of your existing referrals</strong> because most people still do their research and stack you against your competitors.
<div class=\"fsn-row full-width-row fsn-5ec001f707eac light\">
<div class=\"container\">
<div class=\"row\">
<div class=\"col-sm-10 col-sm-offset-1\">
<div class=\"fsn-column-inner fsn-5ec001f707f2a light\">
<div class=\"fsn-text fsn-5ec001f707f76\">
<h4>2.  Add instant credibility to your business simply by having a website.</h4>
The 21st-century consumer is skeptic; in fact, <strong><a href=\"https://www.verisign.com/assets/Research-small-business-september2013.pdf?inc=www.verisigninc.com\">56% of people stated that they won’t trust a business without a website.</a></strong> Having a good website instantly boosts your credibility as a legitimate business.

<strong><a href=\"http://www.tandfonline.com/doi/abs/10.1080/01449290500330448\">First impressions count</a></strong><strong>, and websites allow you to make a very strong impression </strong>with a well-designed introduction for your business.

<strong>A website can help showcase your expertise and better position your business.</strong> A website can be your number one tool for standing out in a crowd.

</div>
</div>
</div>
</div>
</div>
</div>
<div class=\"fsn-row full-width-row fsn-5ec001f707fbc light\">
<div class=\"container\">
<div class=\"row\">
<div class=\"col-sm-10 col-sm-offset-1\">
<div class=\"fsn-column-inner fsn-5ec001f708032 light\">
<div class=\"fsn-text fsn-5ec001f708079\">
<h4>3.  It’s not as hard, or as expensive, as you think.</h4>
<strong>You don’t need to be tech-savvy to get a website.</strong> Many web development companies have very simple signup processes which make the process quick and painless for you.

It can be very cost-effective. <strong>Websites offer a better return on investment than any other form of advertising</strong>. If you’re planning to market your business, a website should be your priority.

Over time the relatively low investment of getting a business website will pay dividends by driving you new customers and building your brand. <strong><a href=\"https://turbotax.intuit.ca/tax-resources/business-owner-tax/computer-software-deductions-for-business-owners.jsp\">Plus, it’s a legitimate business expense and a tax write off.</a></strong>

</div>
</div>
</div>
</div>
</div>
</div>
<div class=\"fsn-row full-width-row fsn-5ec001f7080c1 light\">
<div class=\"container\">
<div class=\"row\">
<div class=\"col-sm-10 col-sm-offset-1\">
<div class=\"fsn-column-inner fsn-5ec001f708149 light\">
<div class=\"fsn-text fsn-5ec001f708185\">
<h4>4.  Having a website will end up saving you time.</h4>
Whether you’re trading emails, taking calls, or sending out proposals – communicating with potential customers takes time. <strong>Your website can save you that time by providing answers to common customer questions and inquiries.</strong> What does this mean for you? You can spend your time doing more valuable things.

</div>
</div>
</div>
</div>
</div>
</div>
<div class=\"fsn-row full-width-row fsn-5ec001f7081c9 light\">
<div class=\"container\">
<div class=\"row\">
<div class=\"col-sm-10 col-sm-offset-1\">
<div class=\"fsn-column-inner fsn-5ec001f70823b light\">
<div class=\"fsn-text fsn-5ec001f70827f\">
<h4>5. Position yourself and stay in control of your brand.</h4>
A <a title=\"Website\" href=\"https://www.digitalmarketingkenya.com/elementor-page-builder/\" target=\"_blank\" rel=\"noopener noreferrer\">website</a> acts as a <strong>platform for your messaging and shapes the online perception of your business</strong> in a way that your social media channels cannot provide.

The platform allows you to <strong>position yourself in the market to get the exact type of customers you’re looking for</strong>.

Many business owners have been reviewed online, sometimes unknowingly and/or negatively. How does this affect you? <a href=\"https://www.salesforce.com/ca/blog/2015/03/customer-reviews.html\">79% of users who read online reviews, believe them.</a> <strong>Combat that negativity by posting your positive testimonials.</strong>

</div>
</div>
<h2 class=\"title\">Avoid 5 common mistakes in Website Design</h2>
<ol>
 	<li><strong>Don't Be Too Flashy
</strong>Flash animation certainly has its place in website design – but it's typically not on the home page of your small business Web design.
Customers arrive at your website expecting to find helpful information about the products and services that interest them – not a slowly unfolding display of digital animation. Use flash wisely – and sparingly – in your professional Web design.</li>
 	<li><strong> Don't Strain the Eye.
</strong>Keeping website design simple can save you – and your customers – from headaches. Use a tried-and-true font style, such as Arial, that's sans-serif and proven to be readable.
The background is another area of concern for professional Web design.
Using patterned backgrounds or placing colored type against a black background may cause users to seek someone else's more pleasing website design.</li>
 	<li><strong>Don't Make it Difficult.
</strong>The use of navigation in professional Web design is akin to the use of GPS on a road trip. Use it wisely and visitors will arrive at the desired destination - and even enjoy themselves along the way.
Resist the urge to get too creative with this aspect of your small business Web design – a clean navigation panel is a user's best resource.
When you hide website design navigation in fancy flash animation or images, your customers will get lost – and lose interest.</li>
 	<li><strong>Don't Waste Time.
</strong>When your website design is full of graphics and images, it requires a greater amount of bandwidth. This increased bandwidth takes longer for the user to download.
In the time it takes for your website design to load, your customer may very well decide it's not worth the wait.
Try not to forget the people using dial-up or mobile Internet connection. Use the graphics and images that are necessary for your small business Web design and save the rest for your portfolio.</li>
 	<li><strong>Don't Overdo It.
</strong>Everyone has come across a small business Web design that seems to include everything but the proverbial kitchen sink. Cluttered website design overwhelms your site's visitors and can make your business appear unprofessional.
A disorganized website design tends to reflect poorly on the very business it is supposed to promote, while a professional Web design speaks volumes about your attention to detail.</li>
</ol>
Your website design will become the \"face\" of your business, so you'll need a professional Web design that not only turns customers' heads but also keeps them interested. Follow the simple guidelines of small business Web design and you'll see the beauty in more positive visitor experience.

</div>
</div>
</div>
</div>","DO I NEED A WEBSITE FOR MY SMALL BUSINESS? YES, YOU DO. HERE ARE 5 REASONS WHY.","","publish","open","open","","business-website","","https://www.digitalmarketingkenya.com/nairobi-seo/
https://www.digitalmarketingkenya.com/elementor-page-builder/","2020-05-16 16:38:40","2020-05-16 16:38:40","",0,"https://www.digitalmarketingkenya.com/?p=2244",0,"post","",0
2513,2,"2019-12-04 11:39:54","2019-12-04 11:39:54","<h2>CONCUR YOUR INNER CHAMPION!</h2>
<p>20% BONUS</p>
<p>Start trading with a minimum of 250$ and we'll help you reach the top</p>
<p><a role=\"button\" href=\"http://lp.cmtrading.com/en/20percent_bonus/lp.html?A=36928&amp;cxd=36928_416520&amp;utm_source=Affiliates&amp;utm_medium=36928&amp;utm_campaign=6216\"> get this offer </a></p>
<p><a href=\"http://go.cmtaffiliates.com/visit/?bta=36928&amp;nci=6216\" target=\"_Top\" rel=\"noopener noreferrer\"><img src=\"http://cmtrading.ck-cdn.com/tn/serve/?cid=416501\" width=\"828\" height=\"190\" border=\"0\" /></a></p>
<p>&nbsp;</p>
<p>Ever heard of forex trading? What comes to your mind when you hear of it? Forex trading is a good platform to for making a good return online for your money with less hustles and little commitment of your time. Choosing the brokerage to trade with is one of the key issues to consider when selecting the brokerage to start trading with</p>
<p><!-- /wp:html --></p>
<p><!-- wp:paragraph --></p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:html --></p>
<p><!-- /wp:html --></p>
<p><!-- wp:paragraph --></p>
<p>Question to ask yourself before <a href=\"http://go.cmtaffiliates.com/visit/?bta=36928&amp;nci=6508\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\"registering (opens in a new tab)\">registering</a> should be: What are the available methods to deposit funds? How easy is it to withdrawal your profits? Which methods are available to withdraw the funds? Is the system user friendly? No need to worry about the details as we have analyzed this for you.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>Register with top 1 f<a href=\"http://go.cmtaffiliates.com/visit/?bta=36928&amp;nci=6508\">orex broker</a> in Africa, with almost every method available for depositing and withdrawing fund be it M-pesa, Visa, Paypal and almost all the digital wallets.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>The best thing about it is that you don’t have to be an expert to trade it has the best functionality of Kopykat where you are able to copy trades from the Top 100 traders in the platform. To sign up for either a demo account or live account follow the link</p>
<p><!-- /wp:paragraph --></p>
<p><a role=\"button\" href=\"http://go.cmtaffiliates.com/visit/?bta=36928&amp;nci=6508\"> Get Offer </a> <a href=\"http://lp.cmtrading.com/en/20percent_bonus/lp.html?A=36928&amp;cxd=36928_416520&amp;utm_source=Affiliates&amp;utm_medium=36928&amp;utm_campaign=6216\"> <img src=\"https://www.digitalmarketingkenya.com/wp-content/uploads/2019/12/icons.png\" sizes=\"(max-width: 752px) 100vw, 752px\" srcset=\"https://www.digitalmarketingkenya.com/wp-content/uploads/2019/12/icons.png 752w, https://www.digitalmarketingkenya.com/wp-content/uploads/2019/12/icons-300x29.png 300w, https://www.digitalmarketingkenya.com/wp-content/uploads/2019/12/icons-30x3.png 30w\" alt=\"Earn Money by forex in kenya\" width=\"752\" height=\"72\" /> </a></p>","How to Make Money in Forex Trading","Ever heard of forex trading? What comes to your mind when you hear of it? Forex trading is a good platform to for making a good return for your money with less hustles and little commitment of your time. Choosing the brokerage to trade with is one of the key issues to consider when selecting the brokerage to start trading with","publish","open","open","","how-to-make-money-in-forex-trading","","","2020-05-16 15:06:24","2020-05-16 15:06:24","",0,"https://www.digitalmarketingkenya.com/?p=2513",0,"post","",0
2562,2,"2020-04-01 09:08:03","2020-04-01 09:08:03","<!-- wp:paragraph -->
<p>During the unprecedented COVID-19 situation, we are taking steps to protect the health of our team members and <a href=\"https://www.blog.google/inside-google/company-announcements/update-extended-workforce-covid-19/\" target=\"_blank\" rel=\"noreferrer noopener\">reduce the need for people to come into our offices</a>. As a result, there may be some temporary limitations and delays in support as we prioritize critical services.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Our current focus is on the quality and reliability of information on Google Search and Maps. We want to ensure users and business owners have access to essential features like whether the business is open or has special hours. <a href=\"https://support.google.com/business/?p=covid\">Learn about best practices for affected businesses</a>, and what you can do to keep your customers informed.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Please take note of these temporary product changes:</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Business information edits </h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>We will temporarily prioritize reviews for edits critical to health-related businesses. At this time, we will also prioritize reviews for open and closed states, special hours, temporary closures, business descriptions, and <a href=\"https://support.google.com/business/answer/9049526?hl=en&amp;co=GENIE.Platform=Android\">business attributes edits</a> for other verified businesses. Merchants should expect delays for other edit types while we prioritize these critical edits with our limited team. Merchants may experience similar delays when contacting support about these pending edits.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Additionally, some Google My Business merchants may experience delays for all edit types. Should this happen, we encourage you to communicate timely updates to your customers via business attributes and posts during these delays.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><em>Attention: Business posts were temporarily disabled for some businesses and have since resumed. We’re working to reprocess previously rejected posts - please check within a few days to see whether your post is live, or create a new one. In addition, if you are creating a post about business updates related to COVID-19, you can now create a “<a href=\"https://support.google.com/business/?p=covid_posts\">COVID-19 update</a>”, which will be featured more prominently within your Business Profile.</em></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Newly created listings, claims, and verifications</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Our support team will manually review new listings, claims, and verifications for critical health-related businesses. While we prioritize these critical services, please expect a delay for publication of new listings, claims, and verifications for other types of businesses to Google Search and Maps.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Reviews, Q&amp;A, and more</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>New reviews, new review replies, new short names, all videos, and all Q&amp;A are unavailable during this time.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Thank you for your patience. We are working as quickly as possible to restore full functionality to Google My Business. We will provide further updates as they become available.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>source: <a href=\"https://support.google.com/business/answer/9792336?hl=en\">https://support.google.com/business/answer/9792336?hl=en</a></p>
<!-- /wp:paragraph -->","Limited Google My Business functionality due to COVID-19","During the unprecedented COVID-19 situation, we are taking steps to protect the health of our team members and reduce the need for people to come into our offices. As a result, there may be some temporary limitations and delays in support as we prioritize critical services.","publish","open","open","","limited-google-my-business-functionality-due-to-covid-19","","","2020-05-16 14:55:19","2020-05-16 14:55:19","",0,"https://www.digitalmarketingkenya.com/?p=2562",0,"post","",0
2573,2,"2020-04-14 11:51:31","2020-04-14 11:51:31","<!-- wp:paragraph -->
<p>We are a Mombasa website design company, digital marketing agency, social media, and PR agency in one super-creative blender. Digital Marketing Kenya brand tenders and marketing mixologists always serve up unique Website designs coded with today’s modern technologies, social media campaigns, SEO improvements, and revenue-driving marketing strategies for sales leads and customer acquisition. Check out our latest concoctions.</p>
<p>Designing websites have been our bread and butter since 2018, and we’ve been pushing web design boundaries since. Over the years we’ve developed a process that helps us efficiently design websites that capture your audience’s attention and guide them down the conversion funnel.</p>
<p>We meticulously develop adaptable, mobile responsive websites designed that are simple to update and customized for each client’s specific needs. Additionally, we’ve helped our clients develop custom plugins to streamline content updates and easily track statistics, problems, users, actions, and more.</p>
<p>We continue to work with our clients post-launch on digital marketing efforts, web design changes, development improvements, or simply keeping their website up-to-date with the latest browser and security updates if requested.</p>
<h2 class=\"ourS\"><span class=\"ourSEO\">OUR WEBSITE DESIGN PORTFOLIO</span></h2>
<p style=\"text-align: center;\">All of our websites are created in-house. Take a look at our web design portfolio below where you’ll find examples of work completed for many industries.</p>
<p>[sr-partner-os-portfolio]</p>
<p>&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"align\":\"center\"} -->
<h2 class=\"has-text-align-center\">IMPROVING YOUR LOCAL SEO IN Mombasa<br />…while generating great results.</h2>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>Google’s Mobile-First Index</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Google’s shift to crawling and indexing mobile versions of websites first is a reflection of the changing face of information on the internet. More than half of all search requests come from mobile devices and Google is looking to serve detail-rich websites.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Featured Snippets</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>A Featured Snippet provides a short and direct answer to a user’s search query. Being featured as a snippet is invaluable since these are displayed prominently, above even the first organic search result. Any website on Page 1 of Google can be selected as an authoritative source for a Featured Snippet.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Voice Search</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Over 20% of all searches are made by voice. Nearly 50% of smart speaker owners use voice search to find businesses and 22% have used voice assistants to make a purchase. SEO for voice requires information-optimization not just content-optimization.</p>
<p>&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:structured-content/faq {\"elements\":[{\"id\":0,\"question\":\"What is SEO?\",\"answer\":\"Put simply, SEO is a process that forms part of a \\u003ca href=\\u0022https://browsermedia.agency/inbound-marketing/\\u0022 class=\\u0022rank-math-link\\u0022\\u003edigital marketing strategy\\u003c/a\\u003e that focuses on optimising a website to make it more visible in search engine results pages (i.e. in Google search results) with the goal of driving organic traffic to the website. Organic traffic is driven to a website from clicks on these search results.\",\"imageID\":\"\",\"imageAlt\":\"\",\"thumbnailImageUrl\":\"\",\"visible\":true}]} /-->

<!-- wp:structured-content/faq {\"elements\":[{\"id\":0,\"question\":\"Why are keywords important?\",\"answer\":\"Without the right keywords, you'll really struggle to drive valuable traffic to a website! However, choosing the right keywords can be difficult, especially if your business operates in a competitive niche. This is why keyword research is so important. Any SEO agency worth its salt will use multiple tools to identify target keywords, assess how competitive they are, and make suggestions of which pages target keywords should appear on.\",\"imageID\":\"\",\"imageAlt\":\"\",\"thumbnailImageUrl\":\"\",\"visible\":true}]} /-->

<!-- wp:structured-content/faq {\"elements\":[{\"id\":0,\"question\":\"Why are keywords important?\",\"answer\":\"Without the right keywords, you'll really struggle to drive valuable traffic to a website! However, choosing the right keywords can be difficult, especially if your business operates in a competitive niche. This is why keyword research is so important. Any SEO agency worth its salt will use multiple tools to identify target keywords, assess how competitive they are, and make suggestions of which pages target keywords should appear on.\",\"imageID\":\"\",\"imageAlt\":\"\",\"thumbnailImageUrl\":\"\",\"visible\":true}]} /-->

<!-- wp:structured-content/faq {\"elements\":[{\"id\":0,\"question\":\"Why are keywords important?\",\"answer\":\"Without the right keywords, you'll really struggle to drive valuable traffic to a website! However, choosing the right keywords can be difficult, especially if your business operates in a competitive niche. This is why keyword research is so important. Any SEO agency worth its salt will use multiple tools to identify target keywords, assess how competitive they are, and make suggestions of which pages target keywords should appear on.\",\"imageID\":\"\",\"imageAlt\":\"\",\"thumbnailImageUrl\":\"\",\"visible\":true}]} /-->","Mombasa Web Development","","publish","open","open","","mombasa-website-design","","","2020-05-11 15:41:53","2020-05-11 15:41:53","",0,"https://www.digitalmarketingkenya.com/?p=2573",0,"post","",0
2619,2,"2020-05-11 11:07:41","2020-05-11 11:07:41","<!-- wp:paragraph -->
<p><span class=\"f\"> <a class=\"rank-math-link\" href=\"https://elementor.com/pro/?ref=11950\" target=\"_blank\" rel=\"noreferrer noopener\">Elementor</a></span> is a page builder plugin that replaces the basic WordPress editor with a live frontend editor, so you can create complex layouts visually, and design your <a href=\"https://www.digitalmarketingkenya.com/services/web-development/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">website</a> live, without having to switch between the editor and the preview mode.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Installing Elementor</h2>
<p><img class=\"alignnone wp-image-2647 size-full\" src=\"https://www.digitalmarketingkenya.com/wp-content/uploads/2020/05/file-VelGqFbBiN.gif\" alt=\"elementor page builder plugin\" width=\"600\" height=\"412\" /></p>
<p>&nbsp;</p>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Make sure you have your WordPress installation ready, along with the <a class=\"rank-math-link\" href=\"https://elementor.com/pro/?ref=11950\" target=\"_blank\" rel=\"noreferrer noopener\">Elementor page builder</a> installed. In the WordPress dashboard, go to ‘Plugins’ &gt; ‘Add new’, and enter ‘Elementor’ in the search bar. Then click the ‘Install’ button, and then the ‘activate’ button.</p>
<p>&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":2621,\"sizeSlug\":\"large\"} -->
<figure class=\"wp-block-image size-large\"><img class=\"wp-image-2621\" src=\"https://www.digitalmarketingkenya.com/wp-content/uploads/2020/05/Screen-Shot-2020-05-11-at-13.30.03.png\" alt=\"Elementor website design\" /></figure>
<!-- /wp:image -->

<!-- wp:heading {\"level\":3} -->
<h3>Elementor Settings</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Elementor has a handful of top-level settings you can find directly in the plugin. This allows you to do things like check which types of posts Elementor works with, set default font and spacing, and adjust responsiveness settings. </p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":2623,\"sizeSlug\":\"large\"} -->
<figure class=\"wp-block-image size-large\"><img class=\"wp-image-2623\" src=\"https://www.digitalmarketingkenya.com/wp-content/uploads/2020/05/Screen-Shot-2020-05-11-at-13.40.17.png\" alt=\"Elementor Settings web site design kenya\" /></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Widgets</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Elementor is based on a drag-and-drop editor that accommodates sections, columns, and widgets. The system is broken down as follows:</p>
<ul>
<li><img class=\"alignright wp-image-2624 size-medium\" src=\"https://www.digitalmarketingkenya.com/wp-content/uploads/2020/05/Screen-Shot-2020-05-11-at-13.43.38-121x300.png\" alt=\"\" width=\"121\" height=\"300\" /></li>
</ul>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul>
<li>Section</li>
<li>Column</li>
<li>Heading</li>
<li>Image</li>
<li>Text Editor</li>
<li>Video</li>
<li>Button</li>
<li>Divider</li>
<li>Icon</li>
<li>Spacer</li>
<li>Google Maps</li>
</ul>
<!-- /wp:list -->

<!-- wp:image {\"id\":2624,\"sizeSlug\":\"large\"} --><!-- /wp:image -->

<!-- wp:heading {\"level\":3} -->
<h3>How To Create a Single Post Template in Elementor</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The Elementor WordPress Page Builder offers limitless design possibilities. What you do and can accomplish will be based on the limits of your imagination.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>When you use a theme for your website, you get your theme’s “Single Post Template.” It is made out of different elements which include:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul>
<li>Post Title</li>
<li>Post Content</li>
<li>Featured Image</li>
<li>Metadata</li>
<li>Comments</li>
<li>Etc.</li>
</ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>With Elementor you can control the layout &amp; design of the Single Post Template – on any theme you are working with.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {\"level\":3} -->
<h3 id=\"create-a-single-post-template-in-elementor\">Create a Single Post Template in Elementor Page Builder</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To accomplish this go to Templates &gt; Theme Builder &gt; Single &gt; Add New. Then select “Single” from the dropdown.</p>
<!-- /wp:paragraph -->

<!-- wp:image {\"id\":2622,\"sizeSlug\":\"large\"} -->
<figure class=\"wp-block-image size-large\"><img class=\"wp-image-2622\" src=\"https://www.digitalmarketingkenya.com/wp-content/uploads/2020/05/Screen-Shot-2020-05-11-at-13.36.18.png\" alt=\"elementor_templates\" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Under Select Post Type, choose post type you wish to create e.g post, page, services or even products e.t.c, and click Create Template.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Now choose a post block and insert. You can also design your own if you want. After you have finished designing, click “Publish” and choose a condition.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>Note: </strong>Only posts that use Default Template will have the Single Post Template applied to them, even if they otherwise meet the Display Conditions criteria. Posts that use Canvas or Full-Width template (or any template other than Default) will not have the Single Post Template applied to them.</p>
<h2>How to Use Advanced Features in Elementor</h2>
<p>Elementor’s pro version offers advanced features to take your WordPress website to the next level. You get access to more widgets, a theme builder, a pop-up builder, and custom field capabilities.</p>
<h3>How to Create a Popup in Elementor</h3>
<p>Pop-up forms help you capture email addresses from leads. Elementor makes creating these forms easier with its pop-up builder. Follow these instructions to create your own popup.</p>
<ul>
<li>In your WordPress dashboard, go to <em>Templates &gt; Popups &gt; Add New</em>.</li>
<li>Name your template and click <em>Create Template</em>.</li>
<li>Choose a template from the Library or create your own design.</li>
<li>Click <em>Publish</em>, then <em>Save and Close</em>.</li>
<li>Open a new page in Elementor (CTRL + E for PC users; Command + E for Mac users).</li>
<li>Drag in a button widget.</li>
<li>Under <em>Layout</em>, choose<em> Link &gt; Dynamic &gt; Actions &gt; Popup</em>.</li>
<li>Go to <em>Popup &gt; Open Popup</em> and select the popup you created.</li>
<li>Go to the live page.</li>
<li>Then, click on the button and see the popup appear.</li>
<li>Here’s how it might look:</li>
</ul>
<p><img class=\"alignnone wp-image-2648 size-full\" src=\"https://www.digitalmarketingkenya.com/wp-content/uploads/2020/05/how-to-use-Elementor-popup-builder.gif\" alt=\"elementor pro page \" width=\"1024\" height=\"442\" /></p>
<p>&nbsp;</p>
<h2>Frequently Asked Questions About Elementor Page Builder</h2>
<p>Do you still have questions about Elementor? No problem. Here are a few frequently asked questions about the plugin along with the answers.</p>
<ul>
<li><strong>How much does Elementor cost?</strong></li>
</ul>
<p>Elementor is a free plugin for WordPress users. If you want to unlock additional features, you can get the pro version. You can find the <a href=\"https://elementor.com/pricing/?ref=11950\" target=\"_blank\" rel=\"noopener noreferrer\">prices here</a>.</p>
<ul>
<li><strong>Does Elementor work with all themes?</strong></li>
</ul>
<p>Yes, it works with all themes that follow WordPress’ coding standards.</p>
<ul>
<li><strong>Does Elementor slow down your website?</strong></li>
</ul>
<!-- /wp:paragraph -->","The Beginner's Guide to Using Elementor in WordPress","","publish","open","open","","elementor-page-builder","","","2020-05-11 15:23:12","2020-05-11 15:23:12","",0,"https://www.digitalmarketingkenya.com/?p=2619",0,"post","",0
2788,2,"2020-07-15 10:01:29","2020-07-15 10:01:29","Eloquent also offers advanced subquery support, which allows you to pull information from related tables in a single query. For example, let's imagine that we have a table of flight <code class=\" language-php\">destinations</code> and a table of <code class=\" language-php\">flights</code> to destinations. The <code class=\" language-php\">flights</code> table contains an <code class=\" language-php\">arrived_at</code> a column which indicates when the flight arrived at the destination.

Using the subquery functionality available to the <code class=\" language-php\">select</code> and <code class=\" language-php\">addSelect</code> methods, we can select all of the <code class=\" language-php\">destinations</code> and the name of the flight that most recently arrived at that destination using a single query:
<pre class=\" language-php\"><code class=\" language-php\"><span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Destination</span><span class=\"token punctuation\">;</span>
<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Flight</span><span class=\"token punctuation\">;</span>

<span class=\"token keyword\">return</span> Destination<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">addSelect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'last_flight'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> Flight<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'name'</span><span class=\"token punctuation\">)</span>
    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">whereColumn</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'destination_id'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'destinations.id'</span><span class=\"token punctuation\">)</span>
    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">orderBy</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'arrived_at'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'desc'</span><span class=\"token punctuation\">)</span>
    <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>
<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>
<h4>Subquery Ordering</h4>
In addition, the query builder's <code class=\" language-php\">orderBy</code> the function supports subqueries. We may use this functionality to sort all destinations based on when the last flight arrived at that destination. Again, this may be done while executing a single query against the database:
<pre class=\" language-php\"><code class=\" language-php\"><span class=\"token keyword\">return</span> Destination<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">orderByDesc</span><span class=\"token punctuation\">(</span>
    Flight<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'arrived_at'</span><span class=\"token punctuation\">)</span>
        <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">whereColumn</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'destination_id'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'destinations.id'</span><span class=\"token punctuation\">)</span>
        <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">orderBy</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'arrived_at'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'desc'</span><span class=\"token punctuation\">)</span>
        <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>
<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","Eloquent Advanced Subqueries","","publish","open","open","","eloquent-advanced-subqueries","","","2020-07-15 10:06:08","2020-07-15 10:06:08","",0,"https://www.digitalmarketingkenya.com/?p=2788",0,"post","",0
2900,2,"2021-07-23 10:12:24","2021-07-23 10:12:24","<p id=\"c2bf\" class=\"he hf fo hg b hh id hi hj hk ie hl hm hn if ho hp hq ig hr hs ht ih hu hv hx dn gk\" data-selectable-paragraph=\"\">For the project I’m working on we use GitHub. Recently new satellite app was developed by an external team, and this team uses Bitbucket. It would be nice to have sources synchronized to our GitHub organization so we can have a central place for all of it.</p>
<p id=\"bf5e\" class=\"he hf fo hg b hh id hi hj hk ie hl hm hn if ho hp hq ig hr hs ht ih hu hv hx dn gk\" data-selectable-paragraph=\"\">Repo mirroring can be accomplished using Bitbucket <strong class=\"hg da\">pipelines</strong>. It is relatively easy to set up mirroring using <strong class=\"hg da\">SSH key</strong> profiled as <strong class=\"hg da\">deployment key</strong> with <strong class=\"hg da\">write access</strong> on GitHub.</p>

<ul class=\"\">
 	<li id=\"9ce7\" class=\"he hf fo hg b hh id hi hj hk ie hl hm hn if ho hp hq ig hr hs ht ih hu hv hx ii ij ik gk\" data-selectable-paragraph=\"\">On GitHub, create new repository.</li>
 	<li id=\"a806\" class=\"he hf fo hg b hh il hi hj hk im hl hm hn in ho hp hq io hr hs ht ip hu hv hx ii ij ik gk\" data-selectable-paragraph=\"\">In Bitbucket repository, create <code class=\"hy hz ia ib ic b\">bitbucket-pipelines.yml</code> as following:</li>
</ul>
<pre class=\"iq ir is it iu iv iw ix\"><span id=\"3bc4\" class=\"gk iy iz fo ic b do ja jb s jc\" data-selectable-paragraph=\"\">clone:
  depth: full
pipelines:
  default:
    - step:
        script:
          - git push --mirror <a class=\"dt jd\" href=\"mailto:git@github.com\" rel=\"noopener nofollow\">git@github.com</a>:YourOrg/mirror-repo.git</span></pre>
<ul class=\"\">
 	<li id=\"1363\" class=\"he hf fo hg b hh id hi hj hk ie hl hm hn if ho hp hq ig hr hs ht ih hu hv hx ii ij ik gk\" data-selectable-paragraph=\"\">Commit pipeline file. This will run pipeline and fail (yet).</li>
 	<li id=\"cbdf\" class=\"he hf fo hg b hh il hi hj hk im hl hm hn in ho hp hq io hr hs ht ip hu hv hx ii ij ik gk\" data-selectable-paragraph=\"\">On Bitbucket, go to the repository’s <strong class=\"hg da\">Settings / SSH keys</strong> and generate a new SSH key. Copy resulting public key to clipboard.</li>
 	<li id=\"73de\" class=\"he hf fo hg b hh il hi hj hk im hl hm hn in ho hp hq io hr hs ht ip hu hv hx ii ij ik gk\" data-selectable-paragraph=\"\">In <strong class=\"hg da\">Known Hosts </strong>section on the same page enter <code class=\"hy hz ia ib ic b\">github.com</code> and click <code class=\"hy hz ia ib ic b\">fetch</code> and then <code class=\"hy hz ia ib ic b\">add host</code>.</li>
 	<li id=\"0b73\" class=\"he hf fo hg b hh il hi hj hk im hl hm hn in ho hp hq io hr hs ht ip hu hv hx ii ij ik gk\" data-selectable-paragraph=\"\">On GitHub, in repository settings add a deployment key (<strong class=\"hg da\">Settings / Deploy Keys</strong>) granting <strong class=\"hg da\">write permission</strong>, and add the public key generated in Bitbucket.</li>
 	<li data-selectable-paragraph=\"\"><img class=\"alignnone size-large wp-image-2901\" src=\"https://www.digitalmarketingkenya.com/wp-content/uploads/2021/07/bit_pipeline_mirror-1024x175.png\" alt=\"how to mirror bitbucket with github\" width=\"1024\" height=\"175\" /></li>
 	<li id=\"70ca\" class=\"he hf fo hg b hh il hi hj hk im hl hm hn in ho hp hq io hr hs ht ip hu hv hx ii ij ik gk\" data-selectable-paragraph=\"\">Now on Bitbucket go to pipelines and re-run failed sync pipeline. This time it should succeed.</li>
</ul>
<p id=\"4a6b\" class=\"he hf fo hg b hh id hi hj hk ie hl hm hn if ho hp hq ig hr hs ht ih hu hv hx dn gk\" data-selectable-paragraph=\"\">Now on every push BitBucket will mirror changes to your repo.</p>","Mirror (SYNC) Bitbucket Repository to GitHub Repository.","","publish","open","open","","mirror-sync-bitbucket-repository-to-github-repository","","","2021-07-23 10:13:11","2021-07-23 10:13:11","",0,"https://www.digitalmarketingkenya.com/?p=2900",0,"post","",0
